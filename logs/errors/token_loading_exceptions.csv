multipartparser.py,"['multipartparser.py', '{""type"": ""variable"", ""line"": 326, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
request.py,"['request.py', '{""type"": ""function_def"", ""line"": 355, ""name"": ""__iter__"", ""args"": [""self""], ""defaults"": [], ""return"": ""iter"", ""returnArgs"": [""self.readline"",   Expecting value: line 1 column 143 (char 142)']"
response.py,"['response.py', '{""type"": ""function_def"", ""line"": 288, ""name"": ""__init__"", ""args"": [""self"", ""content"", ""args""], ""defaults"": [  Expecting value: line 1 column 109 (char 108)']"
__init__.py,"['__init__.py', '{""type"": ""list"", ""line"": 2257, ""name"": ""empty_values"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [null,   Expecting value: line 1 column 136 (char 135)']"
debug.py,"['debug.py', '{""type"": ""variable"", ""line"": 373, ""name"": ""match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 186, ""name"": ""bits"", ""value"": null, ""valueSrc"": ""uri.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 118 (char 117)']"
signing.py,"['signing.py', '{""type"": ""function_def"", ""line"": 62, ""name"": ""b64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [  Expecting value: line 1 column 150 (char 149)']"
wsgi.py,"['wsgi.py', '{""type"": ""variable"", ""line"": 14, ""name"": ""_slashes_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
filebased.py,"['filebased.py', '{""type"": ""function_call"", ""line"": 47, ""name"": ""self.stream.write"", ""args"": [""message.message"",   Expecting value: line 1 column 96 (char 95)']"
uploadedfile.py,"['uploadedfile.py', '{""type"": ""variable"", ""line"": 104, ""name"": ""content"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""content"",   Expecting value: line 1 column 139 (char 138)']"
base.py,"['base.py', '{""type"": ""tuple"", ""line"": 103, ""name"": null, ""value"": null, ""valueSrc"": ""encoded_data.split"", ""isInput"": false, ""names"": [""hash"", ""serialized""], ""args"": [  Expecting value: line 1 column 155 (char 154)']"
geometry.py,"['geometry.py', '{""type"": ""variable"", ""line"": 119, ""name"": ""parts"", ""value"": null, ""valueSrc"": ""ewkt.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
layer.py,"['layer.py', '{""type"": ""variable"", ""line"": 37, ""name"": null, ""value"": null, ""valueSrc"": ""self.test_capability"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 126 (char 125)']"
libgdal.py,"['libgdal.py', '{""type"": ""function_def"", ""line"": 77, ""name"": ""gdal_version"", ""args"": [], ""defaults"": [], ""return"": ""_version_info"", ""returnArgs"": [  Expecting value: line 1 column 132 (char 131)']"
srs.py,"['srs.py', '{""type"": ""variable"", ""line"": 79, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""c_char_p"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 115 (char 114)']"
PcxImagePlugin.py,"['PcxImagePlugin.py', '{""type"": ""function_call"", ""line"": 152, ""name"": ""fp.write"", ""args"": [""o8"", ""o8"", ""o8"", ""o8"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"",   Expecting value: line 1 column 135 (char 134)']"
GifImagePlugin.py,"['GifImagePlugin.py', '{""type"": ""comparison"", ""line"": 177, ""pairs"": [[""s"",   Expecting value: line 1 column 53 (char 52)']"
JpegImagePlugin.py,"['JpegImagePlugin.py', '{""type"": ""variable"", ""line"": 385, ""name"": ""s"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
TiffImagePlugin.py,"['TiffImagePlugin.py', '{""type"": ""variable"", ""line"": 79, ""name"": ""II"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
ImImagePlugin.py,"['ImImagePlugin.py', '{""type"": ""variable"", ""line"": 97, ""name"": ""split"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
GbrImagePlugin.py,"['GbrImagePlugin.py', '{""type"": ""comparison"", ""line"": 66, ""pairs"": [[""magic_number"",   Expecting value: line 1 column 63 (char 62)']"
XpmImagePlugin.py,"['XpmImagePlugin.py', '{""type"": ""variable"", ""line"": 27, ""name"": ""xpm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WebPImagePlugin.py,"['WebPImagePlugin.py', '{""type"": ""dict"", ""line"": 21, ""name"": ""_VP8_MODES_BY_IDENTIFIER"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 138 (char 137)']"
Image.py,"['Image.py', '{""type"": ""function_def"", ""line"": 769, ""name"": ""tobitmap"", ""args"": [""self"", ""name""], ""defaults"": [""image""], ""return"": ""b\'\'.join"", ""returnArgs"": [""None.encode"", ""ascii"", ""None.encode"", ""ascii"", ""None.encode"", ""ascii"", [],   Expecting value: line 1 column 221 (char 220)']"
BmpImagePlugin.py,"['BmpImagePlugin.py', '{""type"": ""function_call"", ""line"": 321, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
IcoImagePlugin.py,"['IcoImagePlugin.py', '{""type"": ""variable"", ""line"": 39, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
FontFile.py,"['FontFile.py', '{""type"": ""function_call"", ""line"": 105, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
PpmImagePlugin.py,"['PpmImagePlugin.py', '{""type"": ""variable"", ""line"": 27, ""name"": ""b_whitespace"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
ImtImagePlugin.py,"['ImtImagePlugin.py', '{""type"": ""variable"", ""line"": 30, ""name"": ""field"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
ImageQt.py,"['ImageQt.py', '{""type"": ""function_call"", ""line"": 138, ""name"": ""new_data.append"", ""args"": [  Expecting value: line 1 column 76 (char 75)']"
PixarImagePlugin.py,"['PixarImagePlugin.py', '{""type"": ""comparison"", ""line"": 49, ""pairs"": [[""s"",   Expecting value: line 1 column 52 (char 51)']"
ImageFont.py,"['ImageFont.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""file.readline.split"", ""args"": [  Expecting value: line 1 column 79 (char 78)']"
XbmImagePlugin.py,"['XbmImagePlugin.py', '{""type"": ""variable"", ""line"": 30, ""name"": ""xbm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WalImageFile.py,"['WalImageFile.py', '{""type"": ""variable"", ""line"": 78, ""name"": ""quake2palette"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
FtexImagePlugin.py,"['FtexImagePlugin.py', '{""type"": ""variable"", ""line"": 59, ""name"": ""MAGIC"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
BdfFontFile.py,"['BdfFontFile.py', '{""type"": ""variable"", ""line"": 61, ""name"": ""i"", ""value"": null, ""valueSrc"": ""s.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 111 (char 110)']"
DdsImagePlugin.py,"['DdsImagePlugin.py', '{""type"": ""comparison"", ""line"": 140, ""pairs"": [[""fourcc"",   Expecting value: line 1 column 58 (char 57)']"
XVThumbImagePlugin.py,"['XVThumbImagePlugin.py', '{""type"": ""variable"", ""line"": 27, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
IcnsImagePlugin.py,"['IcnsImagePlugin.py', '{""type"": ""comparison"", ""line"": 43, ""pairs"": [[""sig"",   Expecting value: line 1 column 54 (char 53)']"
EpsImagePlugin.py,"['EpsImagePlugin.py', '{""type"": ""variable"", ""line"": 175, ""name"": ""s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""self.char"",   Expecting value: line 1 column 135 (char 134)']"
SgiImagePlugin.py,"['SgiImagePlugin.py', '{""type"": ""function_call"", ""line"": 186, ""name"": ""fp.write"", ""args"": [""struct.pack"", ""4s"",   Expecting value: line 1 column 90 (char 89)']"
Jpeg2KImagePlugin.py,"['Jpeg2KImagePlugin.py', '{""type"": ""comparison"", ""line"": 78, ""pairs"": [[""tbox"",   Expecting value: line 1 column 55 (char 54)']"
PdfParser.py,"['PdfParser.py', '{""type"": ""function_call"", ""line"": 175, ""name"": ""f.write"", ""args"": [  Expecting value: line 1 column 68 (char 67)']"
TgaImagePlugin.py,"['TgaImagePlugin.py', '{""type"": ""variable"", ""line"": 114, ""name"": null, ""value"": null, ""valueSrc"": ""ImagePalette.raw"", ""isInput"": false, ""args"": [""BGR;16"",   Expecting value: line 1 column 133 (char 132)']"
ImageFile.py,"['ImageFile.py', '{""type"": ""variable"", ""line"": 209, ""name"": ""prefix"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
CurImagePlugin.py,"['CurImagePlugin.py', '{""type"": ""variable"", ""line"": 54, ""name"": ""m"", ""value"":   Expecting value: line 1 column 56 (char 55)']"
PngImagePlugin.py,"['PngImagePlugin.py', '{""type"": ""variable"", ""line"": 52, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
ImageDraw.py,"['ImageDraw.py', '{""type"": ""variable"", ""line"": 253, ""name"": ""split_character"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""\\n"",   Expecting value: line 1 column 142 (char 141)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 595, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 21, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
_inputstream.py,"['_inputstream.py', '{""type"": ""tuple"", ""line"": 697, ""name"": ""methodDispatch"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": ""errors[0]"", ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
resources.py,"['resources.py', '{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
scripts.py,"['scripts.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
wheel.py,"['wheel.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 197, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 471, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
models.py,"['models.py', '{""type"": ""variable"", ""line"": 828, ""name"": null, ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""b\'\'.join"",   Expecting value: line 1 column 135 (char 134)']"
fallback.py,"['fallback.py', '{""type"": ""function_def"", ""line"": 32, ""name"": ""__init__"", ""args"": [""self"", ""s""], ""defaults"": [  Expecting value: line 1 column 94 (char 93)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 215, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""variable"", ""line"": 26, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
low_level.py,"['low_level.py', '{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 101 (char 100)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
filewrapper.py,"['filewrapper.py', '{""type"": ""comparison"", ""line"": 71, ""pairs"": [[""amt"", 2], [""data"",   Expecting value: line 1 column 67 (char 66)']"
serialize.py,"['serialize.py', '{""type"": ""function_def"", ""line"": 22, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""b\',\'.join"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 595, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 21, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
_inputstream.py,"['_inputstream.py', '{""type"": ""tuple"", ""line"": 697, ""name"": ""methodDispatch"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": ""errors[0]"", ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
resources.py,"['resources.py', '{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
scripts.py,"['scripts.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
wheel.py,"['wheel.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 197, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 471, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
models.py,"['models.py', '{""type"": ""variable"", ""line"": 828, ""name"": null, ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""b\'\'.join"",   Expecting value: line 1 column 135 (char 134)']"
fallback.py,"['fallback.py', '{""type"": ""function_def"", ""line"": 32, ""name"": ""__init__"", ""args"": [""self"", ""s""], ""defaults"": [  Expecting value: line 1 column 94 (char 93)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 215, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""variable"", ""line"": 26, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
low_level.py,"['low_level.py', '{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 101 (char 100)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
filewrapper.py,"['filewrapper.py', '{""type"": ""comparison"", ""line"": 71, ""pairs"": [[""amt"", 2], [""data"",   Expecting value: line 1 column 67 (char 66)']"
serialize.py,"['serialize.py', '{""type"": ""function_def"", ""line"": 22, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""b\',\'.join"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
unicode_utils.py,"['unicode_utils.py', '{""type"": ""variable"", ""line"": 48, ""name"": ""CODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 123 (char 122)']"
glob.py,"['glob.py', '{""type"": ""variable"", ""line"": 146, ""name"": ""magic_check_bytes"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
build_py.py,"['build_py.py', '{""type"": ""comparison"", ""line"": 177, ""pairs"": [[""contents"",   Expecting value: line 1 column 60 (char 59)']"
upload_docs.py,"['upload_docs.py', '{""type"": ""variable"", ""line"": 130, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
upload.py,"['upload.py', '{""type"": ""function_call"", ""line"": 136, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 71 (char 70)']"
application.py,"['application.py', '{""type"": ""variable"", ""line"": 103, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
status.py,"['status.py', '{""type"": ""variable"", ""line"": 58, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
forms.py,"['forms.py', '{""type"": ""comparison"", ""line"": 288, ""pairs"": [[""fname"",   Expecting value: line 1 column 57 (char 56)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 696, ""name"": ""data"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
wps.py,"['wps.py', '{""type"": ""variable"", ""line"": 866, ""name"": ""content"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
crawler.py,"['crawler.py', '{""type"": ""variable"", ""line"": 48, ""name"": ""linkregex"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 123 (char 122)']"
import_wordpress.py,"['import_wordpress.py', '{""type"": ""comparison"", ""line"": 436, ""pairs"": [[""line"",   Expecting value: line 1 column 56 (char 55)']"
bundles.py,"['bundles.py', '{""type"": ""function_call"", ""line"": 70, ""name"": ""out_fh.write"", ""args"": [  Expecting value: line 1 column 72 (char 71)']"
sitemap.py,"['sitemap.py', '{""type"": ""list"", ""line"": 184, ""name"": ""robots_directives"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 134 (char 133)']"
extras.py,"['extras.py', '{""type"": ""function_def"", ""line"": 805, ""name"": ""_getquoted_8"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 107 (char 106)']"
extensions.py,"['extensions.py', '{""type"": ""function_def"", ""line"": 120, ""name"": ""getquoted"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 104 (char 103)']"
_range.py,"['_range.py', '{""type"": ""variable"", ""line"": 260, ""name"": ""lower"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 482, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 16, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
_inputstream.py,"['_inputstream.py', '{""type"": ""tuple"", ""line"": 697, ""name"": ""methodDispatch"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": ""errors[0]"", ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
resources.py,"['resources.py', '{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
scripts.py,"['scripts.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
wheel.py,"['wheel.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 189, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 462, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
fallback.py,"['fallback.py', '{""type"": ""function_def"", ""line"": 32, ""name"": ""__init__"", ""args"": [""self"", ""s""], ""defaults"": [  Expecting value: line 1 column 94 (char 93)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 200, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 88, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""function_def"", ""line"": 278, ""name"": ""_flush_decoder"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 109 (char 108)']"
securetransport.py,"['securetransport.py', '{""type"": ""function_call"", ""line"": 55, ""name"": ""memoryview"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
low_level.py,"['low_level.py', '{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 101 (char 100)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
filewrapper.py,"['filewrapper.py', '{""type"": ""comparison"", ""line"": 69, ""pairs"": [[""amt"", 2], [""data"",   Expecting value: line 1 column 67 (char 66)']"
serialize.py,"['serialize.py', '{""type"": ""function_def"", ""line"": 22, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""b\',\'.join"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
main.py,"['main.py', '{""type"": ""variable"", ""line"": 61, ""name"": ""shebang_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
isort.py,"['isort.py', '{""type"": ""variable"", ""line"": 1010, ""name"": ""pattern"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 123 (char 122)']"
multipartparser.py,"['multipartparser.py', '{""type"": ""variable"", ""line"": 326, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
response.py,"['response.py', '{""type"": ""function_def"", ""line"": 288, ""name"": ""__init__"", ""args"": [""self"", ""content"", ""args""], ""defaults"": [  Expecting value: line 1 column 109 (char 108)']"
__init__.py,"['__init__.py', '{""type"": ""list"", ""line"": 2246, ""name"": ""empty_values"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [null,   Expecting value: line 1 column 136 (char 135)']"
debug.py,"['debug.py', '{""type"": ""variable"", ""line"": 373, ""name"": ""match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 189, ""name"": ""bits"", ""value"": null, ""valueSrc"": ""uri.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 118 (char 117)']"
http.py,"['http.py', '{""type"": ""function_def"", ""line"": 221, ""name"": ""urlsafe_base64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.rstrip"", ""returnArgs"": [  Expecting value: line 1 column 163 (char 162)']"
signing.py,"['signing.py', '{""type"": ""function_def"", ""line"": 62, ""name"": ""b64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [  Expecting value: line 1 column 150 (char 149)']"
wsgi.py,"['wsgi.py', '{""type"": ""variable"", ""line"": 14, ""name"": ""_slashes_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
filebased.py,"['filebased.py', '{""type"": ""function_call"", ""line"": 47, ""name"": ""self.stream.write"", ""args"": [""message.message"",   Expecting value: line 1 column 96 (char 95)']"
uploadedfile.py,"['uploadedfile.py', '{""type"": ""variable"", ""line"": 104, ""name"": ""content"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""content"",   Expecting value: line 1 column 139 (char 138)']"
base.py,"['base.py', '{""type"": ""tuple"", ""line"": 104, ""name"": null, ""value"": null, ""valueSrc"": ""encoded_data.split"", ""isInput"": false, ""names"": [""hash"", ""serialized""], ""args"": [  Expecting value: line 1 column 155 (char 154)']"
geometry.py,"['geometry.py', '{""type"": ""variable"", ""line"": 113, ""name"": ""parts"", ""value"": null, ""valueSrc"": ""ewkt.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
layer.py,"['layer.py', '{""type"": ""variable"", ""line"": 37, ""name"": null, ""value"": null, ""valueSrc"": ""self.test_capability"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 126 (char 125)']"
libgdal.py,"['libgdal.py', '{""type"": ""function_def"", ""line"": 77, ""name"": ""gdal_version"", ""args"": [], ""defaults"": [], ""return"": ""_version_info"", ""returnArgs"": [  Expecting value: line 1 column 132 (char 131)']"
srs.py,"['srs.py', '{""type"": ""variable"", ""line"": 79, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""c_char_p"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 115 (char 114)']"
glob.py,"['glob.py', '{""type"": ""variable"", ""line"": 148, ""name"": ""magic_check_bytes"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
build_py.py,"['build_py.py', '{""type"": ""comparison"", ""line"": 177, ""pairs"": [[""contents"",   Expecting value: line 1 column 60 (char 59)']"
upload_docs.py,"['upload_docs.py', '{""type"": ""variable"", ""line"": 130, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
PcxImagePlugin.py,"['PcxImagePlugin.py', '{""type"": ""function_call"", ""line"": 149, ""name"": ""fp.write"", ""args"": [""o8"", ""o8"", ""o8"", ""o8"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"",   Expecting value: line 1 column 135 (char 134)']"
GifImagePlugin.py,"['GifImagePlugin.py', '{""type"": ""comparison"", ""line"": 173, ""pairs"": [[""s"",   Expecting value: line 1 column 53 (char 52)']"
JpegImagePlugin.py,"['JpegImagePlugin.py', '{""type"": ""variable"", ""line"": 350, ""name"": ""s"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
TiffImagePlugin.py,"['TiffImagePlugin.py', '{""type"": ""variable"", ""line"": 76, ""name"": ""II"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
ImImagePlugin.py,"['ImImagePlugin.py', '{""type"": ""variable"", ""line"": 95, ""name"": ""split"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
GbrImagePlugin.py,"['GbrImagePlugin.py', '{""type"": ""comparison"", ""line"": 66, ""pairs"": [[""magic_number"",   Expecting value: line 1 column 63 (char 62)']"
XpmImagePlugin.py,"['XpmImagePlugin.py', '{""type"": ""variable"", ""line"": 25, ""name"": ""xpm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WebPImagePlugin.py,"['WebPImagePlugin.py', '{""type"": ""dict"", ""line"": 21, ""name"": ""_VP8_MODES_BY_IDENTIFIER"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 138 (char 137)']"
Image.py,"['Image.py', '{""type"": ""function_def"", ""line"": 758, ""name"": ""tobitmap"", ""args"": [""self"", ""name""], ""defaults"": [""image""], ""return"": ""b\'\'.join"", ""returnArgs"": [""None.encode"", ""ascii"", ""None.encode"", ""ascii"", ""None.encode"", ""ascii"", [],   Expecting value: line 1 column 221 (char 220)']"
BmpImagePlugin.py,"['BmpImagePlugin.py', '{""type"": ""function_call"", ""line"": 290, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
IcoImagePlugin.py,"['IcoImagePlugin.py', '{""type"": ""variable"", ""line"": 37, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
FontFile.py,"['FontFile.py', '{""type"": ""function_call"", ""line"": 105, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
PpmImagePlugin.py,"['PpmImagePlugin.py', '{""type"": ""variable"", ""line"": 25, ""name"": ""b_whitespace"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
ImtImagePlugin.py,"['ImtImagePlugin.py', '{""type"": ""variable"", ""line"": 28, ""name"": ""field"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
ImageQt.py,"['ImageQt.py', '{""type"": ""function_call"", ""line"": 127, ""name"": ""new_data.append"", ""args"": [  Expecting value: line 1 column 76 (char 75)']"
PixarImagePlugin.py,"['PixarImagePlugin.py', '{""type"": ""comparison"", ""line"": 47, ""pairs"": [[""s"",   Expecting value: line 1 column 52 (char 51)']"
ImageFont.py,"['ImageFont.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""file.readline.split"", ""args"": [  Expecting value: line 1 column 79 (char 78)']"
XbmImagePlugin.py,"['XbmImagePlugin.py', '{""type"": ""variable"", ""line"": 28, ""name"": ""xbm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WalImageFile.py,"['WalImageFile.py', '{""type"": ""variable"", ""line"": 78, ""name"": ""quake2palette"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
FtexImagePlugin.py,"['FtexImagePlugin.py', '{""type"": ""variable"", ""line"": 52, ""name"": ""MAGIC"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
BdfFontFile.py,"['BdfFontFile.py', '{""type"": ""variable"", ""line"": 61, ""name"": ""i"", ""value"": null, ""valueSrc"": ""s.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 111 (char 110)']"
DdsImagePlugin.py,"['DdsImagePlugin.py', '{""type"": ""comparison"", ""line"": 131, ""pairs"": [[""fourcc"",   Expecting value: line 1 column 58 (char 57)']"
XVThumbImagePlugin.py,"['XVThumbImagePlugin.py', '{""type"": ""variable"", ""line"": 25, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
IcnsImagePlugin.py,"['IcnsImagePlugin.py', '{""type"": ""comparison"", ""line"": 43, ""pairs"": [[""sig"",   Expecting value: line 1 column 54 (char 53)']"
EpsImagePlugin.py,"['EpsImagePlugin.py', '{""type"": ""variable"", ""line"": 174, ""name"": ""s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""self.char"",   Expecting value: line 1 column 135 (char 134)']"
SgiImagePlugin.py,"['SgiImagePlugin.py', '{""type"": ""function_call"", ""line"": 182, ""name"": ""fp.write"", ""args"": [""struct.pack"", ""4s"",   Expecting value: line 1 column 90 (char 89)']"
Jpeg2KImagePlugin.py,"['Jpeg2KImagePlugin.py', '{""type"": ""comparison"", ""line"": 75, ""pairs"": [[""tbox"",   Expecting value: line 1 column 55 (char 54)']"
PdfParser.py,"['PdfParser.py', '{""type"": ""function_call"", ""line"": 175, ""name"": ""f.write"", ""args"": [  Expecting value: line 1 column 68 (char 67)']"
TgaImagePlugin.py,"['TgaImagePlugin.py', '{""type"": ""variable"", ""line"": 112, ""name"": null, ""value"": null, ""valueSrc"": ""ImagePalette.raw"", ""isInput"": false, ""args"": [""BGR;16"",   Expecting value: line 1 column 133 (char 132)']"
ImageFile.py,"['ImageFile.py', '{""type"": ""variable"", ""line"": 206, ""name"": ""prefix"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
CurImagePlugin.py,"['CurImagePlugin.py', '{""type"": ""variable"", ""line"": 52, ""name"": ""m"", ""value"":   Expecting value: line 1 column 56 (char 55)']"
PngImagePlugin.py,"['PngImagePlugin.py', '{""type"": ""variable"", ""line"": 50, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
ImageDraw.py,"['ImageDraw.py', '{""type"": ""variable"", ""line"": 253, ""name"": ""split_character"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""\\n"",   Expecting value: line 1 column 142 (char 141)']"
bip32.py,"['bip32.py', '{""type"": ""variable"", ""line"": 157, ""name"": ""hmac"", ""value"": null, ""valueSrc"": ""hmac_sha512"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
ledger.py,"['ledger.py', '{""type"": ""function_def"", ""line"": 197, ""name"": ""private_key_to_wif"", ""args"": [""private_key""], ""defaults"": [], ""return"":   Expecting value: line 1 column 120 (char 119)']"
header.py,"['header.py', '{""type"": ""variable"", ""line"": 35, ""name"": ""genesis_hash"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
transaction.py,"['transaction.py', '{""type"": ""function_call"", ""line"": 711, ""name"": ""txin.serialize_to"", ""args"": [""stream"",   Expecting value: line 1 column 88 (char 87)']"
claim_proofs.py,"['claim_proofs.py', '{""type"": ""variable"", ""line"": 25, ""name"": ""to_hash"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
script.py,"['script.py', '{""type"": ""variable"", ""line"": 172, ""name"": ""token"", ""value"": null, ""valueSrc"": ""DataToken"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
mnemonic.py,"['mnemonic.py', '{""type"": ""variable"", ""line"": 19, ""name"": ""SEED_PREFIX"", ""value"":   Expecting value: line 1 column 66 (char 65)']"
jsonrpc.py,"['jsonrpc.py', '{""type"": ""function_def"", ""line"": 323, ""name"": ""batch_message_from_parts"", ""args"": [""cls"", ""messages""], ""defaults"": [], ""return"": ""b\'\'.join"", ""returnArgs"": [  Expecting value: line 1 column 157 (char 156)']"
framing.py,"['framing.py', '{""type"": ""variable"", ""line"": 73, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
socks.py,"['socks.py', '{""type"": ""function_def"", ""line"": 114, ""name"": ""_start"", ""args"": [""self""], ""defaults"": [], ""return"": ""b\'\'.join"", ""returnArgs"": [  Expecting value: line 1 column 128 (char 127)']"
node.py,"['node.py', '{""type"": ""list"", ""line"": 210, ""name"": ""IGNORE_OUTPUT"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 130 (char 129)']"
storage.py,"['storage.py', '{""type"": ""function_def"", ""line"": 61, ""name"": ""iterator"", ""args"": [""self"", ""prefix"", ""reverse""], ""defaults"": [  Expecting value: line 1 column 110 (char 109)']"
leveldb.py,"['leveldb.py', '{""type"": ""variable"", ""line"": 35, ""name"": ""HEADER_PREFIX"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
history.py,"['history.py', '{""type"": ""variable"", ""line"": 51, ""name"": ""state"", ""value"": null, ""valueSrc"": ""self.db.get"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
server.py,"['server.py', '{""type"": ""variable"", ""line"": 25, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
client.py,"['client.py', '{""type"": ""variable"", ""line"": 24, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
crypt.py,"['crypt.py', '{""type"": ""function_def"", ""line"": 44, ""name"": ""better_aes_encrypt"", ""args"": [""secret"", ""value""], ""defaults"": [], ""return"": ""base64.b64encode"", ""returnArgs"": [  Expecting value: line 1 column 158 (char 157)']"
server.py,"['server.py', '{""type"": ""variable"", ""line"": 28, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
serialization.py,"['serialization.py', '{""type"": ""variable"", ""line"": 151, ""name"": ""next_close_paren"", ""value"": null, ""valueSrc"": ""response_msg.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 138 (char 137)']"
client.py,"['client.py', '{""type"": ""variable"", ""line"": 32, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
bencoding.py,"['bencoding.py', '{""type"": ""variable"", ""line"": 13, ""name"": ""encoded_list_items"", ""value"":   Expecting value: line 1 column 73 (char 72)']"
datagram.py,"['datagram.py', '{""type"": ""variable"", ""line"": 13, ""name"": ""PAGE_KEY"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
protocol.py,"['protocol.py', '{""type"": ""function_def"", ""line"": 48, ""name"": ""ping"", ""args"": [], ""defaults"": [], ""return"":   Expecting value: line 1 column 92 (char 91)']"
generate_json_api.py,"['generate_json_api.py', '{""type"": ""function_call"", ""line"": 252, ""name"": ""file.write"", ""args"": [  Expecting value: line 1 column 71 (char 70)']"
util.py,"['util.py', '{""type"": ""variable"", ""line"": 242, ""name"": ""encoded_b64"", ""value"": null, ""valueSrc"": ""base64.urlsafe_b64encode.rstrip"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 147 (char 146)']"
tea.py,"['tea.py', '{""type"": ""list"", ""line"": 79, ""name"": ""v_arr"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""bytes"",   Expecting value: line 1 column 130 (char 129)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 71, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
re.py,"['re.py', '{""type"": ""variable"", ""line"": 236, ""name"": ""_alphanum_bytes"", ""value"": null, ""valueSrc"": ""frozenset"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 129 (char 128)']"
ntpath.py,"['ntpath.py', '{""type"": ""variable"", ""line"": 323, ""name"": ""tilde"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
tokenize.py,"['tokenize.py', '{""type"": ""function_obj"", ""line"": 36, ""objName"": ""blank_re"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 96 (char 95)']"
posixpath.py,"['posixpath.py', '{""type"": ""variable"", ""line"": 117, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
codecs.py,"['codecs.py', '{""type"": ""variable"", ""line"": 42, ""name"": ""BOM_UTF8"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tempfile.py,"['tempfile.py', '{""type"": ""function_call"", ""line"": 161, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
hashlib.py,"['hashlib.py', '{""type"": ""function_def"", ""line"": 110, ""name"": ""__py_new"", ""args"": [""name"", ""data""], ""defaults"": [  Expecting value: line 1 column 98 (char 97)']"
base64.py,"['base64.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""s"", ""value"": null, ""valueSrc"": ""s.translate"", ""isInput"": false, ""args"": [""bytes.maketrans"", ""altchars"",   Expecting value: line 1 column 147 (char 146)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 505, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
inputstream.py,"['inputstream.py', '{""type"": ""tuple"", ""line"": 680, ""name"": ""methodDispatch"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
resources.py,"['resources.py', '{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
scripts.py,"['scripts.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
wheel.py,"['wheel.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 120, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 398, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 88, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""function_def"", ""line"": 204, ""name"": ""_flush_decoder"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 109 (char 108)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 46, ""name"": null, ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 116 (char 115)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 53, ""name"": ""aBuf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 114 (char 113)']"
serialize.py,"['serialize.py', '{""type"": ""function_def"", ""line"": 35, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""b\',\'.join"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 21, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
multipartparser.py,"['multipartparser.py', '{""type"": ""variable"", ""line"": 307, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
response.py,"['response.py', '{""type"": ""function_def"", ""line"": 282, ""name"": ""__init__"", ""args"": [""self"", ""content"", ""args""], ""defaults"": [  Expecting value: line 1 column 109 (char 108)']"
__init__.py,"['__init__.py', '{""type"": ""list"", ""line"": 2325, ""name"": ""empty_values"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [null,   Expecting value: line 1 column 136 (char 135)']"
operations.py,"['operations.py', '{""type"": ""variable"", ""line"": 226, ""name"": ""value"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
debug.py,"['debug.py', '{""type"": ""variable"", ""line"": 355, ""name"": ""match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
encoding.py,"['encoding.py', '{""type"": ""function_def"", ""line"": 169, ""name"": ""iri_to_uri"", ""args"": [""iri""], ""defaults"": [], ""return"": ""quote"", ""returnArgs"": [""force_bytes""], ""returnKeywords"": [[""safe"",   Expecting value: line 1 column 172 (char 171)']"
http.py,"['http.py', '{""type"": ""function_def"", ""line"": 215, ""name"": ""urlsafe_base64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.rstrip"", ""returnArgs"": [  Expecting value: line 1 column 163 (char 162)']"
signing.py,"['signing.py', '{""type"": ""function_def"", ""line"": 70, ""name"": ""b64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [  Expecting value: line 1 column 150 (char 149)']"
wsgi.py,"['wsgi.py', '{""type"": ""variable"", ""line"": 33, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
filebased.py,"['filebased.py', '{""type"": ""function_call"", ""line"": 47, ""name"": ""self.stream.write"", ""args"": [""message.message"",   Expecting value: line 1 column 96 (char 95)']"
uploadedfile.py,"['uploadedfile.py', '{""type"": ""variable"", ""line"": 113, ""name"": ""content"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""content"",   Expecting value: line 1 column 139 (char 138)']"
base.py,"['base.py', '{""type"": ""tuple"", ""line"": 96, ""name"": null, ""value"": null, ""valueSrc"": ""encoded_data.split"", ""isInput"": false, ""names"": [""hash"", ""serialized""], ""args"": [  Expecting value: line 1 column 154 (char 153)']"
io.py,"['io.py', '{""type"": ""variable"", ""line"": 236, ""name"": ""flag"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
layer.py,"['layer.py', '{""type"": ""variable"", ""line"": 41, ""name"": null, ""value"": null, ""valueSrc"": ""self.test_capability"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 126 (char 125)']"
libgdal.py,"['libgdal.py', '{""type"": ""function_def"", ""line"": 77, ""name"": ""gdal_version"", ""args"": [], ""defaults"": [], ""return"": ""_version_info"", ""returnArgs"": [  Expecting value: line 1 column 132 (char 131)']"
srs.py,"['srs.py', '{""type"": ""variable"", ""line"": 82, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""c_char_p"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 115 (char 114)']"
sandbox.py,"['sandbox.py', '{""type"": ""variable"", ""line"": 41, ""name"": ""script"", ""value"": null, ""valueSrc"": ""script.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
build_py.py,"['build_py.py', '{""type"": ""comparison"", ""line"": 166, ""pairs"": [[""contents"",   Expecting value: line 1 column 60 (char 59)']"
PcxImagePlugin.py,"['PcxImagePlugin.py', '{""type"": ""function_call"", ""line"": 158, ""name"": ""fp.write"", ""args"": [""o8"", ""o8"", ""o8"", ""o8"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"",   Expecting value: line 1 column 135 (char 134)']"
GifImagePlugin.py,"['GifImagePlugin.py', '{""type"": ""comparison"", ""line"": 174, ""pairs"": [[""s"",   Expecting value: line 1 column 53 (char 52)']"
JpegImagePlugin.py,"['JpegImagePlugin.py', '{""type"": ""variable"", ""line"": 333, ""name"": ""s"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
TiffImagePlugin.py,"['TiffImagePlugin.py', '{""type"": ""variable"", ""line"": 71, ""name"": ""II"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
OleFileIO.py,"['OleFileIO.py', '{""type"": ""variable"", ""line"": 361, ""name"": ""MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
ImImagePlugin.py,"['ImImagePlugin.py', '{""type"": ""variable"", ""line"": 95, ""name"": ""split"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
GbrImagePlugin.py,"['GbrImagePlugin.py', '{""type"": ""variable"", ""line"": 64, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
XpmImagePlugin.py,"['XpmImagePlugin.py', '{""type"": ""variable"", ""line"": 25, ""name"": ""xpm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WebPImagePlugin.py,"['WebPImagePlugin.py', '{""type"": ""dict"", ""line"": 12, ""name"": ""_VP8_MODES_BY_IDENTIFIER"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 138 (char 137)']"
Image.py,"['Image.py', '{""type"": ""function_def"", ""line"": 697, ""name"": ""tobitmap"", ""args"": [""self"", ""name""], ""defaults"": [""image""], ""return"": ""b\'\'.join"", ""returnArgs"": [""None.encode"", ""ascii"", ""None.encode"", ""ascii"", ""None.encode"", ""ascii"", [],   Expecting value: line 1 column 221 (char 220)']"
BmpImagePlugin.py,"['BmpImagePlugin.py', '{""type"": ""function_call"", ""line"": 248, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
IcoImagePlugin.py,"['IcoImagePlugin.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
FontFile.py,"['FontFile.py', '{""type"": ""function_call"", ""line"": 104, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
PpmImagePlugin.py,"['PpmImagePlugin.py', '{""type"": ""dict"", ""line"": 38, ""name"": ""MODES"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 119 (char 118)']"
ImtImagePlugin.py,"['ImtImagePlugin.py', '{""type"": ""variable"", ""line"": 28, ""name"": ""field"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
ImageQt.py,"['ImageQt.py', '{""type"": ""function_call"", ""line"": 113, ""name"": ""new_data.append"", ""args"": [  Expecting value: line 1 column 76 (char 75)']"
PixarImagePlugin.py,"['PixarImagePlugin.py', '{""type"": ""comparison"", ""line"": 44, ""pairs"": [[""s"",   Expecting value: line 1 column 52 (char 51)']"
ImageFont.py,"['ImageFont.py', '{""type"": ""function_call"", ""line"": 88, ""name"": ""file.readline.split"", ""args"": [  Expecting value: line 1 column 79 (char 78)']"
XbmImagePlugin.py,"['XbmImagePlugin.py', '{""type"": ""variable"", ""line"": 28, ""name"": ""xbm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WalImageFile.py,"['WalImageFile.py', '{""type"": ""variable"", ""line"": 78, ""name"": ""quake2palette"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
BdfFontFile.py,"['BdfFontFile.py', '{""type"": ""variable"", ""line"": 60, ""name"": ""i"", ""value"": null, ""valueSrc"": ""s.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 111 (char 110)']"
XVThumbImagePlugin.py,"['XVThumbImagePlugin.py', '{""type"": ""variable"", ""line"": 27, ""name"": ""PALETTE"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
IcnsImagePlugin.py,"['IcnsImagePlugin.py', '{""type"": ""comparison"", ""line"": 44, ""pairs"": [[""sig"",   Expecting value: line 1 column 54 (char 53)']"
EpsImagePlugin.py,"['EpsImagePlugin.py', '{""type"": ""variable"", ""line"": 173, ""name"": ""s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""self.char"",   Expecting value: line 1 column 135 (char 134)']"
Jpeg2KImagePlugin.py,"['Jpeg2KImagePlugin.py', '{""type"": ""comparison"", ""line"": 75, ""pairs"": [[""tbox"",   Expecting value: line 1 column 55 (char 54)']"
TgaImagePlugin.py,"['TgaImagePlugin.py', '{""type"": ""variable"", ""line"": 109, ""name"": null, ""value"": null, ""valueSrc"": ""ImagePalette.raw"", ""isInput"": false, ""args"": [""BGR;16"",   Expecting value: line 1 column 133 (char 132)']"
ImageFile.py,"['ImageFile.py', '{""type"": ""variable"", ""line"": 187, ""name"": ""prefix"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
CurImagePlugin.py,"['CurImagePlugin.py', '{""type"": ""variable"", ""line"": 54, ""name"": ""m"", ""value"":   Expecting value: line 1 column 56 (char 55)']"
PngImagePlugin.py,"['PngImagePlugin.py', '{""type"": ""variable"", ""line"": 53, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
ImageDraw.py,"['ImageDraw.py', '{""type"": ""variable"", ""line"": 235, ""name"": ""split_character"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""\\n"",   Expecting value: line 1 column 142 (char 141)']"
idna.py,"['idna.py', '{""type"": ""variable"", ""line"": 10, ""name"": ""ace_prefix"", ""value"":   Expecting value: line 1 column 65 (char 64)']"
uu_codec.py,"['uu_codec.py', '{""type"": ""function_call"", ""line"": 29, ""name"": ""write"", ""args"": [  Expecting value: line 1 column 65 (char 64)']"
punycode.py,"['punycode.py', '{""type"": ""variable"", ""line"": 77, ""name"": ""digits"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
gui-glut.py,"['gui-glut.py', '{""type"": ""function_call"", ""line"": 41, ""name"": ""glut.glutCreateWindow"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
gh_api.py,"['gh_api.py', '{""type"": ""function_call"", ""line"": 256, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 71 (char 70)']"
clipboard.py,"['clipboard.py', '{""type"": ""variable"", ""line"": 42, ""name"": ""bytes_"", ""value"": null, ""valueSrc"": ""bytes_.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
glut.py,"['glut.py', '{""type"": ""function_call"", ""line"": 86, ""name"": ""glut.glutCreateWindow"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
_process_win32.py,"['_process_win32.py', '{""type"": ""variable"", ""line"": 168, ""name"": ""out"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
display.py,"['display.py', '{""type"": ""variable"", ""line"": 758, ""name"": ""_PNG"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
core.py,"['core.py', '{""type"": ""function_call"", ""line"": 191, ""name"": ""self._pending_requests.append"", ""args"": [""request"", ""low_conn"",   Expecting value: line 1 column 113 (char 112)']"
auth.py,"['auth.py', '{""type"": ""tuple"", ""line"": 51, ""name"": null, ""value"": null, ""valueSrc"": ""id_token.encode.rsplit"", ""isInput"": false, ""names"": [""signing_input"", ""_""], ""args"": [  Expecting value: line 1 column 158 (char 157)']"
state.py,"['state.py', '{""type"": ""comparison"", ""line"": 331, ""pairs"": [[""id_token"",   Expecting value: line 1 column 60 (char 59)']"
media.py,"['media.py', '{""type"": ""variable"", ""line"": 98, ""name"": ""data"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
misc.py,"['misc.py', '{""type"": ""variable"", ""line"": 79, ""name"": ""data"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
tag_example.py,"['tag_example.py', '{""type"": ""variable"", ""line"": 27, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
chapters.py,"['chapters.py', '{""type"": ""variable"", ""line"": 41, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
mimetype.py,"['mimetype.py', '{""type"": ""variable"", ""line"": 20, ""name"": ""buf"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
binfuncs.py,"['binfuncs.py', '{""type"": ""variable"", ""line"": 60, ""name"": ""out"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
headers.py,"['headers.py', '{""type"": ""variable"", ""line"": 78, ""name"": ""pos"", ""value"": null, ""valueSrc"": ""data.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 116 (char 115)']"
tag.py,"['tag.py', '{""type"": ""variable"", ""line"": 182, ""name"": ""comment"", ""value"": null, ""valueSrc"": ""tag_data.rstrip"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 30, ""name"": ""LATIN1_ENCODING"", ""value"":   Expecting value: line 1 column 70 (char 69)']"
frames.py,"['frames.py', '{""type"": ""variable"", ""line"": 27, ""name"": ""TITLE_FID"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
apple.py,"['apple.py', '{""type"": ""variable"", ""line"": 7, ""name"": ""PCST_FID"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
headers.py,"['headers.py', '{""type"": ""variable"", ""line"": 121, ""name"": ""data"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
sphinx.py,"['sphinx.py', '{""type"": ""comparison"", ""line"": 268, ""pairs"": [[""inventory_version"",   Expecting value: line 1 column 69 (char 68)']"
_search.py,"['_search.py', '{""type"": ""variable"", ""line"": 389, ""name"": ""output"", ""value"": null, ""valueSrc"": ""bytearray"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
python.py,"['python.py', '{""type"": ""comparison"", ""line"": 1139, ""pairs"": [[""annotation"",   Expecting value: line 1 column 63 (char 62)']"
doxygen.py,"['doxygen.py', '{""type"": ""function_call"", ""line"": 3710, ""name"": ""f.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
models.py,"['models.py', '{""type"": ""dict"", ""line"": 592, ""name"": ""LOOP2_RECORD_VERIFICATION_MAP_WLK"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [0, 2, 3, 9, 15, 16, 18, 20, 33, 35, 36, 37, 38, 39, 40, 41, 42], ""values"": [  Expecting value: line 1 column 224 (char 223)']"
itsdangerous.py,"['itsdangerous.py', '{""type"": ""function_def"", ""line"": 201, ""name"": ""base64_encode"", ""args"": [""string""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [  Expecting value: line 1 column 159 (char 158)']"
extras.py,"['extras.py', '{""type"": ""function_def"", ""line"": 792, ""name"": ""_getquoted_8"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 107 (char 106)']"
extensions.py,"['extensions.py', '{""type"": ""function_def"", ""line"": 120, ""name"": ""getquoted"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 104 (char 103)']"
_range.py,"['_range.py', '{""type"": ""variable"", ""line"": 260, ""name"": ""lower"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
crypto.py,"['crypto.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""INTERRUPT"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 506, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 16, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
_inputstream.py,"['_inputstream.py', '{""type"": ""tuple"", ""line"": 697, ""name"": ""methodDispatch"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": ""errors[0]"", ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
resources.py,"['resources.py', '{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
scripts.py,"['scripts.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
wheel.py,"['wheel.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 124, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 445, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 195, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 88, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""function_def"", ""line"": 208, ""name"": ""_flush_decoder"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 109 (char 108)']"
pyopenssl.py,"['pyopenssl.py', '{""type"": ""comparison"", ""line"": 148, ""pairs"": [[""ext_name"",   Expecting value: line 1 column 60 (char 59)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 46, ""name"": null, ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 116 (char 115)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 53, ""name"": ""aBuf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 114 (char 113)']"
filewrapper.py,"['filewrapper.py', '{""type"": ""comparison"", ""line"": 69, ""pairs"": [[""amt"", 2], [""data"",   Expecting value: line 1 column 67 (char 66)']"
serialize.py,"['serialize.py', '{""type"": ""function_def"", ""line"": 35, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""b\',\'.join"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
backend_ctypes.py,"['backend_ctypes.py', '{""type"": ""variable"", ""line"": 527, ""name"": null, ""value"": null, ""valueSrc"": ""ctypes.create_string_buffer"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 134 (char 133)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""_normalize_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
glob.py,"['glob.py', '{""type"": ""variable"", ""line"": 148, ""name"": ""magic_check_bytes"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
build_py.py,"['build_py.py', '{""type"": ""comparison"", ""line"": 177, ""pairs"": [[""contents"",   Expecting value: line 1 column 60 (char 59)']"
upload_docs.py,"['upload_docs.py', '{""type"": ""variable"", ""line"": 130, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
utils.py,"['utils.py', '{""type"": ""function_def"", ""line"": 21, ""name"": ""base64url_encode"", ""args"": [""input""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.replace"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
api_jws.py,"['api_jws.py', '{""type"": ""tuple"", ""line"": 143, ""name"": null, ""value"": null, ""valueSrc"": ""jwt.rsplit"", ""isInput"": false, ""names"": [""signing_input"", ""crypto_segment""], ""args"": [  Expecting value: line 1 column 160 (char 159)']"
algorithms.py,"['algorithms.py', '{""type"": ""function_def"", ""line"": 95, ""name"": ""sign"", ""args"": [""self"", ""msg"", ""key""], ""defaults"": [], ""return"":   Expecting value: line 1 column 112 (char 111)']"
_winconsole.py,"['_winconsole.py', '{""type"": ""variable"", ""line"": 60, ""name"": ""EOF"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
_compat.py,"['_compat.py', '{""type"": ""function_call"", ""line"": 121, ""name"": ""self._stream.write"", ""args"": [  Expecting value: line 1 column 79 (char 78)']"
formparser.py,"['formparser.py', '{""type"": ""function_def"", ""line"": 310, ""name"": ""_find_terminator"", ""args"": [""self"", ""iterator""], ""defaults"": [], ""return"":   Expecting value: line 1 column 123 (char 122)']"
_internal.py,"['_internal.py', '{""type"": ""variable"", ""line"": 26, ""name"": ""_cookie_params"", ""value"": null, ""valueSrc"": ""set"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 121 (char 120)']"
urls.py,"['urls.py', '{""type"": ""variable"", ""line"": 33, ""name"": ""_always_safe"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
serving.py,"['serving.py', '{""type"": ""function_call"", ""line"": 209, ""name"": ""self.wfile.write"", ""args"": [  Expecting value: line 1 column 77 (char 76)']"
http.py,"['http.py', '{""type"": ""comparison"", ""line"": 502, ""pairs"": [[""auth_type"",   Expecting value: line 1 column 61 (char 60)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 75, ""name"": ""match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 118 (char 117)']"
tbtools.py,"['tbtools.py', '{""type"": ""variable"", ""line"": 28, ""name"": ""_coding_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
securecookie.py,"['securecookie.py', '{""type"": ""function_call"", ""line"": 226, ""name"": ""hmac.update"", ""args"": [  Expecting value: line 1 column 72 (char 71)']"
cache.py,"['cache.py', '{""type"": ""function_def"", ""line"": 583, ""name"": ""dump_object"", ""args"": [""self"", ""value""], ""defaults"": [], ""return"":   Expecting value: line 1 column 115 (char 114)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 299, ""name"": ""safe"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 125 (char 124)']"
acoustid.py,"['acoustid.py', '{""type"": ""variable"", ""line"": 309, ""name"": ""parts"", ""value"": null, ""valueSrc"": ""line.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
dammit.py,"['dammit.py', '{""type"": ""variable"", ""line"": 281, ""name"": ""smart_quotes_re"", ""value"":   Expecting value: line 1 column 71 (char 70)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 310, ""name"": ""rv"", ""value"": null, ""valueSrc"": ""decoder.decode"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 121 (char 120)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 337, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 95, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 46, ""name"": null, ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 116 (char 115)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 53, ""name"": ""aBuf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 114 (char 113)']"
aws4auth.py,"['aws4auth.py', '{""type"": ""variable"", ""line"": 355, ""name"": ""content_hash"", ""value"": null, ""valueSrc"": ""hashlib.sha256"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 131 (char 130)']"
run.py,"['run.py', '{""type"": ""variable"", ""line"": 355, ""name"": ""content_hash"", ""value"": null, ""valueSrc"": ""hashlib.sha256"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 131 (char 130)']"
main.py,"['main.py', '{""type"": ""function_call"", ""line"": 750, ""name"": ""request.setRawHeader"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
png.py,"['png.py', '{""type"": ""function_call"", ""line"": 648, ""name"": ""write_chunk"", ""args"": [""outfile"",   Expecting value: line 1 column 83 (char 82)']"
apiso.py,"['apiso.py', '{""type"": ""variable"", ""line"": 393, ""name"": ""iso_string"", ""value"":   Expecting value: line 1 column 66 (char 65)']"
services.py,"['services.py', '{""type"": ""function_call"", ""line"": 20, ""name"": ""self.transport.write"", ""args"": [  Expecting value: line 1 column 80 (char 79)']"
extras.py,"['extras.py', '{""type"": ""function_def"", ""line"": 809, ""name"": ""_getquoted_8"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 107 (char 106)']"
extensions.py,"['extensions.py', '{""type"": ""function_def"", ""line"": 117, ""name"": ""getquoted"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 104 (char 103)']"
_range.py,"['_range.py', '{""type"": ""variable"", ""line"": 275, ""name"": ""lower"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
_openssl_crypt.py,"['_openssl_crypt.py', '{""type"": ""function_def"", ""line"": 100, ""name"": ""from_string"", ""args"": [""key"", ""password""], ""defaults"": [  Expecting value: line 1 column 104 (char 103)']"
_helpers.py,"['_helpers.py', '{""type"": ""variable"", ""line"": 272, ""name"": ""offset"", ""value"": null, ""valueSrc"": ""raw_key_input.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 129 (char 128)']"
_pure_python_crypt.py,"['_pure_python_crypt.py', '{""type"": ""comparison"", ""line"": 117, ""pairs"": [[""remaining"",   Expecting value: line 1 column 61 (char 60)']"
tools.py,"['tools.py', '{""type"": ""function_call"", ""line"": 131, ""name"": ""self.wfile.write"", ""args"": [  Expecting value: line 1 column 77 (char 76)']"
crypt.py,"['crypt.py', '{""type"": ""tuple"", ""line"": 230, ""name"": null, ""value"": null, ""valueSrc"": ""jwt.split"", ""isInput"": false, ""names"": [""header"", ""payload"", ""signature""], ""args"": [  Expecting value: line 1 column 158 (char 157)']"
_pkce.py,"['_pkce.py', '{""type"": ""variable"", ""line"": 41, ""name"": ""verifier"", ""value"": null, ""valueSrc"": ""base64.urlsafe_b64encode.rstrip"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 143 (char 142)']"
client.py,"['client.py', '{""type"": ""variable"", ""line"": 1576, ""name"": ""segments"", ""value"": null, ""valueSrc"": ""id_token.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 128 (char 127)']"
xsrfutil.py,"['xsrfutil.py', '{""type"": ""variable"", ""line"": 26, ""name"": ""DELIMITER"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
_helpers.py,"['_helpers.py', '{""type"": ""function_def"", ""line"": 220, ""name"": ""unpadded_urlsafe_b64encode"", ""args"": [""value""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.rstrip"", ""returnArgs"": [  Expecting value: line 1 column 172 (char 171)']"
jwt.py,"['jwt.py', '{""type"": ""tuple"", ""line"": 134, ""name"": null, ""value"": null, ""valueSrc"": ""token.split"", ""isInput"": false, ""names"": [""encoded_header"", ""encoded_payload"", ""signature""], ""args"": [  Expecting value: line 1 column 176 (char 175)']"
_python_rsa.py,"['_python_rsa.py', '{""type"": ""variable"", ""line"": 35, ""name"": ""_CERTIFICATE_MARKER"", ""value"":   Expecting value: line 1 column 74 (char 73)']"
_cryptography_rsa.py,"['_cryptography_rsa.py', '{""type"": ""variable"", ""line"": 45, ""name"": ""_CERTIFICATE_MARKER"", ""value"":   Expecting value: line 1 column 74 (char 73)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 482, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 16, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
_inputstream.py,"['_inputstream.py', '{""type"": ""tuple"", ""line"": 697, ""name"": ""methodDispatch"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": ""errors[0]"", ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
resources.py,"['resources.py', '{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
scripts.py,"['scripts.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
wheel.py,"['wheel.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 189, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 462, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
fallback.py,"['fallback.py', '{""type"": ""function_def"", ""line"": 32, ""name"": ""__init__"", ""args"": [""self"", ""s""], ""defaults"": [  Expecting value: line 1 column 94 (char 93)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 200, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 88, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""function_def"", ""line"": 278, ""name"": ""_flush_decoder"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 109 (char 108)']"
securetransport.py,"['securetransport.py', '{""type"": ""function_call"", ""line"": 55, ""name"": ""memoryview"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
low_level.py,"['low_level.py', '{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 101 (char 100)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
filewrapper.py,"['filewrapper.py', '{""type"": ""comparison"", ""line"": 69, ""pairs"": [[""amt"", 2], [""data"",   Expecting value: line 1 column 67 (char 66)']"
serialize.py,"['serialize.py', '{""type"": ""function_def"", ""line"": 22, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""b\',\'.join"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 601, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 21, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
_inputstream.py,"['_inputstream.py', '{""type"": ""tuple"", ""line"": 697, ""name"": ""methodDispatch"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": ""errors[0]"", ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
resources.py,"['resources.py', '{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
scripts.py,"['scripts.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
wheel.py,"['wheel.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 197, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 471, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
models.py,"['models.py', '{""type"": ""variable"", ""line"": 828, ""name"": null, ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""b\'\'.join"",   Expecting value: line 1 column 135 (char 134)']"
fallback.py,"['fallback.py', '{""type"": ""function_def"", ""line"": 42, ""name"": ""__init__"", ""args"": [""self"", ""s""], ""defaults"": [  Expecting value: line 1 column 94 (char 93)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 217, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""variable"", ""line"": 31, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
low_level.py,"['low_level.py', '{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 101 (char 100)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
filewrapper.py,"['filewrapper.py', '{""type"": ""comparison"", ""line"": 71, ""pairs"": [[""amt"", 2], [""data"",   Expecting value: line 1 column 67 (char 66)']"
serialize.py,"['serialize.py', '{""type"": ""function_def"", ""line"": 22, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""b\',\'.join"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 117, ""name"": ""BSONNUM"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
authentication.py,"['authentication.py', '{""type"": ""variable"", ""line"": 20, ""name"": ""auth"", ""value"": null, ""valueSrc"": ""request.META.get"", ""isInput"": false, ""args"": [""HTTP_AUTHORIZATION"",   Expecting value: line 1 column 146 (char 145)']"
multipartparser.py,"['multipartparser.py', '{""type"": ""variable"", ""line"": 326, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
request.py,"['request.py', '{""type"": ""function_def"", ""line"": 354, ""name"": ""__iter__"", ""args"": [""self""], ""defaults"": [], ""return"": ""iter"", ""returnArgs"": [""self.readline"",   Expecting value: line 1 column 143 (char 142)']"
response.py,"['response.py', '{""type"": ""function_def"", ""line"": 288, ""name"": ""__init__"", ""args"": [""self"", ""content"", ""args""], ""defaults"": [  Expecting value: line 1 column 109 (char 108)']"
__init__.py,"['__init__.py', '{""type"": ""list"", ""line"": 2257, ""name"": ""empty_values"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [null,   Expecting value: line 1 column 136 (char 135)']"
debug.py,"['debug.py', '{""type"": ""variable"", ""line"": 373, ""name"": ""match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 186, ""name"": ""bits"", ""value"": null, ""valueSrc"": ""uri.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 118 (char 117)']"
signing.py,"['signing.py', '{""type"": ""function_def"", ""line"": 62, ""name"": ""b64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [  Expecting value: line 1 column 150 (char 149)']"
wsgi.py,"['wsgi.py', '{""type"": ""variable"", ""line"": 14, ""name"": ""_slashes_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
filebased.py,"['filebased.py', '{""type"": ""function_call"", ""line"": 47, ""name"": ""self.stream.write"", ""args"": [""message.message"",   Expecting value: line 1 column 96 (char 95)']"
uploadedfile.py,"['uploadedfile.py', '{""type"": ""variable"", ""line"": 104, ""name"": ""content"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""content"",   Expecting value: line 1 column 139 (char 138)']"
base.py,"['base.py', '{""type"": ""tuple"", ""line"": 103, ""name"": null, ""value"": null, ""valueSrc"": ""encoded_data.split"", ""isInput"": false, ""names"": [""hash"", ""serialized""], ""args"": [  Expecting value: line 1 column 155 (char 154)']"
geometry.py,"['geometry.py', '{""type"": ""variable"", ""line"": 119, ""name"": ""parts"", ""value"": null, ""valueSrc"": ""ewkt.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
layer.py,"['layer.py', '{""type"": ""variable"", ""line"": 37, ""name"": null, ""value"": null, ""valueSrc"": ""self.test_capability"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 126 (char 125)']"
libgdal.py,"['libgdal.py', '{""type"": ""function_def"", ""line"": 77, ""name"": ""gdal_version"", ""args"": [], ""defaults"": [], ""return"": ""_version_info"", ""returnArgs"": [  Expecting value: line 1 column 132 (char 131)']"
srs.py,"['srs.py', '{""type"": ""variable"", ""line"": 79, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""c_char_p"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 115 (char 114)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
timed.py,"['timed.py', '{""type"": ""variable"", ""line"": 56, ""name"": ""result"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""e.payload"",   Expecting value: line 1 column 139 (char 138)']"
serializer.py,"['serializer.py', '{""type"": ""function_def"", ""line"": 80, ""name"": ""__init__"", ""args"": [""self"", ""secret_key"", ""salt"", ""serializer"", ""serializer_kwargs"", ""signer"", ""signer_kwargs"", ""fallback_signers""], ""defaults"": [  Expecting value: line 1 column 193 (char 192)']"
jws.py,"['jws.py', '{""type"": ""comparison"", ""line"": 64, ""pairs"": [[""payload"",   Expecting value: line 1 column 58 (char 57)']"
encoding.py,"['encoding.py', '{""type"": ""function_def"", ""line"": 15, ""name"": ""base64_encode"", ""args"": [""string""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.rstrip"", ""returnArgs"": [  Expecting value: line 1 column 159 (char 158)']"
signer.py,"['signer.py', '{""type"": ""function_def"", ""line"": 33, ""name"": ""get_signature"", ""args"": [""self"", ""key"", ""value""], ""defaults"": [], ""return"":   Expecting value: line 1 column 123 (char 122)']"
PcxImagePlugin.py,"['PcxImagePlugin.py', '{""type"": ""function_call"", ""line"": 152, ""name"": ""fp.write"", ""args"": [""o8"", ""o8"", ""o8"", ""o8"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"",   Expecting value: line 1 column 135 (char 134)']"
GifImagePlugin.py,"['GifImagePlugin.py', '{""type"": ""comparison"", ""line"": 177, ""pairs"": [[""s"",   Expecting value: line 1 column 53 (char 52)']"
JpegImagePlugin.py,"['JpegImagePlugin.py', '{""type"": ""variable"", ""line"": 385, ""name"": ""s"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
TiffImagePlugin.py,"['TiffImagePlugin.py', '{""type"": ""variable"", ""line"": 79, ""name"": ""II"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
ImImagePlugin.py,"['ImImagePlugin.py', '{""type"": ""variable"", ""line"": 97, ""name"": ""split"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
GbrImagePlugin.py,"['GbrImagePlugin.py', '{""type"": ""comparison"", ""line"": 66, ""pairs"": [[""magic_number"",   Expecting value: line 1 column 63 (char 62)']"
XpmImagePlugin.py,"['XpmImagePlugin.py', '{""type"": ""variable"", ""line"": 27, ""name"": ""xpm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WebPImagePlugin.py,"['WebPImagePlugin.py', '{""type"": ""dict"", ""line"": 21, ""name"": ""_VP8_MODES_BY_IDENTIFIER"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 138 (char 137)']"
Image.py,"['Image.py', '{""type"": ""function_def"", ""line"": 769, ""name"": ""tobitmap"", ""args"": [""self"", ""name""], ""defaults"": [""image""], ""return"": ""b\'\'.join"", ""returnArgs"": [""None.encode"", ""ascii"", ""None.encode"", ""ascii"", ""None.encode"", ""ascii"", [],   Expecting value: line 1 column 221 (char 220)']"
BmpImagePlugin.py,"['BmpImagePlugin.py', '{""type"": ""function_call"", ""line"": 321, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
IcoImagePlugin.py,"['IcoImagePlugin.py', '{""type"": ""variable"", ""line"": 39, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
FontFile.py,"['FontFile.py', '{""type"": ""function_call"", ""line"": 105, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
PpmImagePlugin.py,"['PpmImagePlugin.py', '{""type"": ""variable"", ""line"": 27, ""name"": ""b_whitespace"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
ImtImagePlugin.py,"['ImtImagePlugin.py', '{""type"": ""variable"", ""line"": 30, ""name"": ""field"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
ImageQt.py,"['ImageQt.py', '{""type"": ""function_call"", ""line"": 138, ""name"": ""new_data.append"", ""args"": [  Expecting value: line 1 column 76 (char 75)']"
PixarImagePlugin.py,"['PixarImagePlugin.py', '{""type"": ""comparison"", ""line"": 49, ""pairs"": [[""s"",   Expecting value: line 1 column 52 (char 51)']"
ImageFont.py,"['ImageFont.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""file.readline.split"", ""args"": [  Expecting value: line 1 column 79 (char 78)']"
XbmImagePlugin.py,"['XbmImagePlugin.py', '{""type"": ""variable"", ""line"": 30, ""name"": ""xbm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WalImageFile.py,"['WalImageFile.py', '{""type"": ""variable"", ""line"": 78, ""name"": ""quake2palette"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
FtexImagePlugin.py,"['FtexImagePlugin.py', '{""type"": ""variable"", ""line"": 59, ""name"": ""MAGIC"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
BdfFontFile.py,"['BdfFontFile.py', '{""type"": ""variable"", ""line"": 61, ""name"": ""i"", ""value"": null, ""valueSrc"": ""s.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 111 (char 110)']"
DdsImagePlugin.py,"['DdsImagePlugin.py', '{""type"": ""comparison"", ""line"": 140, ""pairs"": [[""fourcc"",   Expecting value: line 1 column 58 (char 57)']"
XVThumbImagePlugin.py,"['XVThumbImagePlugin.py', '{""type"": ""variable"", ""line"": 27, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
IcnsImagePlugin.py,"['IcnsImagePlugin.py', '{""type"": ""comparison"", ""line"": 43, ""pairs"": [[""sig"",   Expecting value: line 1 column 54 (char 53)']"
EpsImagePlugin.py,"['EpsImagePlugin.py', '{""type"": ""variable"", ""line"": 175, ""name"": ""s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""self.char"",   Expecting value: line 1 column 135 (char 134)']"
SgiImagePlugin.py,"['SgiImagePlugin.py', '{""type"": ""function_call"", ""line"": 186, ""name"": ""fp.write"", ""args"": [""struct.pack"", ""4s"",   Expecting value: line 1 column 90 (char 89)']"
Jpeg2KImagePlugin.py,"['Jpeg2KImagePlugin.py', '{""type"": ""comparison"", ""line"": 78, ""pairs"": [[""tbox"",   Expecting value: line 1 column 55 (char 54)']"
PdfParser.py,"['PdfParser.py', '{""type"": ""function_call"", ""line"": 175, ""name"": ""f.write"", ""args"": [  Expecting value: line 1 column 68 (char 67)']"
TgaImagePlugin.py,"['TgaImagePlugin.py', '{""type"": ""variable"", ""line"": 114, ""name"": null, ""value"": null, ""valueSrc"": ""ImagePalette.raw"", ""isInput"": false, ""args"": [""BGR;16"",   Expecting value: line 1 column 133 (char 132)']"
ImageFile.py,"['ImageFile.py', '{""type"": ""variable"", ""line"": 209, ""name"": ""prefix"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
CurImagePlugin.py,"['CurImagePlugin.py', '{""type"": ""variable"", ""line"": 54, ""name"": ""m"", ""value"":   Expecting value: line 1 column 56 (char 55)']"
PngImagePlugin.py,"['PngImagePlugin.py', '{""type"": ""variable"", ""line"": 52, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
ImageDraw.py,"['ImageDraw.py', '{""type"": ""variable"", ""line"": 253, ""name"": ""split_character"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""\\n"",   Expecting value: line 1 column 142 (char 141)']"
__init__.py,"['__init__.py', '{""type"": ""comparison"", ""line"": 160, ""pairs"": [[""head"",   Expecting value: line 1 column 56 (char 55)']"
arbiter.py,"['arbiter.py', '{""type"": ""function_call"", ""line"": 338, ""name"": ""os.write"", ""args"": [""self.PIPE[1]"",   Expecting value: line 1 column 85 (char 84)']"
util.py,"['util.py', '{""type"": ""variable"", ""line"": 297, ""name"": ""chunk"", ""value"": null, ""valueSrc"": ""b\'\'.join"", ""isInput"": false, ""args"": [""chunk_size.encode"", ""utf-8"", ""data"",   Expecting value: line 1 column 156 (char 155)']"
message.py,"['message.py', '{""type"": ""variable"", ""line"": 211, ""name"": ""idx"", ""value"": null, ""valueSrc"": ""data.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 117 (char 116)']"
body.py,"['body.py', '{""type"": ""variable"", ""line"": 43, ""name"": ""idx"", ""value"": null, ""valueSrc"": ""buf.getvalue.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
wsgi.py,"['wsgi.py', '{""type"": ""function_call"", ""line"": 134, ""name"": ""sock.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
workertmp.py,"['workertmp.py', '{""type"": ""function_call"", ""line"": 47, ""name"": ""os.write"", ""args"": [""self._tmp.fileno"",   Expecting value: line 1 column 88 (char 87)']"
common.py,"['common.py', '{""type"": ""function_def"", ""line"": 62, ""name"": ""quote"", ""args"": [""s"", ""safe""], ""defaults"": [  Expecting value: line 1 column 91 (char 90)']"
utils.py,"['utils.py', '{""type"": ""function_def"", ""line"": 71, ""name"": ""escape"", ""args"": [""u""], ""defaults"": [], ""return"": ""quote"", ""returnArgs"": [""u.encode"", ""utf-8""], ""returnKeywords"": [[""safe"",   Expecting value: line 1 column 171 (char 170)']"
utils.py,"['utils.py', '{""type"": ""function_def"", ""line"": 47, ""name"": ""escape"", ""args"": [""u""], ""defaults"": [], ""return"": ""quote"", ""returnArgs"": [""u""], ""returnKeywords"": [[""safe"",   Expecting value: line 1 column 155 (char 154)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 1581, ""name"": ""content"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
grid_file.py,"['grid_file.py', '{""type"": ""variable"", ""line"": 46, ""name"": ""EMPTY"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
format.py,"['format.py', '{""type"": ""variable"", ""line"": 176, ""name"": ""MAGIC_PREFIX"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
npyio.py,"['npyio.py', '{""type"": ""variable"", ""line"": 433, ""name"": ""_ZIP_PREFIX"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
core.py,"['core.py', '{""type"": ""dict"", ""line"": 184, ""name"": ""default_filler"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [""b"", ""c"", ""f"", ""i"", ""O"", ""S"", ""u"", ""V"", ""U""], ""values"": [true, 1e+20, 1e+20, 999999, ""?"",   Expecting value: line 1 column 219 (char 218)']"
bench.py,"['bench.py', '{""type"": ""variable"", ""line"": 18, ""name"": ""zs"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
misc_util.py,"['misc_util.py', '{""type"": ""variable"", ""line"": 1841, ""name"": ""m"", ""value"": null, ""valueSrc"": ""re.match"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 115 (char 114)']"
ccompiler.py,"['ccompiler.py', '{""type"": ""variable"", ""line"": 152, ""name"": ""o"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
function_base.py,"['function_base.py', '{""type"": ""variable"", ""line"": 415, ""name"": ""out_sign[all_imag]"", ""value"":   Expecting value: line 1 column 74 (char 73)']"
_internal.py,"['_internal.py', '{""type"": ""variable"", ""line"": 23, ""name"": ""_nbo"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
memmap.py,"['memmap.py', '{""type"": ""function_call"", ""line"": 251, ""name"": ""fid.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
getlimits.py,"['getlimits.py', '{""type"": ""function_call"", ""line"": 114, ""name"": ""_register_type"", ""args"": [""float16_ma"",   Expecting value: line 1 column 89 (char 88)']"
linalg.py,"['linalg.py', '{""type"": ""variable"", ""line"": 43, ""name"": ""_N"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 197, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 471, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
models.py,"['models.py', '{""type"": ""variable"", ""line"": 828, ""name"": null, ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""b\'\'.join"",   Expecting value: line 1 column 135 (char 134)']"
pkcs1.py,"['pkcs1.py', '{""type"": ""dict"", ""line"": 38, ""name"": ""HASH_ASN1"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [""MD5"", ""SHA-1"", ""SHA-224"", ""SHA-256"", ""SHA-384"", ""SHA-512""], ""values"": [  Expecting value: line 1 column 195 (char 194)']"
pem.py,"['pem.py', '{""type"": ""function_def"", ""line"": 24, ""name"": ""_markers"", ""args"": [""pem_marker""], ""defaults"": [], ""return"":   Expecting value: line 1 column 108 (char 107)']"
transform.py,"['transform.py', '{""type"": ""list"", ""line"": 86, ""name"": ""raw_bytes"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 125 (char 124)']"
key.py,"['key.py', '{""type"": ""variable"", ""line"": 559, ""name"": ""der"", ""value"": null, ""valueSrc"": ""rsa.pem.load_pem"", ""isInput"": false, ""args"": [""keyfile"",   Expecting value: line 1 column 135 (char 134)']"
localization.py,"['localization.py', '{""type"": ""variable"", ""line"": 149, ""name"": ""raw_locales"", ""value"": null, ""valueSrc"": ""raw_locales.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 133 (char 132)']"
stata.py,"['stata.py', '{""type"": ""variable"", ""line"": 734, ""name"": ""null_byte"", ""value"":   Expecting value: line 1 column 65 (char 64)']"
parsers.py,"['parsers.py', '{""type"": ""dict"", ""line"": 476, ""name"": ""_parser_defaults"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [""delimiter"", ""escapechar"", ""quotechar"", ""quoting"", ""doublequote"", ""skipinitialspace"", ""lineterminator"", ""header"", ""index_col"", ""names"", ""prefix"", ""skiprows"", ""skipfooter"", ""nrows"", ""na_values"", ""keep_default_na"", ""true_values"", ""false_values"", ""converters"", ""dtype"", ""cache_dates"", ""thousands"", ""comment"", ""decimal"", ""parse_dates"", ""keep_date_col"", ""dayfirst"", ""date_parser"", ""usecols"", ""chunksize"", ""verbose"", ""encoding"", ""squeeze"", ""compression"", ""mangle_dupe_cols"", ""infer_datetime_format"", ""skip_blank_lines""], ""values"": [null, null, ""\\"""", ""csv.QUOTE_MINIMAL"", true, false, null, ""infer"", null, null, null, null, 0, null, null, true, null, null, null, null, true, null, null,   Expecting value: line 1 column 811 (char 810)']"
packers.py,"['packers.py', '{""type"": ""function_def"", ""line"": 271, ""name"": ""c2f"", ""args"": [""r"", ""i"", ""ctype_name""], ""defaults"": [], ""return"": null, ""returnArgs"": [""ftype"",   Expecting value: line 1 column 144 (char 143)']"
windows.py,"['windows.py', '{""type"": ""variable"", ""line"": 111, ""name"": ""hwnd"", ""value"": null, ""valueSrc"": ""safeCreateWindowExA"", ""isInput"": false, ""args"": [0,   Expecting value: line 1 column 131 (char 130)']"
sas7bdat.py,"['sas7bdat.py', '{""type"": ""comparison"", ""line"": 162, ""pairs"": [[""buf"",   Expecting value: line 1 column 55 (char 54)']"
sas_constants.py,"['sas_constants.py', '{""type"": ""variable"", ""line"": 8, ""name"": ""align_1_checker_value"", ""value"":   Expecting value: line 1 column 75 (char 74)']"
message.py,"['message.py', '{""type"": ""variable"", ""line"": 62, ""name"": ""_EMPTY"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
database.py,"['database.py', '{""type"": ""variable"", ""line"": 686, ""name"": ""dblen"", ""value"": null, ""valueSrc"": ""len"", ""isInput"": false, ""args"": [null,   Expecting value: line 1 column 119 (char 118)']"
auth.py,"['auth.py', '{""type"": ""variable"", ""line"": 193, ""name"": ""_u1"", ""value"": ""_mac.digest"", ""valueSrc"": ""_digest"", ""isInput"": false, ""args"": [""salt"",   Expecting value: line 1 column 132 (char 131)']"
network.py,"['network.py', '{""type"": ""comparison"", ""line"": 225, ""pairs"": [[""chunk"",   Expecting value: line 1 column 57 (char 56)']"
_unicodefun.py,"['_unicodefun.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""rv"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
_winconsole.py,"['_winconsole.py', '{""type"": ""variable"", ""line"": 60, ""name"": ""EOF"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
_compat.py,"['_compat.py', '{""type"": ""function_call"", ""line"": 140, ""name"": ""self._stream.write"", ""args"": [  Expecting value: line 1 column 79 (char 78)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 215, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""variable"", ""line"": 26, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
low_level.py,"['low_level.py', '{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 101 (char 100)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
isoparser.py,"['isoparser.py', '{""type"": ""variable"", ""line"": 202, ""name"": ""_DATE_SEP"", ""value"":   Expecting value: line 1 column 65 (char 64)']"
server.py,"['server.py', '{""type"": ""function_def"", ""line"": 1111, ""name"": ""__init__"", ""args"": [""self"", ""code"", ""headers"", ""body""], ""defaults"": [""HTTP_OK"", null,   Expecting value: line 1 column 135 (char 134)']"
filestore.py,"['filestore.py', '{""type"": ""variable"", ""line"": 29, ""name"": ""h64"", ""value"": null, ""valueSrc"": ""h64.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 118 (char 117)']"
formparser.py,"['formparser.py', '{""type"": ""function_def"", ""line"": 362, ""name"": ""_find_terminator"", ""args"": [""self"", ""iterator""], ""defaults"": [], ""return"":   Expecting value: line 1 column 123 (char 122)']"
_internal.py,"['_internal.py', '{""type"": ""set"", ""line"": 30, ""name"": ""_cookie_params"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 129 (char 128)']"
security.py,"['security.py', '{""type"": ""function_def"", ""line"": 168, ""name"": ""hashfunc"", ""args"": [""d""], ""defaults"": [  Expecting value: line 1 column 87 (char 86)']"
utils.py,"['utils.py', '{""type"": ""comparison"", ""line"": 311, ""pairs"": [[""head"",   Expecting value: line 1 column 56 (char 55)']"
urls.py,"['urls.py', '{""type"": ""variable"", ""line"": 358, ""name"": ""_at"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
serving.py,"['serving.py', '{""type"": ""function_call"", ""line"": 239, ""name"": ""self.wfile.write"", ""args"": [  Expecting value: line 1 column 77 (char 76)']"
http.py,"['http.py', '{""type"": ""comparison"", ""line"": 554, ""pairs"": [[""auth_type"",   Expecting value: line 1 column 61 (char 60)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 103, ""name"": ""match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
tbtools.py,"['tbtools.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""_coding_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
http_proxy.py,"['http_proxy.py', '{""type"": ""function_call"", ""line"": 175, ""name"": ""client.HTTPConnection.send"", ""args"": [  Expecting value: line 1 column 87 (char 86)']"
securecookie.py,"['securecookie.py', '{""type"": ""function_call"", ""line"": 251, ""name"": ""hmac.update"", ""args"": [  Expecting value: line 1 column 72 (char 71)']"
cache.py,"['cache.py', '{""type"": ""function_def"", ""line"": 604, ""name"": ""dump_object"", ""args"": [""self"", ""value""], ""defaults"": [], ""return"":   Expecting value: line 1 column 115 (char 114)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 299, ""name"": ""safe"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 125 (char 124)']"
webserver.py,"['webserver.py', '{""type"": ""list"", ""line"": 230, ""name"": ""net_interface_names"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 136 (char 135)']"
main.py,"['main.py', '{""type"": ""comparison"", ""line"": 74, ""pairs"": [[""topic"",   Expecting value: line 1 column 56 (char 55)']"
umqtt.py,"['umqtt.py', '{""type"": ""variable"", ""line"": 60, ""name"": ""msg"", ""value"": null, ""valueSrc"": ""bytearray"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 116 (char 115)']"
gateway.py,"['gateway.py', '{""type"": ""function_call"", ""line"": 176, ""name"": ""asyncio.get_event_loop.create_task"", ""args"": [""self.mqtt_client.publish"", ""gateway/check"",   Expecting value: line 1 column 140 (char 139)']"
hello.py,"['hello.py', '{""type"": ""function_def"", ""line"": 71, ""name"": ""hello_binary"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 106 (char 105)']"
log.py,"['log.py', '{""type"": ""function_call"", ""line"": 220, ""name"": ""file.write"", ""args"": [""message"",   Expecting value: line 1 column 82 (char 81)']"
asgi.py,"['asgi.py', '{""type"": ""function_call"", ""line"": 244, ""name"": ""body.write"", ""args"": [""message.get"", ""body"",   Expecting value: line 1 column 94 (char 93)']"
storage.py,"['storage.py', '{""type"": ""variable"", ""line"": 144, ""name"": ""file_data"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""file.data"",   Expecting value: line 1 column 143 (char 142)']"
mock.py,"['mock.py', '{""type"": ""function_def"", ""line"": 101, ""name"": ""method"", ""args"": [""self"", ""method"", ""location"", ""query"", ""data"", ""scheme"", ""address"", ""headers""], ""defaults"": ["""",   Expecting value: line 1 column 163 (char 162)']"
cache.py,"['cache.py', '{""type"": ""variable"", ""line"": 177, ""name"": ""expires_s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""legacy.bytes"",   Expecting value: line 1 column 146 (char 145)']"
session.py,"['session.py', '{""type"": ""tuple"", ""line"": 667, ""name"": null, ""value"": null, ""valueSrc"": ""data.split"", ""isInput"": false, ""names"": [""digest"", ""data""], ""args"": [  Expecting value: line 1 column 143 (char 142)']"
structures.py,"['structures.py', '{""type"": ""variable"", ""line"": 272, ""name"": ""data"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
util.py,"['util.py', '{""type"": ""variable"", ""line"": 1373, ""name"": ""part_s"", ""value"": null, ""valueSrc"": ""part.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
http.py,"['http.py', '{""type"": ""function_call"", ""line"": 1082, ""name"": ""buffer.append"", ""args"": [  Expecting value: line 1 column 75 (char 74)']"
base.py,"['base.py', '{""type"": ""variable"", ""line"": 228, ""name"": ""CSS_ABS_REGEX"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 128 (char 127)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 96, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
zip.py,"['zip.py', '{""type"": ""variable"", ""line"": 276, ""name"": ""signature"", ""value"":   Expecting value: line 1 column 65 (char 64)']"
base.py,"['base.py', '{""type"": ""comparison"", ""line"": 32, ""pairs"": [[""chunk"",   Expecting value: line 1 column 56 (char 55)']"
base64.py,"['base64.py', '{""type"": ""variable"", ""line"": 17, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
ensure_unicode_literals.py,"['ensure_unicode_literals.py', '{""type"": ""comparison"", ""line"": 51, ""pairs"": [[""source"",   Expecting value: line 1 column 57 (char 56)']"
ensure_license_headers.py,"['ensure_license_headers.py', '{""type"": ""function_call"", ""line"": 142, ""name"": ""fp.write"", ""args"": [""line"",   Expecting value: line 1 column 77 (char 76)']"
check_sanity.py,"['check_sanity.py', '{""type"": ""function_def"", ""line"": 115, ""name"": ""check_line"", ""args"": [""cls"", ""line""], ""defaults"": [], ""return"": ""line.endswith"", ""returnArgs"": [  Expecting value: line 1 column 144 (char 143)']"
installer.py,"['installer.py', '{""type"": ""variable"", ""line"": 32, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
makemessages.py,"['makemessages.py', '{""type"": ""function_call"", ""line"": 134, ""name"": ""lines.append"", ""args"": [""pot_line"",   Expecting value: line 1 column 85 (char 84)']"
itsdangerous.py,"['itsdangerous.py', '{""type"": ""function_def"", ""line"": 201, ""name"": ""base64_encode"", ""args"": [""string""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [  Expecting value: line 1 column 159 (char 158)']"
crypto.py,"['crypto.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""INTERRUPT"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
formparser.py,"['formparser.py', '{""type"": ""function_def"", ""line"": 315, ""name"": ""_find_terminator"", ""args"": [""self"", ""iterator""], ""defaults"": [], ""return"":   Expecting value: line 1 column 123 (char 122)']"
_internal.py,"['_internal.py', '{""type"": ""variable"", ""line"": 26, ""name"": ""_cookie_params"", ""value"": null, ""valueSrc"": ""set"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 121 (char 120)']"
urls.py,"['urls.py', '{""type"": ""variable"", ""line"": 25, ""name"": ""_always_safe"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
serving.py,"['serving.py', '{""type"": ""function_call"", ""line"": 119, ""name"": ""self.wfile.write"", ""args"": [  Expecting value: line 1 column 77 (char 76)']"
http.py,"['http.py', '{""type"": ""comparison"", ""line"": 440, ""pairs"": [[""auth_type"",   Expecting value: line 1 column 61 (char 60)']"
securecookie.py,"['securecookie.py', '{""type"": ""function_call"", ""line"": 224, ""name"": ""hmac.update"", ""args"": [  Expecting value: line 1 column 72 (char 71)']"
cache.py,"['cache.py', '{""type"": ""function_def"", ""line"": 492, ""name"": ""dump_object"", ""args"": [""self"", ""value""], ""defaults"": [], ""return"":   Expecting value: line 1 column 115 (char 114)']"
generate_tfrecord.py,"['generate_tfrecord.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""image_format"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
dupespotter.py,"['dupespotter.py', '{""type"": ""function_def"", ""line"": 39, ""name"": ""lower_escapes"", ""args"": [""url""], ""defaults"": [], ""return"": ""re.sub"", ""returnArgs"": [  Expecting value: line 1 column 131 (char 130)']"
typing.py,"['typing.py', '{""type"": ""function_def"", ""line"": 17, ""name"": ""is_dir"", ""args"": [""self"", ""follow_symlinks""], ""defaults"": [  Expecting value: line 1 column 106 (char 105)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 595, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 21, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
_inputstream.py,"['_inputstream.py', '{""type"": ""tuple"", ""line"": 697, ""name"": ""methodDispatch"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": ""errors[0]"", ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
resources.py,"['resources.py', '{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
scripts.py,"['scripts.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
wheel.py,"['wheel.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 197, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 471, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
models.py,"['models.py', '{""type"": ""variable"", ""line"": 828, ""name"": null, ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""b\'\'.join"",   Expecting value: line 1 column 135 (char 134)']"
fallback.py,"['fallback.py', '{""type"": ""function_def"", ""line"": 32, ""name"": ""__init__"", ""args"": [""self"", ""s""], ""defaults"": [  Expecting value: line 1 column 94 (char 93)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 215, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""variable"", ""line"": 26, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
low_level.py,"['low_level.py', '{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 101 (char 100)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
filewrapper.py,"['filewrapper.py', '{""type"": ""comparison"", ""line"": 71, ""pairs"": [[""amt"", 2], [""data"",   Expecting value: line 1 column 67 (char 66)']"
serialize.py,"['serialize.py', '{""type"": ""function_def"", ""line"": 22, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""b\',\'.join"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
_component.py,"['_component.py', '{""type"": ""variable"", ""line"": 29, ""name"": ""tmp_name"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 128 (char 127)']"
bsdf_lite.py,"['bsdf_lite.py', '{""type"": ""function_call"", ""line"": 231, ""name"": ""f.write"", ""args"": [  Expecting value: line 1 column 68 (char 67)']"
_tornadoserver.py,"['_tornadoserver.py', '{""type"": ""function_call"", ""line"": 585, ""name"": ""self.ping"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
attachments.py,"['attachments.py', '{""type"": ""variable"", ""line"": 257, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
util.py,"['util.py', '{""type"": ""function_def"", ""line"": 490, ""name"": ""is_xml"", ""args"": [""text"", ""expected_prefix""], ""defaults"": [  Expecting value: line 1 column 107 (char 106)']"
stream.py,"['stream.py', '{""type"": ""function_call"", ""line"": 37, ""name"": ""self._put"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
t2w.py,"['t2w.py', '{""type"": ""function_call"", ""line"": 264, ""name"": ""self._finished.callback"", ""args"": [  Expecting value: line 1 column 84 (char 83)']"
socks.py,"['socks.py', '{""type"": ""variable"", ""line"": 34, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
authority.py,"['authority.py', '{""type"": ""assert"", ""line"": 359, ""func"": ""buf.startswith"", ""args"": [  Expecting value: line 1 column 68 (char 67)']"
cli.py,"['cli.py', '{""type"": ""assert"", ""line"": 1037, ""left"": ""subprocess.check_output"", ""comparators"": [  Expecting value: line 1 column 85 (char 84)']"
user.py,"['user.py', '{""type"": ""comparison"", ""line"": 108, ""pairs"": [[""cn"",   Expecting value: line 1 column 54 (char 53)']"
scep.py,"['scep.py', '{""type"": ""variable"", ""line"": 86, ""name"": ""encrypted_container"", ""value"":   Expecting value: line 1 column 74 (char 73)']"
CryptMessagePlugin.py,"['CryptMessagePlugin.py', '{""type"": ""variable"", ""line"": 153, ""name"": ""publickey"", ""value"": null, ""valueSrc"": ""curve.private_to_public"", ""isInput"": false, ""args"": [null,   Expecting value: line 1 column 143 (char 142)']"
BigfilePiecefield.py,"['BigfilePiecefield.py', '{""type"": ""variable"", ""line"": 14, ""name"": ""find"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
BigfilePlugin.py,"['BigfilePlugin.py', '{""type"": ""variable"", ""line"": 83, ""name"": ""buffer"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
UiWebsocketPlugin.py,"['UiWebsocketPlugin.py', '{""type"": ""variable"", ""line"": 74, ""name"": ""row[pieces_downloaded]"", ""value"": null, ""valueSrc"": ""piecefield.count"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 142 (char 141)']"
BenchmarkPlugin.py,"['BenchmarkPlugin.py', '{""type"": ""variable"", ""line"": 250, ""name"": ""data"", ""value"": null, ""valueSrc"": ""io.BytesIO"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
BenchmarkPack.py,"['BenchmarkPack.py', '{""type"": ""variable"", ""line"": 74, ""name"": ""test_data_io"", ""value"": null, ""valueSrc"": ""io.BytesIO"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 126 (char 125)']"
Connection.py,"['Connection.py', '{""type"": ""comparison"", ""line"": 193, ""pairs"": [[""first_byte"",   Expecting value: line 1 column 62 (char 61)']"
FileRequest.py,"['FileRequest.py', '{""type"": ""function_call"", ""line"": 429, ""name"": ""self.response"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
subtl.py,"['subtl.py', '{""type"": ""variable"", ""line"": 106, ""name"": ""payload"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
_ecc.py,"['_ecc.py', '{""type"": ""function_def"", ""line"": 315, ""name"": ""private_to_wif"", ""args"": [""self"", ""private_key""], ""defaults"": [], ""return"": ""base58.b58encode_check"", ""returnArgs"": [  Expecting value: line 1 column 165 (char 164)']"
cssvendor.py,"['cssvendor.py', '{""type"": ""variable"", ""line"": 5, ""name"": ""content"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 116 (char 115)']"
libsecp256k1message.py,"['libsecp256k1message.py', '{""type"": ""variable"", ""line"": 149, ""name"": ""privatekey"", ""value"": ""PrivateKey"", ""valueSrc"": ""decode_secret_key"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 140 (char 139)']"
__init__.py,"['__init__.py', '{""type"": ""comparison"", ""line"": 157, ""pairs"": [[""block"",   Expecting value: line 1 column 57 (char 56)']"
DebugMedia.py,"['DebugMedia.py', '{""type"": ""variable"", ""line"": 74, ""name"": ""old_parts[match.decode]"", ""value"": null, ""valueSrc"": ""match.strip"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 138 (char 137)']"
TorManager.py,"['TorManager.py', '{""type"": ""function_call"", ""line"": 255, ""name"": ""socket.socket_noproxy.sendall"", ""args"": [  Expecting value: line 1 column 90 (char 89)']"
UiRequest.py,"['UiRequest.py', '{""type"": ""variable"", ""line"": 728, ""name"": ""block"", ""value"": null, ""valueSrc"": ""block.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 123 (char 122)']"
UiServer.py,"['UiServer.py', '{""type"": ""function_call"", ""line"": 181, ""name"": ""sock.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
Peer.py,"['Peer.py', '{""type"": ""variable"", ""line"": 373, ""name"": ""body"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
Electrum.py,"['Electrum.py', '{""type"": ""variable"", ""line"": 13, ""name"": ""result"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
keys.py,"['keys.py', '{""type"": ""function_def"", ""line"": 254, ""name"": ""sign_deterministic"", ""args"": [""self"", ""data"", ""hashfunc"", ""sigencode"", ""extra_entropy""], ""defaults"": [null, ""sigencode_string"",   Expecting value: line 1 column 176 (char 175)']"
rfc6979.py,"['rfc6979.py', '{""type"": ""function_def"", ""line"": 45, ""name"": ""generate_k"", ""args"": [""order"", ""secexp"", ""hash_func"", ""data"", ""retry_gen"", ""extra_entropy""], ""defaults"": [0,   Expecting value: line 1 column 156 (char 155)']"
exchange.py,"['exchange.py', '{""type"": ""variable"", ""line"": 1894, ""name"": ""hash_bytes"", ""value"": null, ""valueSrc"": ""self.web3.sha3"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 130 (char 129)']"
file_helpers.py,"['file_helpers.py', '{""type"": ""variable"", ""line"": 83, ""name"": ""buffer_gen"", ""value"": null, ""valueSrc"": ""iter"", ""isInput"": false, ""args"": [""partial"",   Expecting value: line 1 column 129 (char 128)']"
Standalone.py,"['Standalone.py', '{""type"": ""variable"", ""line"": 282, ""name"": ""parts"", ""value"": null, ""valueSrc"": ""line.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
CStrings.py,"['CStrings.py', '{""type"": ""comparison"", ""line"": 52, ""pairs"": [[""c"",   Expecting value: line 1 column 52 (char 51)']"
SharedLibraries.py,"['SharedLibraries.py', '{""type"": ""tuple"", ""line"": 87, ""name"": null, ""value"": null, ""valueSrc"": ""line.strip.split"", ""isInput"": false, ""names"": [""left"", ""right""], ""args"": [  Expecting value: line 1 column 147 (char 146)']"
__main__.py,"['__main__.py', '{""type"": ""function_call"", ""line"": 122, ""name"": ""output.write"", ""args"": [  Expecting value: line 1 column 73 (char 72)']"
MSI.py,"['MSI.py', '{""type"": ""comparison"", ""line"": 84, ""pairs"": [[""branch_name"",   Expecting value: line 1 column 62 (char 61)']"
__main__.py,"['__main__.py', '{""type"": ""variable"", ""line"": 49, ""name"": ""contents"", ""value"": null, ""valueSrc"": ""contents.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 128 (char 127)']"
Autoformat.py,"['Autoformat.py', '{""type"": ""variable"", ""line"": 61, ""name"": ""updated_code"", ""value"": null, ""valueSrc"": ""source_code.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 135 (char 134)']"
GlobalConstants.py,"['GlobalConstants.py', '{""type"": ""list"", ""line"": 38, ""name"": ""result"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [0, 1, 0.0, 1.0, """",   Expecting value: line 1 column 142 (char 141)']"
BuiltinTypeShapes.py,"['BuiltinTypeShapes.py', '{""type"": ""variable"", ""line"": 917, ""name"": ""typical_value"", ""value"":   Expecting value: line 1 column 69 (char 68)']"
SconsCaching.py,"['SconsCaching.py', '{""type"": ""comparison"", ""line"": 379, ""pairs"": [[""line"",   Expecting value: line 1 column 56 (char 55)']"
Action.py,"['Action.py', '{""type"": ""function_call"", ""line"": 252, ""name"": ""contents.extend"", ""args"": [  Expecting value: line 1 column 76 (char 75)']"
pefile.py,"['pefile.py', '{""type"": ""variable"", ""line"": 1436, ""name"": ""allowed_filename"", ""value"": ""x"", ""valueSrc"": ""b"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
__init__.py,"['__init__.py', '{""type"": ""dict"", ""line"": 12, ""name"": ""ords"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 118 (char 117)']"
ws2_32.py,"['ws2_32.py', '{""type"": ""dict"", ""line"": 2, ""name"": ""ord_names"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 151, 500], ""values"": [  Expecting value: line 1 column 611 (char 610)']"
oleaut32.py,"['oleaut32.py', '{""type"": ""dict"", ""line"": 1, ""name"": ""ord_names"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 401, 402, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443], ""values"": [  Expecting value: line 1 column 2018 (char 2017)']"
SourceReading.py,"['SourceReading.py', '{""type"": ""variable"", ""line"": 56, ""name"": ""line1_match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
resources_rc.py,"['resources_rc.py', '{""type"": ""variable"", ""line"": 11, ""name"": ""qt_resource_data"", ""value"":   Expecting value: line 1 column 71 (char 70)']"
handlers.py,"['handlers.py', '{""type"": ""function_call"", ""line"": 132, ""name"": ""sha1.update"", ""args"": [  Expecting value: line 1 column 72 (char 71)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 162, ""name"": ""re_url_scheme"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 128 (char 127)']"
browser.py,"['browser.py', '{""type"": ""function_call"", ""line"": 14, ""name"": ""f.write"", ""args"": [  Expecting value: line 1 column 67 (char 66)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 6, ""name"": ""RE_CHARSET"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 123 (char 122)']"
_codec3.py,"['_codec3.py', '{""type"": ""variable"", ""line"": 266, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
dammit.py,"['dammit.py', '{""type"": ""variable"", ""line"": 421, ""name"": ""smart_quotes_re"", ""value"":   Expecting value: line 1 column 71 (char 70)']"
element.py,"['element.py', '{""type"": ""variable"", ""line"": 421, ""name"": ""smart_quotes_re"", ""value"":   Expecting value: line 1 column 71 (char 70)']"
diagnose.py,"['diagnose.py', '{""type"": ""variable"", ""line"": 421, ""name"": ""smart_quotes_re"", ""value"":   Expecting value: line 1 column 71 (char 70)']"
_lxml.py,"['_lxml.py', '{""type"": ""variable"", ""line"": 421, ""name"": ""smart_quotes_re"", ""value"":   Expecting value: line 1 column 71 (char 70)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 68, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 269, ""name"": ""fmt"", ""value"": null, ""valueSrc"": ""fmt.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
constants.py,"['constants.py', '{""type"": ""variable"", ""line"": 269, ""name"": ""fmt"", ""value"": null, ""valueSrc"": ""fmt.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
utils.py,"['utils.py', '{""type"": ""function_def"", ""line"": 271, ""name"": ""align_block"", ""args"": [""raw"", ""multiple"", ""pad""], ""defaults"": [4,   Expecting value: line 1 column 114 (char 113)']"
huffcdic.py,"['huffcdic.py', '{""type"": ""tuple"", ""line"": 27, ""name"": null, ""value"": null, ""valueSrc"": ""struct.unpack_from"", ""isInput"": false, ""names"": [""off1"", ""off2""], ""args"": [  Expecting value: line 1 column 148 (char 147)']"
markup.py,"['markup.py', '{""type"": ""function_obj"", ""line"": 26, ""objName"": ""posfid_pattern"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 102 (char 101)']"
headers.py,"['headers.py', '{""type"": ""comparison"", ""line"": 58, ""pairs"": [[""content"",   Expecting value: line 1 column 58 (char 57)']"
index.py,"['index.py', '{""type"": ""function_call"", ""line"": 44, ""name"": ""check_signature"", ""args"": [""data"",   Expecting value: line 1 column 83 (char 82)']"
mobi8.py,"['mobi8.py', '{""type"": ""variable"", ""line"": 44, ""name"": ""pgt"", ""value"": null, ""valueSrc"": ""ml.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 114 (char 113)']"
serializer.py,"['serializer.py', '{""type"": ""function_call"", ""line"": 116, ""name"": ""buf.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
resources.py,"['resources.py', '{""type"": ""function_call"", ""line"": 116, ""name"": ""buf.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
indexer.py,"['indexer.py', '{""type"": ""variable"", ""line"": 56, ""name"": ""header"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
skeleton.py,"['skeleton.py', '{""type"": ""function_def"", ""line"": 41, ""name"": ""close_self_closing_tags"", ""args"": [""raw""], ""defaults"": [], ""return"": ""_self_closing_pat.sub"", ""returnArgs"": [  Expecting value: line 1 column 156 (char 155)']"
main.py,"['main.py', '{""type"": ""function_call"", ""line"": 304, ""name"": ""self.records.append"", ""args"": [  Expecting value: line 1 column 80 (char 79)']"
header.py,"['header.py', '{""type"": ""variable"", ""line"": 24, ""name"": ""HEADER_NAME"", ""value"":   Expecting value: line 1 column 66 (char 65)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 30, ""name"": ""HEADER_NAME"", ""value"":   Expecting value: line 1 column 66 (char 65)']"
exth.py,"['exth.py', '{""type"": ""variable"", ""line"": 85, ""name"": ""rights"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
mobi.py,"['mobi.py', '{""type"": ""variable"", ""line"": 85, ""name"": ""rights"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
localunzip.py,"['localunzip.py', '{""type"": ""variable"", ""line"": 23, ""name"": ""HEADER_BYTE_SIG"", ""value"": null, ""valueSrc"": ""pack"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 123 (char 122)']"
client.py,"['client.py', '{""type"": ""function_def"", ""line"": 138, ""name"": ""fetch"", ""args"": [""self"", ""method"", ""path"", ""query_args"", ""headers"", ""body"", ""recursed""], ""defaults"": [""/"", null, null,   Expecting value: line 1 column 167 (char 166)']"
utils.py,"['utils.py', '{""type"": ""function_def"", ""line"": 127, ""name"": ""calc_md5"", ""args"": [""string""], ""defaults"": [], ""return"": ""base64.b64encode.strip"", ""returnArgs"": [  Expecting value: line 1 column 146 (char 145)']"
Numbers.py,"['Numbers.py', '{""type"": ""variable"", ""line"": 15, ""name"": ""c"", ""value"":   Expecting value: line 1 column 56 (char 55)']"
string.py,"['string.py', '{""type"": ""variable"", ""line"": 15, ""name"": ""c"", ""value"":   Expecting value: line 1 column 56 (char 55)']"
shell_logger.py,"['shell_logger.py', '{""type"": ""function_call"", ""line"": 22, ""name"": ""f.write"", ""args"": [  Expecting value: line 1 column 67 (char 66)']"
msgfmt.py,"['msgfmt.py', '{""type"": ""variable"", ""line"": 126, ""name"": ""ids"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
wsgi.py,"['wsgi.py', '{""type"": ""function_call"", ""line"": 43, ""name"": ""body.write"", ""args"": [""message.get"", ""body"",   Expecting value: line 1 column 93 (char 92)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 583, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
multipartparser.py,"['multipartparser.py', '{""type"": ""variable"", ""line"": 330, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
request.py,"['request.py', '{""type"": ""function_def"", ""line"": 366, ""name"": ""__iter__"", ""args"": [""self""], ""defaults"": [], ""return"": ""iter"", ""returnArgs"": [""self.readline"",   Expecting value: line 1 column 143 (char 142)']"
response.py,"['response.py', '{""type"": ""function_def"", ""line"": 289, ""name"": ""__init__"", ""args"": [""self"", ""content"", ""args""], ""defaults"": [  Expecting value: line 1 column 109 (char 108)']"
__init__.py,"['__init__.py', '{""type"": ""list"", ""line"": 2214, ""name"": ""empty_values"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [null,   Expecting value: line 1 column 136 (char 135)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 185, ""name"": ""bits"", ""value"": null, ""valueSrc"": ""uri.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 118 (char 117)']"
signing.py,"['signing.py', '{""type"": ""function_def"", ""line"": 62, ""name"": ""b64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [  Expecting value: line 1 column 150 (char 149)']"
asgi.py,"['asgi.py', '{""type"": ""function_call"", ""line"": 234, ""name"": ""response_headers.append"", ""args"": [  Expecting value: line 1 column 84 (char 83)']"
wsgi.py,"['wsgi.py', '{""type"": ""variable"", ""line"": 12, ""name"": ""_slashes_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
filebased.py,"['filebased.py', '{""type"": ""function_call"", ""line"": 44, ""name"": ""self.stream.write"", ""args"": [""message.message"",   Expecting value: line 1 column 96 (char 95)']"
uploadedfile.py,"['uploadedfile.py', '{""type"": ""variable"", ""line"": 104, ""name"": ""content"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""content"",   Expecting value: line 1 column 139 (char 138)']"
base.py,"['base.py', '{""type"": ""tuple"", ""line"": 113, ""name"": null, ""value"": null, ""valueSrc"": ""encoded_data.split"", ""isInput"": false, ""names"": [""hash"", ""serialized""], ""args"": [  Expecting value: line 1 column 155 (char 154)']"
geometry.py,"['geometry.py', '{""type"": ""variable"", ""line"": 119, ""name"": ""parts"", ""value"": null, ""valueSrc"": ""ewkt.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
layer.py,"['layer.py', '{""type"": ""variable"", ""line"": 37, ""name"": null, ""value"": null, ""valueSrc"": ""self.test_capability"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 126 (char 125)']"
libgdal.py,"['libgdal.py', '{""type"": ""function_def"", ""line"": 76, ""name"": ""gdal_version"", ""args"": [], ""defaults"": [], ""return"": ""_version_info"", ""returnArgs"": [  Expecting value: line 1 column 132 (char 131)']"
srs.py,"['srs.py', '{""type"": ""variable"", ""line"": 79, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""c_char_p"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 115 (char 114)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
PcxImagePlugin.py,"['PcxImagePlugin.py', '{""type"": ""function_call"", ""line"": 160, ""name"": ""fp.write"", ""args"": [""o8"", ""o8"", ""o8"", ""o8"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"", ""o16"",   Expecting value: line 1 column 135 (char 134)']"
GifImagePlugin.py,"['GifImagePlugin.py', '{""type"": ""comparison"", ""line"": 178, ""pairs"": [[""s"",   Expecting value: line 1 column 53 (char 52)']"
JpegImagePlugin.py,"['JpegImagePlugin.py', '{""type"": ""variable"", ""line"": 382, ""name"": ""s"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
TiffImagePlugin.py,"['TiffImagePlugin.py', '{""type"": ""variable"", ""line"": 61, ""name"": ""II"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
ImImagePlugin.py,"['ImImagePlugin.py', '{""type"": ""variable"", ""line"": 104, ""name"": ""split"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
GbrImagePlugin.py,"['GbrImagePlugin.py', '{""type"": ""comparison"", ""line"": 65, ""pairs"": [[""magic_number"",   Expecting value: line 1 column 63 (char 62)']"
XpmImagePlugin.py,"['XpmImagePlugin.py', '{""type"": ""variable"", ""line"": 24, ""name"": ""xpm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WebPImagePlugin.py,"['WebPImagePlugin.py', '{""type"": ""dict"", ""line"": 17, ""name"": ""_VP8_MODES_BY_IDENTIFIER"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 138 (char 137)']"
Image.py,"['Image.py', '{""type"": ""function_def"", ""line"": 753, ""name"": ""tobitmap"", ""args"": [""self"", ""name""], ""defaults"": [""image""], ""return"": ""b\'\'.join"", ""returnArgs"": [""None.encode"", ""ascii"", ""None.encode"", ""ascii"", ""None.encode"", ""ascii"", [],   Expecting value: line 1 column 221 (char 220)']"
BmpImagePlugin.py,"['BmpImagePlugin.py', '{""type"": ""function_call"", ""line"": 327, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
IcoImagePlugin.py,"['IcoImagePlugin.py', '{""type"": ""variable"", ""line"": 36, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
FontFile.py,"['FontFile.py', '{""type"": ""function_call"", ""line"": 106, ""name"": ""fp.write"", ""args"": [  Expecting value: line 1 column 69 (char 68)']"
PpmImagePlugin.py,"['PpmImagePlugin.py', '{""type"": ""variable"", ""line"": 23, ""name"": ""b_whitespace"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
ImtImagePlugin.py,"['ImtImagePlugin.py', '{""type"": ""variable"", ""line"": 25, ""name"": ""field"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
ImageQt.py,"['ImageQt.py', '{""type"": ""function_call"", ""line"": 109, ""name"": ""new_data.append"", ""args"": [  Expecting value: line 1 column 76 (char 75)']"
PixarImagePlugin.py,"['PixarImagePlugin.py', '{""type"": ""comparison"", ""line"": 46, ""pairs"": [[""s"",   Expecting value: line 1 column 52 (char 51)']"
ImageFont.py,"['ImageFont.py', '{""type"": ""function_call"", ""line"": 101, ""name"": ""file.readline.split"", ""args"": [  Expecting value: line 1 column 80 (char 79)']"
ContainerIO.py,"['ContainerIO.py', '{""type"": ""variable"", ""line"": 95, ""name"": ""s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 121 (char 120)']"
XbmImagePlugin.py,"['XbmImagePlugin.py', '{""type"": ""variable"", ""line"": 27, ""name"": ""xbm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
WalImageFile.py,"['WalImageFile.py', '{""type"": ""variable"", ""line"": 73, ""name"": ""quake2palette"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
FtexImagePlugin.py,"['FtexImagePlugin.py', '{""type"": ""variable"", ""line"": 59, ""name"": ""MAGIC"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
BdfFontFile.py,"['BdfFontFile.py', '{""type"": ""variable"", ""line"": 55, ""name"": ""i"", ""value"": null, ""valueSrc"": ""s.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 111 (char 110)']"
DdsImagePlugin.py,"['DdsImagePlugin.py', '{""type"": ""comparison"", ""line"": 139, ""pairs"": [[""fourcc"",   Expecting value: line 1 column 58 (char 57)']"
XVThumbImagePlugin.py,"['XVThumbImagePlugin.py', '{""type"": ""variable"", ""line"": 23, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
IcnsImagePlugin.py,"['IcnsImagePlugin.py', '{""type"": ""comparison"", ""line"": 45, ""pairs"": [[""sig"",   Expecting value: line 1 column 54 (char 53)']"
EpsImagePlugin.py,"['EpsImagePlugin.py', '{""type"": ""variable"", ""line"": 173, ""name"": ""s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""self.char"",   Expecting value: line 1 column 135 (char 134)']"
SgiImagePlugin.py,"['SgiImagePlugin.py', '{""type"": ""function_call"", ""line"": 185, ""name"": ""fp.write"", ""args"": [""struct.pack"", ""4s"",   Expecting value: line 1 column 90 (char 89)']"
Jpeg2KImagePlugin.py,"['Jpeg2KImagePlugin.py', '{""type"": ""comparison"", ""line"": 74, ""pairs"": [[""tbox"",   Expecting value: line 1 column 55 (char 54)']"
PdfParser.py,"['PdfParser.py', '{""type"": ""function_call"", ""line"": 164, ""name"": ""f.write"", ""args"": [  Expecting value: line 1 column 68 (char 67)']"
TgaImagePlugin.py,"['TgaImagePlugin.py', '{""type"": ""variable"", ""line"": 113, ""name"": null, ""value"": null, ""valueSrc"": ""ImagePalette.raw"", ""isInput"": false, ""args"": [""BGR;16"",   Expecting value: line 1 column 133 (char 132)']"
ImageFile.py,"['ImageFile.py', '{""type"": ""variable"", ""line"": 217, ""name"": ""prefix"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
CurImagePlugin.py,"['CurImagePlugin.py', '{""type"": ""variable"", ""line"": 48, ""name"": ""m"", ""value"":   Expecting value: line 1 column 56 (char 55)']"
PngImagePlugin.py,"['PngImagePlugin.py', '{""type"": ""variable"", ""line"": 49, ""name"": ""_MAGIC"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
ImageDraw.py,"['ImageDraw.py', '{""type"": ""variable"", ""line"": 254, ""name"": ""split_character"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""\\n"",   Expecting value: line 1 column 142 (char 141)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 198, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 471, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
models.py,"['models.py', '{""type"": ""variable"", ""line"": 829, ""name"": null, ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""b\'\'.join"",   Expecting value: line 1 column 135 (char 134)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 404, ""name"": ""space"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
dammit.py,"['dammit.py', '{""type"": ""variable"", ""line"": 504, ""name"": ""smart_quotes_re"", ""value"":   Expecting value: line 1 column 71 (char 70)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 229, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""variable"", ""line"": 36, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
low_level.py,"['low_level.py', '{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 101 (char 100)']"
url.py,"['url.py', '{""type"": ""function_call"", ""line"": 239, ""name"": ""encoded_component.extend"", ""args"": [  Expecting value: line 1 column 85 (char 84)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
cryptography.py,"['cryptography.py', '{""type"": ""variable"", ""line"": 153, ""name"": ""cn"", ""value"": null, ""valueSrc"": ""next"", ""isInput"": false, ""args"": [""iter"",   Expecting value: line 1 column 119 (char 118)']"
pyopenssl.py,"['pyopenssl.py', '{""type"": ""variable"", ""line"": 135, ""name"": ""cn"", ""value"": null, ""valueSrc"": ""next"", ""isInput"": false, ""args"": [""iter"",   Expecting value: line 1 column 119 (char 118)']"
_common.py,"['_common.py', '{""type"": ""variable"", ""line"": 144, ""name"": ""_RE_LEGAL_CHARS"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 130 (char 129)']"
update.py,"['update.py', '{""type"": ""variable"", ""line"": 167, ""name"": ""content"", ""value"": null, ""valueSrc"": ""content.replace"", ""isInput"": false, ""args"": [null,   Expecting value: line 1 column 133 (char 132)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 118, ""name"": ""BSONNUM"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
backend_ctypes.py,"['backend_ctypes.py', '{""type"": ""variable"", ""line"": 527, ""name"": null, ""value"": null, ""valueSrc"": ""ctypes.create_string_buffer"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 134 (char 133)']"
connection.py,"['connection.py', '{""type"": ""variable"", ""line"": 83, ""name"": ""SYM_STAR"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
client.py,"['client.py', '{""type"": ""variable"", ""line"": 28, ""name"": ""SYM_EMPTY"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
SSL.py,"['SSL.py', '{""type"": ""variable"", ""line"": 235, ""name"": ""_CRYPTOGRAPHY_MANYLINUX1_CA_DIR"", ""value"":   Expecting value: line 1 column 87 (char 86)']"
crypto.py,"['crypto.py', '{""type"": ""list"", ""line"": 1961, ""name"": ""_crl_reasons"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 130 (char 129)']"
wheel.py,"['wheel.py', '{""type"": ""function_call"", ""line"": 595, ""name"": ""installer_file.write"", ""args"": [  Expecting value: line 1 column 81 (char 80)']"
encoding.py,"['encoding.py', '{""type"": ""variable"", ""line"": 21, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
_inputstream.py,"['_inputstream.py', '{""type"": ""tuple"", ""line"": 697, ""name"": ""methodDispatch"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": ""errors[0]"", ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
resources.py,"['resources.py', '{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
scripts.py,"['scripts.py', '{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
wheel.py,"['wheel.py', '{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
index.py,"['index.py', '{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
tarfile.py,"['tarfile.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 197, ""name"": ""splitstr"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
adapters.py,"['adapters.py', '{""type"": ""function_call"", ""line"": 471, ""name"": ""low_conn.send"", ""args"": [  Expecting value: line 1 column 74 (char 73)']"
models.py,"['models.py', '{""type"": ""variable"", ""line"": 828, ""name"": null, ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""b\'\'.join"",   Expecting value: line 1 column 135 (char 134)']"
fallback.py,"['fallback.py', '{""type"": ""function_def"", ""line"": 32, ""name"": ""__init__"", ""args"": [""self"", ""s""], ""defaults"": [  Expecting value: line 1 column 94 (char 93)']"
connection.py,"['connection.py', '{""type"": ""function_call"", ""line"": 215, ""name"": ""self.send"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
filepost.py,"['filepost.py', '{""type"": ""function_call"", ""line"": 92, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
response.py,"['response.py', '{""type"": ""variable"", ""line"": 26, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
low_level.py,"['low_level.py', '{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [  Expecting value: line 1 column 101 (char 100)']"
universaldetector.py,"['universaldetector.py', '{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 132 (char 131)']"
charsetprober.py,"['charsetprober.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 113 (char 112)']"
filewrapper.py,"['filewrapper.py', '{""type"": ""comparison"", ""line"": 71, ""pairs"": [[""amt"", 2], [""data"",   Expecting value: line 1 column 67 (char 66)']"
serialize.py,"['serialize.py', '{""type"": ""function_def"", ""line"": 22, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""b\',\'.join"", ""returnArgs"": [  Expecting value: line 1 column 162 (char 161)']"
core.py,"['core.py', '{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":   Expecting value: line 1 column 68 (char 67)']"
form.py,"['form.py', '{""type"": ""function_call"", ""line"": 64, ""name"": ""body.write"", ""args"": [  Expecting value: line 1 column 70 (char 69)']"
url.py,"['url.py', '{""type"": ""variable"", ""line"": 29, ""name"": ""RFC3986_GEN_DELIMS"", ""value"":   Expecting value: line 1 column 73 (char 72)']"
http.py,"['http.py', '{""type"": ""function_def"", ""line"": 81, ""name"": ""basic_auth_header"", ""args"": [""username"", ""password"", ""encoding""], ""defaults"": [""ISO-8859-1""], ""return"":   Expecting value: line 1 column 151 (char 150)']"
exporters.py,"['exporters.py', '{""type"": ""function_call"", ""line"": 113, ""name"": ""self.file.write"", ""args"": [  Expecting value: line 1 column 76 (char 75)']"
responsetypes.py,"['responsetypes.py', '{""type"": ""comparison"", ""line"": 74, ""pairs"": [[""headers"",   Expecting value: line 1 column 58 (char 57)']"
__init__.py,"['__init__.py', '{""type"": ""variable"", ""line"": 78, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
form.py,"['form.py', '{""type"": ""function_call"", ""line"": 34, ""name"": ""self.headers.setdefault"", ""args"": [  Expecting value: line 1 column 83 (char 82)']"
__init__.py,"['__init__.py', '{""type"": ""function_def"", ""line"": 19, ""name"": ""__init__"", ""args"": [""self"", ""url"", ""status"", ""headers"", ""body"", ""flags"", ""request""], ""defaults"": [200, null,   Expecting value: line 1 column 156 (char 155)']"
text.py,"['text.py', '{""type"": ""variable"", ""line"": 43, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
benchserver.py,"['benchserver.py', '{""type"": ""function_def"", ""line"": 15, ""name"": ""render"", ""args"": [""self"", ""request""], ""defaults"": [], ""return"":   Expecting value: line 1 column 111 (char 110)']"
gz.py,"['gz.py', '{""type"": ""variable"", ""line"": 37, ""name"": ""chunk"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
response.py,"['response.py', '{""type"": ""comparison"", ""line"": 64, ""pairs"": [[""body"",   Expecting value: line 1 column 55 (char 54)']"
webclient.py,"['webclient.py', '{""type"": ""variable"", ""line"": 42, ""name"": ""delimiter"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
http11.py,"['http11.py', '{""type"": ""variable"", ""line"": 104, ""name"": ""_responseMatcher"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 131 (char 130)']"
httpcompression.py,"['httpcompression.py', '{""type"": ""list"", ""line"": 9, ""name"": ""ACCEPTED_ENCODINGS"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 133 (char 132)']"
useragent.py,"['useragent.py', '{""type"": ""function_call"", ""line"": 23, ""name"": ""request.headers.setdefault"", ""args"": [  Expecting value: line 1 column 86 (char 85)']"
fetch.py,"['fetch.py', '{""type"": ""function_call"", ""line"": 37, ""name"": ""self._print_bytes"", ""args"": [""prefix"",   Expecting value: line 1 column 87 (char 86)']"
httpcache.py,"['httpcache.py', '{""type"": ""variable"", ""line"": 54, ""name"": ""cch"", ""value"": null, ""valueSrc"": ""r.headers.get"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
hosts.py,"['hosts.py', '{""type"": ""variable"", ""line"": 42, ""name"": ""idx"", ""value"": null, ""valueSrc"": ""line.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 116 (char 115)']"
authority.py,"['authority.py', '{""type"": ""variable"", ""line"": 310, ""name"": null, ""value"": null, ""valueSrc"": ""nativeString"", ""isInput"": false, ""args"": [null,   Expecting value: line 1 column 125 (char 124)']"
dns.py,"['dns.py', '{""type"": ""variable"", ""line"": 242, ""name"": ""labels"", ""value"": null, ""valueSrc"": ""name.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 121 (char 120)']"
client.py,"['client.py', '{""type"": ""variable"", ""line"": 185, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
tuntap.py,"['tuntap.py', '{""type"": ""variable"", ""line"": 37, ""name"": ""_TUN_KO_PATH"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
pb.py,"['pb.py', '{""type"": ""function_def"", ""line"": 155, ""name"": ""__call__"", ""args"": [""self"", ""args""], ""defaults"": [], ""return"": ""self.obj.broker._sendMessage"", ""returnArgs"": [  Expecting value: line 1 column 158 (char 157)']"
flavors.py,"['flavors.py', '{""type"": ""variable"", ""line"": 44, ""name"": ""copy_atom"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
banana.py,"['banana.py', '{""type"": ""list"", ""line"": 105, ""name"": ""knownDialects"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 130 (char 129)']"
jelly.py,"['jelly.py', '{""type"": ""variable"", ""line"": 114, ""name"": ""None_atom"", ""value"":   Expecting value: line 1 column 65 (char 64)']"
_pidfile.py,"['_pidfile.py', '{""type"": ""variable"", ""line"": 124, ""name"": ""pidString"", ""value"":   Expecting value: line 1 column 65 (char 64)']"
irc.py,"['irc.py', '{""type"": ""variable"", ""line"": 1208, ""name"": ""delimiter"", ""value"":   Expecting value: line 1 column 66 (char 65)']"
sasl.py,"['sasl.py', '{""type"": ""function_def"", ""line"": 172, ""name"": ""sendResponse"", ""args"": [""self"", ""data""], ""defaults"": [  Expecting value: line 1 column 102 (char 101)']"
sasl_mechanisms.py,"['sasl_mechanisms.py', '{""type"": ""comparison"", ""line"": 139, ""pairs"": [[""directives"",   Expecting value: line 1 column 62 (char 61)']"
inotify.py,"['inotify.py', '{""type"": ""variable"", ""line"": 186, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
_pollingfile.py,"['_pollingfile.py', '{""type"": ""function_call"", ""line"": 277, ""name"": ""win32file.WriteFile"", ""args"": [""self.writePipe"",   Expecting value: line 1 column 98 (char 97)']"
process.py,"['process.py', '{""type"": ""assert"", ""line"": 244, ""left"": ""data"", ""comparators"": [  Expecting value: line 1 column 65 (char 64)']"
endpoints.py,"['endpoints.py', '{""type"": ""variable"", ""line"": 1385, ""name"": ""privateCertificate"", ""value"": null, ""valueSrc"": ""ssl.PrivateCertificate.loadPEM"", ""isInput"": false, ""args"": [""certPEM"",   Expecting value: line 1 column 165 (char 164)']"
abstract.py,"['abstract.py', '{""type"": ""variable"", ""line"": 174, ""name"": ""dataBuffer"", ""value"":   Expecting value: line 1 column 66 (char 65)']"
unix.py,"['unix.py', '{""type"": ""variable"", ""line"": 371, ""name"": null, ""value"": null, ""valueSrc"": ""lockfile.FilesystemLock"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 130 (char 129)']"
posixbase.py,"['posixbase.py', '{""type"": ""function_call"", ""line"": 91, ""name"": ""util.untilConcludes"", ""args"": [""self.w.send"",   Expecting value: line 1 column 94 (char 93)']"
base.py,"['base.py', '{""type"": ""comparison"", ""line"": 979, ""pairs"": [[""arg"",   Expecting value: line 1 column 55 (char 54)']"
abstract.py,"['abstract.py', '{""type"": ""variable"", ""line"": 146, ""name"": ""dataBuffer"", ""value"":   Expecting value: line 1 column 66 (char 65)']"
util.py,"['util.py', '{""type"": ""variable"", ""line"": 313, ""name"": ""newPath"", ""value"": null, ""valueSrc"": ""FilePath"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 120 (char 119)']"
workertrial.py,"['workertrial.py', '{""type"": ""comparison"", ""line"": 94, ""pairs"": [[""r"",   Expecting value: line 1 column 52 (char 51)']"
workercommands.py,"['workercommands.py', '{""type"": ""list"", ""line"": 21, ""name"": ""arguments"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 125 (char 124)']"
managercommands.py,"['managercommands.py', '{""type"": ""list"", ""line"": 21, ""name"": ""arguments"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 125 (char 124)']"
dirdbm.py,"['dirdbm.py', '{""type"": ""function_def"", ""line"": 79, ""name"": ""_encode"", ""args"": [""self"", ""k""], ""defaults"": [], ""return"": ""base64.encodestring.replace.replace"", ""returnArgs"": [  Expecting value: line 1 column 160 (char 159)']"
credentials.py,"['credentials.py', '{""type"": ""variable"", ""line"": 154, ""name"": ""qop"", ""value"": null, ""valueSrc"": ""self.fields.get"", ""isInput"": false, ""args"": [""qop"",   Expecting value: line 1 column 130 (char 129)']"
_digest.py,"['_digest.py', '{""type"": ""dict"", ""line"": 20, ""name"": ""algorithms"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 124 (char 123)']"
checkers.py,"['checkers.py', '{""type"": ""function_def"", ""line"": 124, ""name"": ""__init__"", ""args"": [""self"", ""filename"", ""delim"", ""usernameField"", ""passwordField"", ""caseSensitive"", ""hash"", ""cache""], ""defaults"": [  Expecting value: line 1 column 179 (char 178)']"
_json.py,"['_json.py', '{""type"": ""comparison"", ""line"": 306, ""pairs"": [[""first"",   Expecting value: line 1 column 57 (char 56)']"
protocols.py,"['protocols.py', '{""type"": ""function_def"", ""line"": 59, ""name"": ""receivedHeader"", ""args"": [""self"", ""helo"", ""origin"", ""recipients""], ""defaults"": [], ""return"":   Expecting value: line 1 column 140 (char 139)']"
pop3client.py,"['pop3client.py', '{""type"": ""variable"", ""line"": 28, ""name"": ""OK"", ""value"":   Expecting value: line 1 column 57 (char 56)']"
pop3.py,"['pop3.py', '{""type"": ""variable"", ""line"": 119, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
imap4.py,"['imap4.py', '{""type"": ""variable"", ""line"": 447, ""name"": ""passon"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
_cred.py,"['_cred.py', '{""type"": ""function_def"", ""line"": 26, ""name"": ""getName"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 101 (char 100)']"
smtp.py,"['smtp.py', '{""type"": ""variable"", ""line"": 192, ""name"": ""atom"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
_except.py,"['_except.py', '{""type"": ""function_call"", ""line"": 154, ""name"": ""res.append"", ""args"": [  Expecting value: line 1 column 71 (char 70)']"
procmon.py,"['procmon.py', '{""type"": ""variable"", ""line"": 74, ""name"": ""delimiter"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
compat.py,"['compat.py', '{""type"": ""function_def"", ""line"": 531, ""name"": ""intToBytes"", ""args"": [""i""], ""defaults"": [], ""return"":   Expecting value: line 1 column 102 (char 101)']"
filepath.py,"['filepath.py', '{""type"": ""function_def"", ""line"": 1492, ""name"": ""setContent"", ""args"": [""self"", ""content"", ""ext""], ""defaults"": [  Expecting value: line 1 column 111 (char 110)']"
_shellcomp.py,"['_shellcomp.py', '{""type"": ""function_call"", ""line"": 185, ""name"": ""self.file.write"", ""args"": [  Expecting value: line 1 column 76 (char 75)']"
htmlizer.py,"['htmlizer.py', '{""type"": ""function_call"", ""line"": 44, ""name"": ""self.writer"", ""args"": [  Expecting value: line 1 column 71 (char 70)']"
zipstream.py,"['zipstream.py', '{""type"": ""variable"", ""line"": 124, ""name"": ""line"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
reflect.py,"['reflect.py', '{""type"": ""variable"", ""line"": 342, ""name"": ""initPy"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
randbytes.py,"['randbytes.py', '{""type"": ""variable"", ""line"": 120, ""name"": ""_BYTES"", ""value"": null, ""valueSrc"": ""_maketrans"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 121 (char 120)']"
urlpath.py,"['urlpath.py', '{""type"": ""function_def"", ""line"": 59, ""name"": ""__init__"", ""args"": [""self"", ""scheme"", ""netloc"", ""path"", ""query"", ""fragment""], ""defaults"": [  Expecting value: line 1 column 138 (char 137)']"
avatar.py,"['avatar.py', '{""type"": ""variable"", ""line"": 41, ""name"": ""requestType"", ""value"": null, ""valueSrc"": ""nativeString"", ""isInput"": false, ""args"": [""requestType.replace"",   Expecting value: line 1 column 150 (char 149)']"
ls.py,"['ls.py', '{""type"": ""variable"", ""line"": 23, ""name"": ""perms"", ""value"": null, ""valueSrc"": ""array.array"", ""isInput"": false, ""args"": [""B"",   Expecting value: line 1 column 125 (char 124)']"
stdio.py,"['stdio.py', '{""type"": ""function_call"", ""line"": 103, ""name"": ""os.write"", ""args"": [""fd"",   Expecting value: line 1 column 75 (char 74)']"
endpoints.py,"['endpoints.py', '{""type"": ""variable"", ""line"": 121, ""name"": ""name"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
telnet.py,"['telnet.py', '{""type"": ""comparison"", ""line"": 564, ""pairs"": [[""b"",   Expecting value: line 1 column 53 (char 52)']"
manhole.py,"['manhole.py', '{""type"": ""variable"", ""line"": 162, ""name"": ""CTRL_C"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
recvline.py,"['recvline.py', '{""type"": ""variable"", ""line"": 73, ""name"": ""TAB"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
helper.py,"['helper.py', '{""type"": ""variable"", ""line"": 119, ""name"": ""TAB"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
window.py,"['window.py', '{""type"": ""comparison"", ""line"": 92, ""pairs"": [[""keyID"",   Expecting value: line 1 column 56 (char 55)']"
insults.py,"['insults.py', '{""type"": ""variable"", ""line"": 362, ""name"": ""CSI"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
options.py,"['options.py', '{""type"": ""variable"", ""line"": 78, ""name"": ""macs"", ""value"": null, ""valueSrc"": ""macs.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 118 (char 117)']"
knownhosts.py,"['knownhosts.py', '{""type"": ""variable"", ""line"": 65, ""name"": ""comment"", ""value"": null, ""valueSrc"": ""comment.rstrip"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 125 (char 124)']"
ckeygen.py,"['ckeygen.py', '{""type"": ""variable"", ""line"": 277, ""name"": ""options[pass]"", ""value"":   Expecting value: line 1 column 69 (char 68)']"
tkconch.py,"['tkconch.py', '{""type"": ""variable"", ""line"": 412, ""name"": ""encodedKey"", ""value"": null, ""valueSrc"": ""base64.encodestring.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 142 (char 141)']"
conch.py,"['conch.py', '{""type"": ""variable"", ""line"": 285, ""name"": ""d"", ""value"": null, ""valueSrc"": ""self.conn.sendGlobalRequest"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 133 (char 132)']"
cftp.py,"['cftp.py', '{""type"": ""variable"", ""line"": 134, ""name"": ""delimiter"", ""value"":   Expecting value: line 1 column 65 (char 64)']"
connection.py,"['connection.py', '{""type"": ""variable"", ""line"": 46, ""name"": ""name"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
keys.py,"['keys.py', '{""type"": ""dict"", ""line"": 51, ""name"": ""_curveTable"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 125 (char 124)']"
session.py,"['session.py', '{""type"": ""variable"", ""line"": 30, ""name"": ""name"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
factory.py,"['factory.py', '{""type"": ""dict"", ""line"": 29, ""name"": ""services"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 122 (char 121)']"
transport.py,"['transport.py', '{""type"": ""dict"", ""line"": 86, ""name"": ""cipherMap"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 123 (char 122)']"
filetransfer.py,"['filetransfer.py', '{""type"": ""variable"", ""line"": 30, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
userauth.py,"['userauth.py', '{""type"": ""variable"", ""line"": 70, ""name"": ""name"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
forwarding.py,"['forwarding.py', '{""type"": ""variable"", ""line"": 44, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
sexpy.py,"['sexpy.py', '{""type"": ""variable"", ""line"": 37, ""name"": ""s"", ""value"":   Expecting value: line 1 column 56 (char 55)']"
channel.py,"['channel.py', '{""type"": ""variable"", ""line"": 70, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
_kex.py,"['_kex.py', '{""type"": ""dict"", ""line"": 153, ""name"": ""_kexAlgorithms"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 129 (char 128)']"
agent.py,"['agent.py', '{""type"": ""variable"", ""line"": 32, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
postfix.py,"['postfix.py', '{""type"": ""variable"", ""line"": 63, ""name"": ""delimiter"", ""value"":   Expecting value: line 1 column 64 (char 63)']"
wire.py,"['wire.py', '{""type"": ""variable"", ""line"": 46, ""name"": ""noise"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
loopback.py,"['loopback.py', '{""type"": ""variable"", ""line"": 274, ""name"": ""buffer"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
dict.py,"['dict.py', '{""type"": ""comparison"", ""line"": 18, ""pairs"": [[""line"",   Expecting value: line 1 column 55 (char 54)']"
tls.py,"['tls.py', '{""type"": ""comparison"", ""line"": 584, ""pairs"": [[""protocolName"",   Expecting value: line 1 column 64 (char 63)']"
ftp.py,"['ftp.py', '{""type"": ""function_call"", ""line"": 427, ""name"": ""self.transport.write"", ""args"": [""line"",   Expecting value: line 1 column 89 (char 88)']"
memcache.py,"['memcache.py', '{""type"": ""variable"", ""line"": 265, ""name"": ""cas"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
finger.py,"['finger.py', '{""type"": ""list"", ""line"": 14, ""name"": ""parts"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 121 (char 120)']"
amp.py,"['amp.py', '{""type"": ""variable"", ""line"": 300, ""name"": ""ASK"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
socks.py,"['socks.py', '{""type"": ""variable"", ""line"": 90, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
basic.py,"['basic.py', '{""type"": ""function_def"", ""line"": 29, ""name"": ""_formatNetstring"", ""args"": [""data""], ""defaults"": [], ""return"": ""b\'\'.join"", ""returnArgs"": [""str.encode"", ""ascii"",   Expecting value: line 1 column 160 (char 159)']"
_v1parser.py,"['_v1parser.py', '{""type"": ""variable"", ""line"": 32, ""name"": ""PROXYSTR"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
_v2parser.py,"['_v2parser.py', '{""type"": ""variable"", ""line"": 59, ""name"": ""PREFIX"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
_twistd_unix.py,"['_twistd_unix.py', '{""type"": ""function_call"", ""line"": 266, ""name"": ""untilConcludes"", ""args"": [""os.write"", ""statusPipe"",   Expecting value: line 1 column 101 (char 100)']"
_responses.py,"['_responses.py', '{""type"": ""dict"", ""line"": 59, ""name"": ""RESPONSES"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [""_CONTINUE"", ""SWITCHING"", ""OK"", ""CREATED"", ""ACCEPTED"", ""NON_AUTHORITATIVE_INFORMATION"", ""NO_CONTENT"", ""RESET_CONTENT"", ""PARTIAL_CONTENT"", ""MULTI_STATUS"", ""MULTIPLE_CHOICE"", ""MOVED_PERMANENTLY"", ""FOUND"", ""SEE_OTHER"", ""NOT_MODIFIED"", ""USE_PROXY"", ""TEMPORARY_REDIRECT"", ""BAD_REQUEST"", ""UNAUTHORIZED"", ""PAYMENT_REQUIRED"", ""FORBIDDEN"", ""NOT_FOUND"", ""NOT_ALLOWED"", ""NOT_ACCEPTABLE"", ""PROXY_AUTH_REQUIRED"", ""REQUEST_TIMEOUT"", ""CONFLICT"", ""GONE"", ""LENGTH_REQUIRED"", ""PRECONDITION_FAILED"", ""REQUEST_ENTITY_TOO_LARGE"", ""REQUEST_URI_TOO_LONG"", ""UNSUPPORTED_MEDIA_TYPE"", ""REQUESTED_RANGE_NOT_SATISFIABLE"", ""EXPECTATION_FAILED"", ""INTERNAL_SERVER_ERROR"", ""NOT_IMPLEMENTED"", ""BAD_GATEWAY"", ""SERVICE_UNAVAILABLE"", ""GATEWAY_TIMEOUT"", ""HTTP_VERSION_NOT_SUPPORTED"", ""INSUFFICIENT_STORAGE_SPACE"", ""NOT_EXTENDED""], ""values"": [  Expecting value: line 1 column 928 (char 927)']"
proxy.py,"['proxy.py', '{""type"": ""comparison"", ""line"": 45, ""pairs"": [[""headers"",   Expecting value: line 1 column 58 (char 57)']"
_flatten.py,"['_flatten.py', '{""type"": ""variable"", ""line"": 49, ""name"": ""data"", ""value"": null, ""valueSrc"": ""data.replace.replace.replace"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 136 (char 135)']"
server.py,"['server.py', '{""type"": ""tuple"", ""line"": 79, ""name"": ""supportedMethods"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 133 (char 132)']"
resource.py,"['resource.py', '{""type"": ""function_call"", ""line"": 340, ""name"": ""request.setHeader"", ""args"": [  Expecting value: line 1 column 78 (char 77)']"
template.py,"['template.py', '{""type"": ""function_def"", ""line"": 527, ""name"": ""renderElement"", ""args"": [""request"", ""element"", ""doctype"", ""_failElement""], ""defaults"": [  Expecting value: line 1 column 136 (char 135)']"
demo.py,"['demo.py', '{""type"": ""function_call"", ""line"": 16, ""name"": ""static.Data.__init__"", ""args"": [""self"",   Expecting value: line 1 column 88 (char 87)']"
wsgi.py,"['wsgi.py', '{""type"": ""variable"", ""line"": 285, ""name"": ""scriptName"", ""value"":   Expecting value: line 1 column 66 (char 65)']"
http_headers.py,"['http_headers.py', '{""type"": ""dict"", ""line"": 66, ""name"": ""_caseMappings"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [  Expecting value: line 1 column 127 (char 126)']"
twcgi.py,"['twcgi.py', '{""type"": ""variable"", ""line"": 106, ""name"": ""qindex"", ""value"": null, ""valueSrc"": ""request.uri.index"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 128 (char 127)']"
_newclient.py,"['_newclient.py', '{""type"": ""variable"", ""line"": 243, ""name"": ""delimiter"", ""value"":   Expecting value: line 1 column 65 (char 64)']"
vhost.py,"['vhost.py', '{""type"": ""variable"", ""line"": 80, ""name"": ""hostHeader"", ""value"": null, ""valueSrc"": ""request.getHeader"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 131 (char 130)']"
client.py,"['client.py', '{""type"": ""variable"", ""line"": 84, ""name"": ""_specialHeaders"", ""value"": null, ""valueSrc"": ""set"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 122 (char 121)']"
util.py,"['util.py', '{""type"": ""function_call"", ""line"": 62, ""name"": ""request.setHeader"", ""args"": [  Expecting value: line 1 column 77 (char 76)']"
static.py,"['static.py', '{""type"": ""function_call"", ""line"": 68, ""name"": ""request.setHeader"", ""args"": [  Expecting value: line 1 column 77 (char 76)']"
http.py,"['http.py', '{""type"": ""tuple"", ""line"": 205, ""name"": null, ""value"": null, ""valueSrc"": ""item.split"", ""isInput"": false, ""names"": [""k"", ""v""], ""args"": [  Expecting value: line 1 column 135 (char 134)']"
script.py,"['script.py', '{""type"": ""function_call"", ""line"": 164, ""name"": ""request.setHeader"", ""args"": [  Expecting value: line 1 column 78 (char 77)']"
xmlrpc.py,"['xmlrpc.py', '{""type"": ""tuple"", ""line"": 128, ""name"": ""allowedMethods"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 132 (char 131)']"
error.py,"['error.py', '{""type"": ""function_def"", ""line"": 89, ""name"": ""__str__"", ""args"": [""self""], ""defaults"": [], ""return"": ""nativeString"", ""returnArgs"": [  Expecting value: line 1 column 132 (char 131)']"
_http2.py,"['_http2.py', '{""type"": ""function_call"", ""line"": 561, ""name"": ""headers.insert"", ""args"": [0,   Expecting value: line 1 column 78 (char 77)']"
digest.py,"['digest.py', '{""type"": ""variable"", ""line"": 24, ""name"": ""scheme"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
wrapper.py,"['wrapper.py', '{""type"": ""function_def"", ""line"": 41, ""name"": ""render"", ""args"": [""self"", ""request""], ""defaults"": [], ""return"":   Expecting value: line 1 column 111 (char 110)']"
basic.py,"['basic.py', '{""type"": ""variable"", ""line"": 33, ""name"": ""scheme"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
grid_file.py,"['grid_file.py', '{""type"": ""variable"", ""line"": 47, ""name"": ""EMPTY"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
keywrap.py,"['keywrap.py', '{""type"": ""assert"", ""line"": 31, ""left"": ""encryptor.finalize"", ""comparators"": [  Expecting value: line 1 column 78 (char 77)']"
padding.py,"['padding.py', '{""type"": ""variable"", ""line"": 112, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
x963kdf.py,"['x963kdf.py', '{""type"": ""list"", ""line"": 50, ""name"": ""output"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 122 (char 121)']"
hkdf.py,"['hkdf.py', '{""type"": ""variable"", ""line"": 78, ""name"": ""info"", ""value"":   Expecting value: line 1 column 59 (char 58)']"
kbkdf.py,"['kbkdf.py', '{""type"": ""variable"", ""line"": 71, ""name"": ""label"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
concatkdf.py,"['concatkdf.py', '{""type"": ""list"", ""line"": 36, ""name"": ""output"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 122 (char 121)']"
ec.py,"['ec.py', '{""type"": ""function_def"", ""line"": 361, ""name"": ""encode_point"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 107 (char 106)']"
ssh.py,"['ssh.py', '{""type"": ""variable"", ""line"": 18, ""name"": ""key_parts"", ""value"": null, ""valueSrc"": ""data.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 123 (char 122)']"
aead.py,"['aead.py', '{""type"": ""variable"", ""line"": 36, ""name"": ""associated_data"", ""value"":   Expecting value: line 1 column 70 (char 69)']"
ciphers.py,"['ciphers.py', '{""type"": ""function_call"", ""line"": 152, ""name"": ""self.update"", ""args"": [  Expecting value: line 1 column 72 (char 71)']"
backend.py,"['backend.py', '{""type"": ""function_obj"", ""line"": 181, ""objName"": ""res"", ""funcName"": ""self._lib.ENGINE_ctrl_cmd"", ""args"": [""e"",   Expecting value: line 1 column 112 (char 111)']"
message.py,"['message.py', '{""type"": ""variable"", ""line"": 64, ""name"": ""_EMPTY"", ""value"":   Expecting value: line 1 column 61 (char 60)']"
database.py,"['database.py', '{""type"": ""variable"", ""line"": 777, ""name"": ""dblen"", ""value"": null, ""valueSrc"": ""len"", ""isInput"": false, ""args"": [null,   Expecting value: line 1 column 119 (char 118)']"
auth.py,"['auth.py', '{""type"": ""variable"", ""line"": 193, ""name"": ""_u1"", ""value"": ""_mac.digest"", ""valueSrc"": ""_digest"", ""isInput"": false, ""args"": [""salt"",   Expecting value: line 1 column 132 (char 131)']"
network.py,"['network.py', '{""type"": ""comparison"", ""line"": 240, ""pairs"": [[""chunk"",   Expecting value: line 1 column 57 (char 56)']"
_url.py,"['_url.py', '{""type"": ""variable"", ""line"": 573, ""name"": ""bits"", ""value"": null, ""valueSrc"": ""quoted_bytes.split"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 127 (char 126)']"
selector.py,"['selector.py', '{""type"": ""variable"", ""line"": 41, ""name"": ""body"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""text.strip.replace.encode"",   Expecting value: line 1 column 153 (char 152)']"
fuzzer.py,"['fuzzer.py', '{""type"": ""variable"", ""line"": 78, ""name"": ""out"", ""value"":   Expecting value: line 1 column 58 (char 57)']"
from_binary.py,"['from_binary.py', '{""type"": ""variable"", ""line"": 42, ""name"": ""cursor"", ""value"": null, ""valueSrc"": ""binr.find"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 119 (char 118)']"
jar_extract.py,"['jar_extract.py', '{""type"": ""variable"", ""line"": 89, ""name"": ""SIG_NANO"", ""value"":   Expecting value: line 1 column 63 (char 62)']"
example_extra_headers.py,"['example_extra_headers.py', '{""type"": ""variable"", ""line"": 38, ""name"": ""headers"", ""value"":   Expecting value: line 1 column 62 (char 61)']"
example_basic_auth_deco.py,"['example_basic_auth_deco.py', '{""type"": ""variable"", ""line"": 18, ""name"": ""auth"", ""value"": null, ""valueSrc"": ""req.headers.get"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 123 (char 122)']"
example_header_modes.py,"['example_header_modes.py', '{""type"": ""comparison"", ""line"": 36, ""pairs"": [[""l"",   Expecting value: line 1 column 52 (char 51)']"
__init__.py,"['__init__.py', '{""type"": ""comparison"", ""line"": 106, ""pairs"": [[""l"",   Expecting value: line 1 column 53 (char 52)']"
app_helpers.py,"['app_helpers.py', '{""type"": ""comparison"", ""line"": 225, ""pairs"": [[""data"",   Expecting value: line 1 column 56 (char 55)']"
http_error.py,"['http_error.py', '{""type"": ""function_def"", ""line"": 177, ""name"": ""to_xml"", ""args"": [""self""], ""defaults"": [], ""return"":   Expecting value: line 1 column 101 (char 100)']"
multipart.py,"['multipart.py', '{""type"": ""comparison"", ""line"": 110, ""pairs"": [[""separator"",   Expecting value: line 1 column 61 (char 60)']"
app.py,"['app.py', '{""type"": ""variable"", ""line"": 402, ""name"": ""data"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
reader.py,"['reader.py', '{""type"": ""variable"", ""line"": 52, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
stream.py,"['stream.py', '{""type"": ""variable"", ""line"": 103, ""name"": null, ""value"":   Expecting value: line 1 column 58 (char 57)']"
multipart.py,"['multipart.py', '{""type"": ""variable"", ""line"": 33, ""name"": ""_ALLOWED_CONTENT_HEADERS"", ""value"": null, ""valueSrc"": ""frozenset"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 137 (char 136)']"
reader.py,"['reader.py', '{""type"": ""variable"", ""line"": 35, ""name"": null, ""value"":   Expecting value: line 1 column 57 (char 56)']"
uri.py,"['uri.py', '{""type"": ""function_call"", ""line"": 203, ""name"": ""decoded.append"", ""args"": [  Expecting value: line 1 column 75 (char 74)']"
itsdangerous.py,"['itsdangerous.py', '{""type"": ""function_def"", ""line"": 201, ""name"": ""base64_encode"", ""args"": [""string""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [  Expecting value: line 1 column 159 (char 158)']"
formparser.py,"['formparser.py', '{""type"": ""function_def"", ""line"": 317, ""name"": ""_find_terminator"", ""args"": [""self"", ""iterator""], ""defaults"": [], ""return"":   Expecting value: line 1 column 123 (char 122)']"
_internal.py,"['_internal.py', '{""type"": ""variable"", ""line"": 26, ""name"": ""_cookie_params"", ""value"": null, ""valueSrc"": ""set"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 121 (char 120)']"
urls.py,"['urls.py', '{""type"": ""variable"", ""line"": 33, ""name"": ""_always_safe"", ""value"":   Expecting value: line 1 column 67 (char 66)']"
serving.py,"['serving.py', '{""type"": ""function_call"", ""line"": 134, ""name"": ""self.wfile.write"", ""args"": [  Expecting value: line 1 column 77 (char 76)']"
http.py,"['http.py', '{""type"": ""comparison"", ""line"": 478, ""pairs"": [[""auth_type"",   Expecting value: line 1 column 61 (char 60)']"
tbtools.py,"['tbtools.py', '{""type"": ""variable"", ""line"": 28, ""name"": ""_coding_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [  Expecting value: line 1 column 124 (char 123)']"
securecookie.py,"['securecookie.py', '{""type"": ""function_call"", ""line"": 226, ""name"": ""hmac.update"", ""args"": [  Expecting value: line 1 column 72 (char 71)']"
cache.py,"['cache.py', '{""type"": ""function_def"", ""line"": 571, ""name"": ""dump_object"", ""args"": [""self"", ""value""], ""defaults"": [], ""return"":   Expecting value: line 1 column 115 (char 114)']"
utils.py,"['utils.py', '{""type"": ""variable"", ""line"": 298, ""name"": ""safe"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [  Expecting value: line 1 column 125 (char 124)']"
prestapyt.py,"['prestapyt.py', '{""type"": ""variable"", ""line"": 496, ""name"": ""CRLF"", ""value"":   Expecting value: line 1 column 60 (char 59)']"
writer.py,"['writer.py', '{""type"": ""comparison"", ""line"": 56, ""pairs"": [[""data"",   Expecting value: line 1 column 55 (char 54)']"
key.py,"['key.py', '{""type"": ""function_call"", ""line"": 856, ""name"": ""http_conn.send"", ""args"": [""chunk_len_bytes"",   Expecting value: line 1 column 94 (char 93)']"
