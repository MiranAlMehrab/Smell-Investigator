GifImagePlugin.py,"{""type"": ""comparison"", ""line"": 66, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
JpegImagePlugin.py,"{""type"": ""comparison"", ""line"": 108, ""pairs"": [[""s"",  - Expecting value: line 1 column 53 (char 52)"
GimpPaletteFile.py,"{""type"": ""comparison"", ""line"": 32, ""pairs"": [[""fp.readline"",  - Expecting value: line 1 column 62 (char 61)"
TiffImagePlugin.py,"{""type"": ""variable"", ""line"": 79, ""name"": ""II"", ""value"":  - Expecting value: line 1 column 57 (char 56)"
ImImagePlugin.py,"{""type"": ""variable"", ""line"": 97, ""name"": ""split"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 119 (char 118)"
BlpImagePlugin.py,"{""type"": ""comparison"", ""line"": 252, ""pairs"": [[""self.magic"",  - Expecting value: line 1 column 62 (char 61)"
GbrImagePlugin.py,"{""type"": ""comparison"", ""line"": 66, ""pairs"": [[""magic_number"",  - Expecting value: line 1 column 63 (char 62)"
XpmImagePlugin.py,"{""type"": ""variable"", ""line"": 27, ""name"": ""xpm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 122 (char 121)"
WebPImagePlugin.py,"{""type"": ""dict"", ""line"": 21, ""name"": ""_VP8_MODES_BY_IDENTIFIER"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [ - Expecting value: line 1 column 138 (char 137)"
Image.py,"{""type"": ""function_def"", ""line"": 769, ""name"": ""tobitmap"", ""args"": [""self"", ""name""], ""defaults"": [""image""], ""return"": ""None.join"", ""returnArgs"": [""None.encode"", ""None.encode"", ""None.encode"", ""data"",  - Expecting value: line 1 column 199 (char 198)"
MspImagePlugin.py,"{""type"": ""comparison"", ""line"": 57, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
BmpImagePlugin.py,"{""type"": ""comparison"", ""line"": 264, ""pairs"": [[""head_data"",  - Expecting value: line 1 column 61 (char 60)"
IcoImagePlugin.py,"{""type"": ""variable"", ""line"": 39, ""name"": ""_MAGIC"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
GimpGradientFile.py,"{""type"": ""comparison"", ""line"": 107, ""pairs"": [[""fp.readline"",  - Expecting value: line 1 column 63 (char 62)"
FontFile.py,"{""type"": ""function_call"", ""line"": 105, ""name"": ""fp.write"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
PpmImagePlugin.py,"{""type"": ""variable"", ""line"": 27, ""name"": ""b_whitespace"", ""value"":  - Expecting value: line 1 column 67 (char 66)"
ImtImagePlugin.py,"{""type"": ""variable"", ""line"": 30, ""name"": ""field"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 119 (char 118)"
PixarImagePlugin.py,"{""type"": ""comparison"", ""line"": 49, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
ImageFont.py,"{""type"": ""comparison"", ""line"": 90, ""pairs"": [[""file.readline"",  - Expecting value: line 1 column 64 (char 63)"
XbmImagePlugin.py,"{""type"": ""variable"", ""line"": 30, ""name"": ""xbm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 122 (char 121)"
WalImageFile.py,"{""type"": ""variable"", ""line"": 78, ""name"": ""quake2palette"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
WmfImagePlugin.py,"{""type"": ""comparison"", ""line"": 94, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
FtexImagePlugin.py,"{""type"": ""variable"", ""line"": 59, ""name"": ""MAGIC"", ""value"":  - Expecting value: line 1 column 60 (char 59)"
BdfFontFile.py,"{""type"": ""comparison"", ""line"": 51, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
DdsImagePlugin.py,"{""type"": ""comparison"", ""line"": 140, ""pairs"": [[""fourcc"",  - Expecting value: line 1 column 58 (char 57)"
XVThumbImagePlugin.py,"{""type"": ""variable"", ""line"": 27, ""name"": ""_MAGIC"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
IcnsImagePlugin.py,"{""type"": ""comparison"", ""line"": 43, ""pairs"": [[""sig"",  - Expecting value: line 1 column 54 (char 53)"
EpsImagePlugin.py,"{""type"": ""variable"", ""line"": 175, ""name"": ""s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""self.char"",  - Expecting value: line 1 column 135 (char 134)"
Jpeg2KImagePlugin.py,"{""type"": ""comparison"", ""line"": 78, ""pairs"": [[""tbox"",  - Expecting value: line 1 column 55 (char 54)"
PdfParser.py,"{""type"": ""function_call"", ""line"": 175, ""name"": ""f.write"", ""args"": [ - Expecting value: line 1 column 68 (char 67)"
ImageFile.py,"{""type"": ""variable"", ""line"": 209, ""name"": ""prefix"", ""value"":  - Expecting value: line 1 column 62 (char 61)"
CurImagePlugin.py,"{""type"": ""variable"", ""line"": 54, ""name"": ""m"", ""value"":  - Expecting value: line 1 column 56 (char 55)"
PcdImagePlugin.py,"{""type"": ""comparison"", ""line"": 42, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
PngImagePlugin.py,"{""type"": ""variable"", ""line"": 52, ""name"": ""_MAGIC"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
ImageDraw.py,"{""type"": ""variable"", ""line"": 253, ""name"": ""split_character"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""\n"",  - Expecting value: line 1 column 142 (char 141)"
PaletteFile.py,"{""type"": ""comparison"", ""line"": 36, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
wheel.py,"{""type"": ""function_call"", ""line"": 595, ""name"": ""installer_file.write"", ""args"": [ - Expecting value: line 1 column 81 (char 80)"
encoding.py,"{""type"": ""variable"", ""line"": 21, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 125 (char 124)"
_inputstream.py,"{""type"": ""function_def"", ""line"": 719, ""name"": ""handleComment"", ""args"": [""self""], ""defaults"": [], ""return"": ""self.data.jumpTo"", ""returnArgs"": [ - Expecting value: line 1 column 143 (char 142)"
core.py,"{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
__init__.py,"{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": null, ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 117 (char 116)"
tests.py,"{""type"": ""assert"", ""line"": 51, ""left"": ""encode"", ""comparators"": [ - Expecting value: line 1 column 66 (char 65)"
resources.py,"{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
scripts.py,"{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 127 (char 126)"
wheel.py,"{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
index.py,"{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
tarfile.py,"{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
utils.py,"{""type"": ""variable"", ""line"": 197, ""name"": ""splitstr"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
adapters.py,"{""type"": ""function_call"", ""line"": 471, ""name"": ""low_conn.send"", ""args"": [ - Expecting value: line 1 column 74 (char 73)"
models.py,"{""type"": ""variable"", ""line"": 828, ""name"": ""self._content"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""None.join"",  - Expecting value: line 1 column 147 (char 146)"
fallback.py,"{""type"": ""function_def"", ""line"": 32, ""name"": ""__init__"", ""args"": [""self"", ""s""], ""defaults"": [ - Expecting value: line 1 column 94 (char 93)"
connection.py,"{""type"": ""function_call"", ""line"": 215, ""name"": ""self.send"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
filepost.py,"{""type"": ""function_call"", ""line"": 92, ""name"": ""body.write"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
response.py,"{""type"": ""variable"", ""line"": 26, ""name"": ""self._data"", ""value"":  - Expecting value: line 1 column 65 (char 64)"
low_level.py,"{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [ - Expecting value: line 1 column 101 (char 100)"
universaldetector.py,"{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 132 (char 131)"
charsetprober.py,"{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 113 (char 112)"
filewrapper.py,"{""type"": ""comparison"", ""line"": 71, ""pairs"": [[""amt"", 2], [""data"",  - Expecting value: line 1 column 67 (char 66)"
serialize.py,"{""type"": ""function_def"", ""line"": 22, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""None.join"", ""returnArgs"": [ - Expecting value: line 1 column 162 (char 161)"
unicode_utils.py,"{""type"": ""variable"", ""line"": 48, ""name"": ""CODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 123 (char 122)"
glob.py,"{""type"": ""variable"", ""line"": 146, ""name"": ""magic_check_bytes"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 132 (char 131)"
build_py.py,"{""type"": ""comparison"", ""line"": 177, ""pairs"": [[ - Expecting value: line 1 column 48 (char 47)"
upload_docs.py,"{""type"": ""variable"", ""line"": 130, ""name"": ""boundary"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
upload.py,"{""type"": ""function_call"", ""line"": 136, ""name"": ""body.write"", ""args"": [ - Expecting value: line 1 column 71 (char 70)"
test_util.py,"{""type"": ""variable"", ""line"": 181, ""name"": ""data"", ""value"":  - Expecting value: line 1 column 60 (char 59)"
handlers.py,"{""type"": ""function_call"", ""line"": 257, ""name"": ""sha1.update"", ""args"": [ - Expecting value: line 1 column 72 (char 71)"
test_resmap.py,"{""type"": ""variable"", ""line"": 41, ""name"": ""output"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
application.py,"{""type"": ""variable"", ""line"": 103, ""name"": ""response.body"", ""value"":  - Expecting value: line 1 column 69 (char 68)"
status.py,"{""type"": ""variable"", ""line"": 58, ""name"": ""instance.response.body"", ""value"":  - Expecting value: line 1 column 77 (char 76)"
test_application.py,"{""type"": ""assert"", ""line"": 36, ""left"": ""res.body"", ""comparators"": [ - Expecting value: line 1 column 68 (char 67)"
test_admin.py,"{""type"": ""assert"", ""line"": 338, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_views.py,"{""type"": ""assert"", ""line"": 90, ""left"":  - Expecting value: line 1 column 40 (char 39)"
test_admin.py,"{""type"": ""assert"", ""line"": 80, ""left"":  - Expecting value: line 1 column 40 (char 39)"
test_admin.py,"{""type"": ""assert"", ""line"": 118, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_cron.py,"{""type"": ""function_call"", ""line"": 213, ""name"": ""fp.write"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
test_update.py,"{""type"": ""variable"", ""line"": 642, ""name"": ""expected_output"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
test_tasks.py,"{""type"": ""function_call"", ""line"": 24, ""name"": ""dst.write"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
test_models.py,"{""type"": ""function_call"", ""line"": 83, ""name"": ""fobj.write"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
test_admin.py,"{""type"": ""assert"", ""line"": 143, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_forms.py,"{""type"": ""assert"", ""line"": 55, ""left"":  - Expecting value: line 1 column 40 (char 39)"
test_views.py,"{""type"": ""assert"", ""line"": 474, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_feeds.py,"{""type"": ""assert"", ""line"": 187, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_views_submit.py,"{""type"": ""assert"", ""line"": 340, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_views_edit.py,"{""type"": ""assert"", ""line"": 393, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_views_validation.py,"{""type"": ""function_call"", ""line"": 126, ""name"": ""f.write"", ""args"": [ - Expecting value: line 1 column 68 (char 67)"
test_admin.py,"{""type"": ""assert"", ""line"": 144, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_views.py,"{""type"": ""variable"", ""line"": 65, ""name"": ""EMPTY_PNG"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
test_sql_model.py,"{""type"": ""assert"", ""line"": 269, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_views.py,"{""type"": ""variable"", ""line"": 96, ""name"": ""path"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
test_utils.py,"{""type"": ""variable"", ""line"": 74, ""name"": ""next_path"", ""value"": null, ""valueSrc"": ""urlsafe_b64encode.rstrip"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 137 (char 136)"
test_views.py,"{""type"": ""assert"", ""line"": 1192, ""left"":  - Expecting value: line 1 column 42 (char 41)"
test_permissions.py,"{""type"": ""assert"", ""line"": 57, ""left"": ""response.content"", ""comparators"": [ - Expecting value: line 1 column 76 (char 75)"
utils.py,"{""type"": ""variable"", ""line"": 696, ""name"": ""data"", ""value"":  - Expecting value: line 1 column 60 (char 59)"
test_storage_utils.py,"{""type"": ""assert"", ""line"": 107, ""left"": ""self.contents"", ""comparators"": [ - Expecting value: line 1 column 74 (char 73)"
test_middleware.py,"{""type"": ""assert"", ""line"": 111, ""left"":  - Expecting value: line 1 column 41 (char 40)"
test_views.py,"{""type"": ""assert"", ""line"": 81, ""left"":  - Expecting value: line 1 column 40 (char 39)"
test_models.py,"{""type"": ""function_call"", ""line"": 177, ""name"": ""fp.write"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
test_utils.py,"{""type"": ""variable"", ""line"": 439, ""name"": ""manifest"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
test_views.py,"{""type"": ""assert"", ""line"": 440, ""left"": ""res.content"", ""comparators"": [ - Expecting value: line 1 column 72 (char 71)"
wps.py,"{""type"": ""variable"", ""line"": 866, ""name"": ""content"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
test_wmts.py,"{""type"": ""function_call"", ""line"": 22, ""name"": ""bytearray"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
test_wps_describeprocess_language.py,"{""type"": ""function_def"", ""line"": 11, ""name"": ""read"", ""args"": [""self""], ""defaults"": [], ""return"":  - Expecting value: line 1 column 98 (char 97)"
test_wps_execute_language.py,"{""type"": ""assert"", ""line"": 17, ""left"":  - Expecting value: line 1 column 40 (char 39)"
test_wps_getcapabilities_language.py,"{""type"": ""function_def"", ""line"": 12, ""name"": ""read"", ""args"": [""self""], ""defaults"": [], ""return"":  - Expecting value: line 1 column 98 (char 97)"
crawler.py,"{""type"": ""variable"", ""line"": 46, ""name"": ""linkregex"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 123 (char 122)"
core.py,"{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
utils.py,"{""type"": ""variable"", ""line"": 189, ""name"": ""splitstr"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
adapters.py,"{""type"": ""function_call"", ""line"": 462, ""name"": ""low_conn.send"", ""args"": [ - Expecting value: line 1 column 74 (char 73)"
connection.py,"{""type"": ""function_call"", ""line"": 200, ""name"": ""self.send"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
filepost.py,"{""type"": ""function_call"", ""line"": 88, ""name"": ""body.write"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
response.py,"{""type"": ""function_def"", ""line"": 278, ""name"": ""_flush_decoder"", ""args"": [""self""], ""defaults"": [], ""return"":  - Expecting value: line 1 column 109 (char 108)"
securetransport.py,"{""type"": ""function_call"", ""line"": 55, ""name"": ""memoryview"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
low_level.py,"{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [ - Expecting value: line 1 column 101 (char 100)"
universaldetector.py,"{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 132 (char 131)"
charsetprober.py,"{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 113 (char 112)"
test_applications.py,"{""type"": ""assert"", ""line"": 53, ""left"": ""response"", ""comparators"": [ - Expecting value: line 1 column 68 (char 67)"
test_command_import_wordpress_translation.py,"{""type"": ""variable"", ""line"": 86, ""name"": ""content"", ""value"":  - Expecting value: line 1 column 62 (char 61)"
test_task_scale_images.py,"{""type"": ""variable"", ""line"": 15, ""name"": ""PROFILE"", ""value"":  - Expecting value: line 1 column 62 (char 61)"
test_command_import_wordpress.py,"{""type"": ""variable"", ""line"": 338, ""name"": ""content"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
import_wordpress.py,"{""type"": ""comparison"", ""line"": 436, ""pairs"": [[ - Expecting value: line 1 column 48 (char 47)"
bundles.py,"{""type"": ""function_call"", ""line"": 70, ""name"": ""out_fh.write"", ""args"": [ - Expecting value: line 1 column 72 (char 71)"
sitemap.py,"{""type"": ""comparison"", ""line"": 180, ""pairs"": [[ - Expecting value: line 1 column 48 (char 47)"
unix.py,"{""type"": ""comparison"", ""line"": 54, ""pairs"": [[""data"",  - Expecting value: line 1 column 55 (char 54)"
test_websocket.py,"{""type"": ""variable"", ""line"": 23, ""name"": ""self.data"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
test_basic.py,"{""type"": ""variable"", ""line"": 395, ""name"": ""self.data"", ""value"":  - Expecting value: line 1 column 65 (char 64)"
elements.py,"{""type"": ""comparison"", ""line"": 247, ""pairs"": [[""url"",  - Expecting value: line 1 column 55 (char 54)"
extras.py,"{""type"": ""variable"", ""line"": 822, ""name"": ""v"", ""value"":  - Expecting value: line 1 column 57 (char 56)"
extensions.py,"{""type"": ""function_def"", ""line"": 144, ""name"": ""getquoted"", ""args"": [""self"", ""_null""], ""defaults"": [ - Expecting value: line 1 column 100 (char 99)"
_range.py,"{""type"": ""variable"", ""line"": 260, ""name"": ""lower"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
test_types_basic.py,"{""type"": ""variable"", ""line"": 341, ""name"": ""o1"", ""value"": null, ""valueSrc"": ""psycopg2.Binary"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 122 (char 121)"
test_quote.py,"{""type"": ""variable"", ""line"": 77, ""name"": ""data"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
test_types_extras.py,"{""type"": ""function_call"", ""line"": 101, ""name"": ""self.assertQuotedEqual"", ""args"": [""a.getquoted"",  - Expecting value: line 1 column 98 (char 97)"
test_lobject.py,"{""type"": ""function_call"", ""line"": 102, ""name"": ""self.conn.lobject.write"", ""args"": [ - Expecting value: line 1 column 84 (char 83)"
test_cursor.py,"{""type"": ""function_call"", ""line"": 71, ""name"": ""self.assertEqual"", ""args"": [ - Expecting value: line 1 column 76 (char 75)"
unittest_utils.py,"{""type"": ""variable"", ""line"": 251, ""name"": ""binary_io"", ""value"": null, ""valueSrc"": ""io.BytesIO"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
test_functional.py,"{""type"": ""variable"", ""line"": 36, ""name"": ""delimiter"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
too_many_star_expressions.py,"{""type"": ""list"", ""line"": 6, ""name"": null, ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""names"": [""THIRD""], ""values"": [ - Expecting value: line 1 column 137 (char 136)"
implicit_str_concat_in_sequence.py,"{""type"": ""list"", ""line"": 26, ""name"": ""TEST_LIST7"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [ - Expecting value: line 1 column 126 (char 125)"
anomalous_unicode_escape_py3.py,"{""type"": ""variable"", ""line"": 5, ""name"": ""BAD_UNICODE"", ""value"":  - Expecting value: line 1 column 65 (char 64)"
using_constant_test.py,"{""type"": ""comparison"", ""line"": 46, ""pairs"": [], ""test"": [ - Expecting value: line 1 column 58 (char 57)"
future_unicode_literals.py,"{""type"": ""variable"", ""line"": 5, ""name"": ""BAD_STRING"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
member_checks.py,"{""type"": ""variable"", ""line"": 162, ""name"": ""something"", ""value"":  - Expecting value: line 1 column 65 (char 64)"
literal_comparison.py,"{""type"": ""comparison"", ""line"": 7, ""pairs"": [[""a"",  - Expecting value: line 1 column 51 (char 50)"
invalid_envvar_value.py,"{""type"": ""function_def"", ""line"": 14, ""name"": ""function_returning_bytes"", ""args"": [], ""defaults"": [], ""return"":  - Expecting value: line 1 column 112 (char 111)"
wheel.py,"{""type"": ""function_call"", ""line"": 482, ""name"": ""installer_file.write"", ""args"": [ - Expecting value: line 1 column 81 (char 80)"
encoding.py,"{""type"": ""variable"", ""line"": 16, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 125 (char 124)"
_inputstream.py,"{""type"": ""function_def"", ""line"": 719, ""name"": ""handleComment"", ""args"": [""self""], ""defaults"": [], ""return"": ""self.data.jumpTo"", ""returnArgs"": [ - Expecting value: line 1 column 143 (char 142)"
core.py,"{""type"": ""variable"", ""line"": 9, ""name"": ""_alabel_prefix"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
__init__.py,"{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": null, ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 117 (char 116)"
tests.py,"{""type"": ""assert"", ""line"": 51, ""left"": ""encode"", ""comparators"": [ - Expecting value: line 1 column 66 (char 65)"
resources.py,"{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
scripts.py,"{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 127 (char 126)"
wheel.py,"{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
index.py,"{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
tarfile.py,"{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
utils.py,"{""type"": ""variable"", ""line"": 189, ""name"": ""splitstr"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
adapters.py,"{""type"": ""function_call"", ""line"": 462, ""name"": ""low_conn.send"", ""args"": [ - Expecting value: line 1 column 74 (char 73)"
fallback.py,"{""type"": ""function_def"", ""line"": 32, ""name"": ""__init__"", ""args"": [""self"", ""s""], ""defaults"": [ - Expecting value: line 1 column 94 (char 93)"
connection.py,"{""type"": ""function_call"", ""line"": 200, ""name"": ""self.send"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
filepost.py,"{""type"": ""function_call"", ""line"": 88, ""name"": ""body.write"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
response.py,"{""type"": ""function_def"", ""line"": 278, ""name"": ""_flush_decoder"", ""args"": [""self""], ""defaults"": [], ""return"":  - Expecting value: line 1 column 109 (char 108)"
securetransport.py,"{""type"": ""function_call"", ""line"": 55, ""name"": ""memoryview"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
low_level.py,"{""type"": ""function_obj"", ""line"": 22, ""objName"": ""_PEM_CERTS_RE"", ""funcName"": ""re.compile"", ""args"": [ - Expecting value: line 1 column 101 (char 100)"
universaldetector.py,"{""type"": ""variable"", ""line"": 69, ""name"": ""HIGH_BYTE_DETECTOR"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 132 (char 131)"
charsetprober.py,"{""type"": ""variable"", ""line"": 63, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 113 (char 112)"
filewrapper.py,"{""type"": ""comparison"", ""line"": 69, ""pairs"": [[""amt"", 2], [""data"",  - Expecting value: line 1 column 67 (char 66)"
serialize.py,"{""type"": ""function_def"", ""line"": 22, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""None.join"", ""returnArgs"": [ - Expecting value: line 1 column 162 (char 161)"
main.py,"{""type"": ""variable"", ""line"": 61, ""name"": ""shebang_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
isort.py,"{""type"": ""variable"", ""line"": 1010, ""name"": ""pattern"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 123 (char 122)"
multipartparser.py,"{""type"": ""variable"", ""line"": 326, ""name"": ""self._leftover"", ""value"":  - Expecting value: line 1 column 70 (char 69)"
response.py,"{""type"": ""function_def"", ""line"": 288, ""name"": ""__init__"", ""args"": [""self"", ""content"", ""args""], ""defaults"": [ - Expecting value: line 1 column 109 (char 108)"
__init__.py,"{""type"": ""list"", ""line"": 2246, ""name"": ""empty_values"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [null,  - Expecting value: line 1 column 136 (char 135)"
debug.py,"{""type"": ""variable"", ""line"": 373, ""name"": ""match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 119 (char 118)"
encoding.py,"{""type"": ""variable"", ""line"": 189, ""name"": ""bits"", ""value"": null, ""valueSrc"": ""uri.split"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 118 (char 117)"
http.py,"{""type"": ""function_def"", ""line"": 221, ""name"": ""urlsafe_base64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.rstrip"", ""returnArgs"": [ - Expecting value: line 1 column 163 (char 162)"
client.py,"{""type"": ""variable"", ""line"": 104, ""name"": ""response.content"", ""value"":  - Expecting value: line 1 column 72 (char 71)"
signing.py,"{""type"": ""function_def"", ""line"": 62, ""name"": ""b64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [ - Expecting value: line 1 column 150 (char 149)"
wsgi.py,"{""type"": ""variable"", ""line"": 14, ""name"": ""_slashes_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 125 (char 124)"
filebased.py,"{""type"": ""function_call"", ""line"": 49, ""name"": ""self.stream.write"", ""args"": [ - Expecting value: line 1 column 77 (char 76)"
uploadedfile.py,"{""type"": ""variable"", ""line"": 104, ""name"": ""content"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""content"",  - Expecting value: line 1 column 139 (char 138)"
base.py,"{""type"": ""variable"", ""line"": 104, ""name"": ""hash"", ""value"": null, ""valueSrc"": ""encoded_data.split"", ""args"": [ - Expecting value: line 1 column 109 (char 108)"
geometry.py,"{""type"": ""variable"", ""line"": 113, ""name"": ""parts"", ""value"": null, ""valueSrc"": ""ewkt.split"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 120 (char 119)"
layer.py,"{""type"": ""variable"", ""line"": 37, ""name"": ""self._random_read"", ""value"": null, ""valueSrc"": ""self.test_capability"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 141 (char 140)"
libgdal.py,"{""type"": ""function_def"", ""line"": 77, ""name"": ""gdal_version"", ""args"": [], ""defaults"": [], ""return"": ""_version_info"", ""returnArgs"": [ - Expecting value: line 1 column 132 (char 131)"
srs.py,"{""type"": ""variable"", ""line"": 79, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""c_char_p"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 115 (char 114)"
glob.py,"{""type"": ""variable"", ""line"": 148, ""name"": ""magic_check_bytes"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 132 (char 131)"
build_py.py,"{""type"": ""comparison"", ""line"": 177, ""pairs"": [[ - Expecting value: line 1 column 48 (char 47)"
upload_docs.py,"{""type"": ""variable"", ""line"": 130, ""name"": ""boundary"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
GifImagePlugin.py,"{""type"": ""comparison"", ""line"": 64, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
JpegImagePlugin.py,"{""type"": ""variable"", ""line"": 350, ""name"": ""s"", ""value"":  - Expecting value: line 1 column 57 (char 56)"
GimpPaletteFile.py,"{""type"": ""comparison"", ""line"": 32, ""pairs"": [[""fp.readline"",  - Expecting value: line 1 column 62 (char 61)"
TiffImagePlugin.py,"{""type"": ""variable"", ""line"": 76, ""name"": ""II"", ""value"":  - Expecting value: line 1 column 57 (char 56)"
ImImagePlugin.py,"{""type"": ""variable"", ""line"": 95, ""name"": ""split"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 119 (char 118)"
BlpImagePlugin.py,"{""type"": ""comparison"", ""line"": 252, ""pairs"": [[""self.magic"",  - Expecting value: line 1 column 62 (char 61)"
GbrImagePlugin.py,"{""type"": ""comparison"", ""line"": 66, ""pairs"": [[""magic_number"",  - Expecting value: line 1 column 63 (char 62)"
XpmImagePlugin.py,"{""type"": ""variable"", ""line"": 25, ""name"": ""xpm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 122 (char 121)"
WebPImagePlugin.py,"{""type"": ""dict"", ""line"": 21, ""name"": ""_VP8_MODES_BY_IDENTIFIER"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [ - Expecting value: line 1 column 138 (char 137)"
Image.py,"{""type"": ""function_def"", ""line"": 758, ""name"": ""tobitmap"", ""args"": [""self"", ""name""], ""defaults"": [""image""], ""return"": ""None.join"", ""returnArgs"": [""None.encode"", ""None.encode"", ""None.encode"", ""data"",  - Expecting value: line 1 column 199 (char 198)"
MspImagePlugin.py,"{""type"": ""comparison"", ""line"": 55, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
IptcImagePlugin.py,"{""type"": ""comparison"", ""line"": 201, ""pairs"": [[""app"",  - Expecting value: line 1 column 55 (char 54)"
BmpImagePlugin.py,"{""type"": ""comparison"", ""line"": 238, ""pairs"": [[""head_data"",  - Expecting value: line 1 column 61 (char 60)"
IcoImagePlugin.py,"{""type"": ""variable"", ""line"": 37, ""name"": ""_MAGIC"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
GimpGradientFile.py,"{""type"": ""comparison"", ""line"": 107, ""pairs"": [[""fp.readline"",  - Expecting value: line 1 column 63 (char 62)"
FontFile.py,"{""type"": ""function_call"", ""line"": 105, ""name"": ""fp.write"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
PpmImagePlugin.py,"{""type"": ""variable"", ""line"": 25, ""name"": ""b_whitespace"", ""value"":  - Expecting value: line 1 column 67 (char 66)"
ImtImagePlugin.py,"{""type"": ""variable"", ""line"": 28, ""name"": ""field"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 119 (char 118)"
PixarImagePlugin.py,"{""type"": ""comparison"", ""line"": 47, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
ImageFont.py,"{""type"": ""comparison"", ""line"": 90, ""pairs"": [[""file.readline"",  - Expecting value: line 1 column 64 (char 63)"
XbmImagePlugin.py,"{""type"": ""variable"", ""line"": 28, ""name"": ""xbm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 122 (char 121)"
WalImageFile.py,"{""type"": ""variable"", ""line"": 78, ""name"": ""quake2palette"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
WmfImagePlugin.py,"{""type"": ""comparison"", ""line"": 92, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
FtexImagePlugin.py,"{""type"": ""variable"", ""line"": 52, ""name"": ""MAGIC"", ""value"":  - Expecting value: line 1 column 60 (char 59)"
BdfFontFile.py,"{""type"": ""comparison"", ""line"": 51, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
DdsImagePlugin.py,"{""type"": ""comparison"", ""line"": 131, ""pairs"": [[""fourcc"",  - Expecting value: line 1 column 58 (char 57)"
XVThumbImagePlugin.py,"{""type"": ""variable"", ""line"": 25, ""name"": ""_MAGIC"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
IcnsImagePlugin.py,"{""type"": ""comparison"", ""line"": 43, ""pairs"": [[""sig"",  - Expecting value: line 1 column 54 (char 53)"
EpsImagePlugin.py,"{""type"": ""variable"", ""line"": 174, ""name"": ""s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""self.char"",  - Expecting value: line 1 column 135 (char 134)"
Jpeg2KImagePlugin.py,"{""type"": ""comparison"", ""line"": 75, ""pairs"": [[""tbox"",  - Expecting value: line 1 column 55 (char 54)"
PdfParser.py,"{""type"": ""function_call"", ""line"": 175, ""name"": ""f.write"", ""args"": [ - Expecting value: line 1 column 68 (char 67)"
ImageFile.py,"{""type"": ""variable"", ""line"": 206, ""name"": ""prefix"", ""value"":  - Expecting value: line 1 column 62 (char 61)"
CurImagePlugin.py,"{""type"": ""variable"", ""line"": 52, ""name"": ""m"", ""value"":  - Expecting value: line 1 column 56 (char 55)"
PcdImagePlugin.py,"{""type"": ""comparison"", ""line"": 40, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
PngImagePlugin.py,"{""type"": ""variable"", ""line"": 50, ""name"": ""_MAGIC"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
ImageDraw.py,"{""type"": ""variable"", ""line"": 253, ""name"": ""split_character"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""\n"",  - Expecting value: line 1 column 142 (char 141)"
PaletteFile.py,"{""type"": ""comparison"", ""line"": 36, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
bip32.py,"{""type"": ""variable"", ""line"": 157, ""name"": ""hmac"", ""value"": null, ""valueSrc"": ""hmac_sha512"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 120 (char 119)"
header.py,"{""type"": ""variable"", ""line"": 35, ""name"": ""genesis_hash"", ""value"":  - Expecting value: line 1 column 67 (char 66)"
transaction.py,"{""type"": ""function_call"", ""line"": 711, ""name"": ""txin.serialize_to"", ""args"": [null,  - Expecting value: line 1 column 84 (char 83)"
claim_proofs.py,"{""type"": ""variable"", ""line"": 25, ""name"": ""to_hash"", ""value"":  - Expecting value: line 1 column 62 (char 61)"
script.py,"{""type"": ""variable"", ""line"": 172, ""name"": ""token"", ""value"": null, ""valueSrc"": ""DataToken"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 119 (char 118)"
mnemonic.py,"{""type"": ""variable"", ""line"": 19, ""name"": ""SEED_PREFIX"", ""value"":  - Expecting value: line 1 column 66 (char 65)"
jsonrpc.py,"{""type"": ""function_def"", ""line"": 323, ""name"": ""batch_message_from_parts"", ""args"": [""cls"", ""messages""], ""defaults"": [], ""return"": ""None.join"", ""returnArgs"": [ - Expecting value: line 1 column 158 (char 157)"
framing.py,"{""type"": ""variable"", ""line"": 73, ""name"": ""self.residual"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
socks.py,"{""type"": ""function_def"", ""line"": 114, ""name"": ""_start"", ""args"": [""self""], ""defaults"": [], ""return"": ""None.join"", ""returnArgs"": [ - Expecting value: line 1 column 129 (char 128)"
node.py,"{""type"": ""list"", ""line"": 210, ""name"": ""IGNORE_OUTPUT"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [ - Expecting value: line 1 column 130 (char 129)"
storage.py,"{""type"": ""function_def"", ""line"": 61, ""name"": ""iterator"", ""args"": [""self"", ""prefix"", ""reverse""], ""defaults"": [ - Expecting value: line 1 column 110 (char 109)"
leveldb.py,"{""type"": ""variable"", ""line"": 35, ""name"": ""HEADER_PREFIX"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
history.py,"{""type"": ""variable"", ""line"": 51, ""name"": ""state"", ""value"": null, ""valueSrc"": ""self.db.get"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 120 (char 119)"
server.py,"{""type"": ""variable"", ""line"": 25, ""name"": ""self.buf"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
client.py,"{""type"": ""variable"", ""line"": 24, ""name"": ""self.response_buff"", ""value"":  - Expecting value: line 1 column 73 (char 72)"
crypt.py,"{""type"": ""variable"", ""line"": 57, ""name"": ""_"", ""value"": null, ""valueSrc"": ""data.split"", ""args"": [ - Expecting value: line 1 column 97 (char 96)"
server.py,"{""type"": ""variable"", ""line"": 28, ""name"": ""self.buf"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
serialization.py,"{""type"": ""variable"", ""line"": 151, ""name"": ""next_close_paren"", ""value"": null, ""valueSrc"": ""response_msg.find"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 138 (char 137)"
client.py,"{""type"": ""variable"", ""line"": 32, ""name"": ""self.buf"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
bencoding.py,"{""type"": ""variable"", ""line"": 13, ""name"": ""encoded_list_items"", ""value"":  - Expecting value: line 1 column 73 (char 72)"
datagram.py,"{""type"": ""variable"", ""line"": 13, ""name"": ""PAGE_KEY"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
protocol.py,"{""type"": ""function_def"", ""line"": 48, ""name"": ""ping"", ""args"": [], ""defaults"": [], ""return"":  - Expecting value: line 1 column 92 (char 91)"
test_streaming.py,"{""type"": ""variable"", ""line"": 58, ""name"": ""self.data"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
test_file_commands.py,"{""type"": ""function_call"", ""line"": 201, ""name"": ""f.write"", ""args"": [ - Expecting value: line 1 column 68 (char 67)"
test_claim_commands.py,"{""type"": ""variable"", ""line"": 24, ""name"": ""image_data"", ""value"": null, ""valueSrc"": ""unhexlify"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 123 (char 122)"
test_account.py,"{""type"": ""function_call"", ""line"": 361, ""name"": ""self.assertEqual"", ""args"": [""hexlify"",  - Expecting value: line 1 column 88 (char 87)"
key_fixtures.py,"{""type"": ""list"", ""line"": 1, ""name"": ""expected_ids"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [ - Expecting value: line 1 column 127 (char 126)"
test_bip32.py,"{""type"": ""function_call"", ""line"": 16, ""name"": ""PubKey"", ""args"": [null, null,  - Expecting value: line 1 column 78 (char 77)"
test_wallet.py,"{""type"": ""function_call"", ""line"": 64, ""name"": ""self.assertEqual"", ""args"": [""hexlify"",  - Expecting value: line 1 column 87 (char 86)"
test_hash.py,"{""type"": ""function_call"", ""line"": 51, ""name"": ""self.assertEqual"", ""args"": [ - Expecting value: line 1 column 76 (char 75)"
test_script.py,"{""type"": ""function_call"", ""line"": 117, ""name"": ""self.assertEqual"", ""args"": [""self.redeem_pubkey_hash"",  - Expecting value: line 1 column 104 (char 103)"
test_ledger.py,"{""type"": ""dict"", ""line"": 66, ""name"": ""header"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [""bits"", ""block_height"", ""merkle_root"", ""nonce"", ""prev_block_hash"", ""timestamp"", ""claim_trie_root"", ""version""], ""values"": [486604799, 0,  - Expecting value: line 1 column 256 (char 255)"
test_schema_signing.py,"{""type"": ""variable"", ""line"": 25, ""name"": ""channel_txo"", ""value"": null, ""valueSrc"": ""Output.pay_claim_name_pubkey_hash"", ""isInput"": false, ""args"": [""CENT"", ""claim_name"", ""Claim"",  - Expecting value: line 1 column 179 (char 178)"
test_mnemonic.py,"{""type"": ""function_call"", ""line"": 11, ""name"": ""self.assertEqual"", ""args"": [""hexlify"",  - Expecting value: line 1 column 87 (char 86)"
test_headers.py,"{""type"": ""function_call"", ""line"": 106, ""name"": ""self.assertEqual"", ""args"": [""Headers.header_hash_to_pow_hash"",  - Expecting value: line 1 column 112 (char 111)"
test_transaction.py,"{""type"": ""function_def"", ""line"": 34, ""name"": ""get_claim_transaction"", ""args"": [""claim_name"", ""claim""], ""defaults"": [ - Expecting value: line 1 column 117 (char 116)"
test_sqldb.py,"{""type"": ""function_def"", ""line"": 78, ""name"": ""get_channel"", ""args"": [""self"", ""title"", ""amount"", ""name"", ""key""], ""defaults"": [""@foo"",  - Expecting value: line 1 column 134 (char 133)"
test_managed_stream.py,"{""type"": ""variable"", ""line"": 25, ""name"": ""self.stream_bytes"", ""value"":  - Expecting value: line 1 column 72 (char 71)"
test_stream_manager.py,"{""type"": ""function_def"", ""line"": 62, ""name"": ""get_claim_transaction"", ""args"": [""claim_name"", ""claim""], ""defaults"": [ - Expecting value: line 1 column 117 (char 116)"
test_stream_descriptor.py,"{""type"": ""variable"", ""line"": 101, ""name"": ""sd_bytes"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
test_transfer_blob.py,"{""type"": ""variable"", ""line"": 86, ""name"": ""mock_sd_blob_bytes"", ""value"":  - Expecting value: line 1 column 73 (char 72)"
test_blob_file.py,"{""type"": ""function_call"", ""line"": 72, ""name"": ""writer.write"", ""args"": [ - Expecting value: line 1 column 72 (char 71)"
test_claim_from_bytes.py,"{""type"": ""variable"", ""line"": 10, ""name"": ""claim"", ""value"": null, ""valueSrc"": ""Claim.from_bytes"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 125 (char 124)"
test_blob_announcer.py,"{""type"": ""function_call"", ""line"": 145, ""name"": ""self.assertEqual"", ""args"": [null,  - Expecting value: line 1 column 83 (char 82)"
test_peer.py,"{""type"": ""function_call"", ""line"": 33, ""name"": ""self.assertRaises"", ""args"": [""ValueError"", ""make_kademlia_peer"",  - Expecting value: line 1 column 113 (char 112)"
test_bencoding.py,"{""type"": ""function_call"", ""line"": 10, ""name"": ""bencode"", ""args"": [ - Expecting value: line 1 column 67 (char 66)"
test_datagram.py,"{""type"": ""function_call"", ""line"": 19, ""name"": ""self.assertEqual"", ""args"": [""decoded.method"",  - Expecting value: line 1 column 94 (char 93)"
test_distance.py,"{""type"": ""function_call"", ""line"": 9, ""name"": ""self.assertRaises"", ""args"": [""ValueError"", ""Distance"",  - Expecting value: line 1 column 102 (char 101)"
test_protocol.py,"{""type"": ""function_call"", ""line"": 27, ""name"": ""self.assertEqual"", ""args"": [null,  - Expecting value: line 1 column 82 (char 81)"
generate_json_api.py,"{""type"": ""function_call"", ""line"": 252, ""name"": ""file.write"", ""args"": [ - Expecting value: line 1 column 71 (char 70)"
util.py,"{""type"": ""variable"", ""line"": 242, ""name"": ""encoded_b64"", ""value"": null, ""valueSrc"": ""base64.urlsafe_b64encode.rstrip"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 147 (char 146)"
tarfile.py,"{""type"": ""variable"", ""line"": 71, ""name"": ""NUL"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
re.py,"{""type"": ""variable"", ""line"": 236, ""name"": ""_alphanum_bytes"", ""value"": null, ""valueSrc"": ""frozenset"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 129 (char 128)"
ntpath.py,"{""type"": ""variable"", ""line"": 323, ""name"": ""tilde"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
tokenize.py,"{""type"": ""function_obj"", ""line"": 36, ""objName"": ""blank_re"", ""funcName"": ""re.compile"", ""args"": [ - Expecting value: line 1 column 96 (char 95)"
posixpath.py,"{""type"": ""variable"", ""line"": 117, ""name"": ""sep"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
codecs.py,"{""type"": ""variable"", ""line"": 42, ""name"": ""BOM_UTF8"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
tempfile.py,"{""type"": ""function_call"", ""line"": 161, ""name"": ""fp.write"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
hashlib.py,"{""type"": ""function_def"", ""line"": 110, ""name"": ""__py_new"", ""args"": [""name"", ""data""], ""defaults"": [ - Expecting value: line 1 column 98 (char 97)"
base64.py,"{""type"": ""variable"", ""line"": 111, ""name"": ""_urlsafe_encode_translation"", ""value"": null, ""valueSrc"": ""bytes.maketrans"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 147 (char 146)"
wheel.py,"{""type"": ""function_call"", ""line"": 505, ""name"": ""installer_file.write"", ""args"": [ - Expecting value: line 1 column 81 (char 80)"
inputstream.py,"{""type"": ""function_def"", ""line"": 702, ""name"": ""handleComment"", ""args"": [""self""], ""defaults"": [], ""return"": ""self.data.jumpTo"", ""returnArgs"": [ - Expecting value: line 1 column 143 (char 142)"
resources.py,"{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
scripts.py,"{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 127 (char 126)"
wheel.py,"{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
index.py,"{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
tarfile.py,"{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
utils.py,"{""type"": ""variable"", ""line"": 120, ""name"": ""splitstr"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
adapters.py,"{""type"": ""function_call"", ""line"": 398, ""name"": ""low_conn.send"", ""args"": [ - Expecting value: line 1 column 74 (char 73)"
filepost.py,"{""type"": ""function_call"", ""line"": 88, ""name"": ""body.write"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
response.py,"{""type"": ""function_def"", ""line"": 204, ""name"": ""_flush_decoder"", ""args"": [""self""], ""defaults"": [], ""return"":  - Expecting value: line 1 column 109 (char 108)"
universaldetector.py,"{""type"": ""variable"", ""line"": 46, ""name"": ""self._highBitDetector"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 135 (char 134)"
charsetprober.py,"{""type"": ""variable"", ""line"": 53, ""name"": ""aBuf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 114 (char 113)"
serialize.py,"{""type"": ""function_def"", ""line"": 35, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""None.join"", ""returnArgs"": [ - Expecting value: line 1 column 162 (char 161)"
utils.py,"{""type"": ""variable"", ""line"": 21, ""name"": ""response.content"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
multipartparser.py,"{""type"": ""variable"", ""line"": 307, ""name"": ""self._leftover"", ""value"":  - Expecting value: line 1 column 70 (char 69)"
response.py,"{""type"": ""function_def"", ""line"": 282, ""name"": ""__init__"", ""args"": [""self"", ""content"", ""args""], ""defaults"": [ - Expecting value: line 1 column 109 (char 108)"
__init__.py,"{""type"": ""list"", ""line"": 2325, ""name"": ""empty_values"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [null,  - Expecting value: line 1 column 136 (char 135)"
operations.py,"{""type"": ""variable"", ""line"": 226, ""name"": ""value"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
debug.py,"{""type"": ""variable"", ""line"": 355, ""name"": ""match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 119 (char 118)"
http.py,"{""type"": ""function_def"", ""line"": 215, ""name"": ""urlsafe_base64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.rstrip"", ""returnArgs"": [ - Expecting value: line 1 column 163 (char 162)"
client.py,"{""type"": ""function_call"", ""line"": 191, ""name"": ""lines.extend"", ""args"": [null,  - Expecting value: line 1 column 79 (char 78)"
signing.py,"{""type"": ""function_def"", ""line"": 70, ""name"": ""b64_encode"", ""args"": [""s""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [ - Expecting value: line 1 column 150 (char 149)"
wsgi.py,"{""type"": ""variable"", ""line"": 33, ""name"": ""self.buffer"", ""value"":  - Expecting value: line 1 column 66 (char 65)"
filebased.py,"{""type"": ""function_call"", ""line"": 49, ""name"": ""self.stream.write"", ""args"": [ - Expecting value: line 1 column 77 (char 76)"
uploadedfile.py,"{""type"": ""variable"", ""line"": 113, ""name"": ""content"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""content"",  - Expecting value: line 1 column 139 (char 138)"
base.py,"{""type"": ""variable"", ""line"": 96, ""name"": ""hash"", ""value"": null, ""valueSrc"": ""encoded_data.split"", ""args"": [ - Expecting value: line 1 column 108 (char 107)"
io.py,"{""type"": ""variable"", ""line"": 236, ""name"": ""flag"", ""value"":  - Expecting value: line 1 column 60 (char 59)"
layer.py,"{""type"": ""variable"", ""line"": 41, ""name"": ""self._random_read"", ""value"": null, ""valueSrc"": ""self.test_capability"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 141 (char 140)"
libgdal.py,"{""type"": ""function_def"", ""line"": 77, ""name"": ""gdal_version"", ""args"": [], ""defaults"": [], ""return"": ""_version_info"", ""returnArgs"": [ - Expecting value: line 1 column 132 (char 131)"
srs.py,"{""type"": ""variable"", ""line"": 82, ""name"": ""buf"", ""value"": null, ""valueSrc"": ""c_char_p"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 115 (char 114)"
test_wheelfile.py,"{""type"": ""function_call"", ""line"": 53, ""name"": ""zf.writestr"", ""args"": [""one"",  - Expecting value: line 1 column 78 (char 77)"
sandbox.py,"{""type"": ""variable"", ""line"": 41, ""name"": ""script"", ""value"": null, ""valueSrc"": ""script.replace"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
build_py.py,"{""type"": ""comparison"", ""line"": 166, ""pairs"": [[ - Expecting value: line 1 column 48 (char 47)"
GifImagePlugin.py,"{""type"": ""comparison"", ""line"": 69, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
JpegImagePlugin.py,"{""type"": ""variable"", ""line"": 333, ""name"": ""s"", ""value"":  - Expecting value: line 1 column 57 (char 56)"
GimpPaletteFile.py,"{""type"": ""comparison"", ""line"": 32, ""pairs"": [[""fp.readline"",  - Expecting value: line 1 column 62 (char 61)"
TiffImagePlugin.py,"{""type"": ""variable"", ""line"": 71, ""name"": ""II"", ""value"":  - Expecting value: line 1 column 57 (char 56)"
OleFileIO.py,"{""type"": ""variable"", ""line"": 361, ""name"": ""MAGIC"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
ImImagePlugin.py,"{""type"": ""variable"", ""line"": 95, ""name"": ""split"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 119 (char 118)"
GbrImagePlugin.py,"{""type"": ""variable"", ""line"": 64, ""name"": ""self.data"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
XpmImagePlugin.py,"{""type"": ""variable"", ""line"": 25, ""name"": ""xpm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 122 (char 121)"
WebPImagePlugin.py,"{""type"": ""dict"", ""line"": 12, ""name"": ""_VP8_MODES_BY_IDENTIFIER"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [ - Expecting value: line 1 column 138 (char 137)"
Image.py,"{""type"": ""function_def"", ""line"": 697, ""name"": ""tobitmap"", ""args"": [""self"", ""name""], ""defaults"": [""image""], ""return"": ""None.join"", ""returnArgs"": [""None.encode"", ""None.encode"", ""None.encode"", ""data"",  - Expecting value: line 1 column 199 (char 198)"
MspImagePlugin.py,"{""type"": ""comparison"", ""line"": 48, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
IptcImagePlugin.py,"{""type"": ""comparison"", ""line"": 213, ""pairs"": [[""app"",  - Expecting value: line 1 column 55 (char 54)"
BmpImagePlugin.py,"{""type"": ""comparison"", ""line"": 194, ""pairs"": [[""head_data"",  - Expecting value: line 1 column 61 (char 60)"
IcoImagePlugin.py,"{""type"": ""variable"", ""line"": 40, ""name"": ""_MAGIC"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
GimpGradientFile.py,"{""type"": ""comparison"", ""line"": 106, ""pairs"": [[""fp.readline"",  - Expecting value: line 1 column 63 (char 62)"
FontFile.py,"{""type"": ""function_call"", ""line"": 104, ""name"": ""fp.write"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
PpmImagePlugin.py,"{""type"": ""dict"", ""line"": 38, ""name"": ""MODES"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [ - Expecting value: line 1 column 119 (char 118)"
ImtImagePlugin.py,"{""type"": ""variable"", ""line"": 28, ""name"": ""field"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 119 (char 118)"
PixarImagePlugin.py,"{""type"": ""comparison"", ""line"": 44, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
ImageFont.py,"{""type"": ""comparison"", ""line"": 86, ""pairs"": [[""file.readline"",  - Expecting value: line 1 column 64 (char 63)"
XbmImagePlugin.py,"{""type"": ""variable"", ""line"": 28, ""name"": ""xbm_head"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 122 (char 121)"
WalImageFile.py,"{""type"": ""variable"", ""line"": 78, ""name"": ""quake2palette"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
WmfImagePlugin.py,"{""type"": ""comparison"", ""line"": 94, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
BdfFontFile.py,"{""type"": ""comparison"", ""line"": 50, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
XVThumbImagePlugin.py,"{""type"": ""variable"", ""line"": 27, ""name"": ""PALETTE"", ""value"":  - Expecting value: line 1 column 62 (char 61)"
IcnsImagePlugin.py,"{""type"": ""comparison"", ""line"": 44, ""pairs"": [[""sig"",  - Expecting value: line 1 column 54 (char 53)"
EpsImagePlugin.py,"{""type"": ""variable"", ""line"": 173, ""name"": ""s"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""self.char"",  - Expecting value: line 1 column 135 (char 134)"
Jpeg2KImagePlugin.py,"{""type"": ""comparison"", ""line"": 75, ""pairs"": [[""tbox"",  - Expecting value: line 1 column 55 (char 54)"
ImageFile.py,"{""type"": ""variable"", ""line"": 187, ""name"": ""prefix"", ""value"":  - Expecting value: line 1 column 62 (char 61)"
CurImagePlugin.py,"{""type"": ""variable"", ""line"": 54, ""name"": ""m"", ""value"":  - Expecting value: line 1 column 56 (char 55)"
PcdImagePlugin.py,"{""type"": ""comparison"", ""line"": 41, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
PngImagePlugin.py,"{""type"": ""variable"", ""line"": 53, ""name"": ""_MAGIC"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
ImageDraw.py,"{""type"": ""variable"", ""line"": 235, ""name"": ""split_character"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""\n"",  - Expecting value: line 1 column 142 (char 141)"
PaletteFile.py,"{""type"": ""comparison"", ""line"": 36, ""pairs"": [[""s"",  - Expecting value: line 1 column 52 (char 51)"
idna.py,"{""type"": ""variable"", ""line"": 10, ""name"": ""ace_prefix"", ""value"":  - Expecting value: line 1 column 65 (char 64)"
uu_codec.py,"{""type"": ""function_call"", ""line"": 29, ""name"": ""write"", ""args"": [ - Expecting value: line 1 column 65 (char 64)"
punycode.py,"{""type"": ""variable"", ""line"": 77, ""name"": ""digits"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
gui-glut.py,"{""type"": ""function_call"", ""line"": 41, ""name"": ""glut.glutCreateWindow"", ""args"": [ - Expecting value: line 1 column 81 (char 80)"
gh_api.py,"{""type"": ""function_call"", ""line"": 256, ""name"": ""body.write"", ""args"": [ - Expecting value: line 1 column 71 (char 70)"
iptest.py,"{""type"": ""function_call"", ""line"": 323, ""name"": ""os.write"", ""args"": [""self.writefd"",  - Expecting value: line 1 column 85 (char 84)"
test_tools.py,"{""type"": ""function_call"", ""line"": 76, ""name"": ""print"", ""args"": [ - Expecting value: line 1 column 65 (char 64)"
clipboard.py,"{""type"": ""variable"", ""line"": 42, ""name"": ""bytes_"", ""value"": null, ""valueSrc"": ""bytes_.replace"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
test_embed.py,"{""type"": ""variable"", ""line"": 27, ""name"": ""_sample_embed"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
test_debug_magic.py,"{""type"": ""variable"", ""line"": 30, ""name"": ""in_prompt"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 123 (char 122)"
glut.py,"{""type"": ""function_call"", ""line"": 86, ""name"": ""glut.glutCreateWindow"", ""args"": [ - Expecting value: line 1 column 81 (char 80)"
_process_win32.py,"{""type"": ""variable"", ""line"": 168, ""name"": ""out"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
test_capture.py,"{""type"": ""dict"", ""line"": 35, ""name"": ""basic_data"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [""image/png"", ""text/html""], ""values"": [ - Expecting value: line 1 column 162 (char 161)"
test_tempdir.py,"{""type"": ""function_call"", ""line"": 19, ""name"": ""file.write"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
display.py,"{""type"": ""variable"", ""line"": 758, ""name"": ""_PNG"", ""value"":  - Expecting value: line 1 column 60 (char 59)"
test_magic.py,"{""type"": ""function_call"", ""line"": 960, ""name"": ""nt.assert_equal"", ""args"": [""ip.user_ns.read"",  - Expecting value: line 1 column 95 (char 94)"
test_interactiveshell.py,"{""type"": ""variable"", ""line"": 216, ""name"": ""ip.user_ns[f]"", ""value"":  - Expecting value: line 1 column 69 (char 68)"
test_completer.py,"{""type"": ""list"", ""line"": 836, ""name"": ""keys"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [""foo"",  - Expecting value: line 1 column 128 (char 127)"
test_display.py,"{""type"": ""variable"", ""line"": 40, ""name"": ""img"", ""value"": null, ""valueSrc"": ""display.Image"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 120 (char 119)"
test_inputsplitter.py,"{""type"": ""function_call"", ""line"": 104, ""name"": ""nt.assert_equal"", ""args"": [""None.encode"",  - Expecting value: line 1 column 91 (char 90)"
core.py,"{""type"": ""function_call"", ""line"": 212, ""name"": ""low_conn.send"", ""args"": [ - Expecting value: line 1 column 74 (char 73)"
test_certsrv.py,"{""type"": ""variable"", ""line"": 15, ""name"": ""san"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
auth.py,"{""type"": ""tuple"", ""line"": 52, ""name"": null, ""value"": null, ""valueSrc"": ""signing_input.split"", ""isInput"": false, ""names"": [""_"", ""payload_segment""], ""args"": [ - Expecting value: line 1 column 157 (char 156)"
state.py,"{""type"": ""comparison"", ""line"": 325, ""pairs"": [[ - Expecting value: line 1 column 48 (char 47)"
test_image.py,"{""type"": ""assert"", ""line"": 76, ""left"":  - Expecting value: line 1 column 40 (char 39)"
test_input.py,"{""type"": ""assert"", ""line"": 63, ""left"": ""file_input.value"", ""comparators"": [ - Expecting value: line 1 column 76 (char 75)"
media.py,"{""type"": ""variable"", ""line"": 98, ""name"": ""data"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
misc.py,"{""type"": ""variable"", ""line"": 80, ""name"": ""data"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
sphinx.py,"{""type"": ""comparison"", ""line"": 268, ""pairs"": [[""inventory_version"",  - Expecting value: line 1 column 69 (char 68)"
_search.py,"{""type"": ""variable"", ""line"": 389, ""name"": ""output"", ""value"": null, ""valueSrc"": ""bytearray"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 120 (char 119)"
python.py,"{""type"": ""comparison"", ""line"": 1139, ""pairs"": [[""annotation"",  - Expecting value: line 1 column 63 (char 62)"
doxygen.py,"{""type"": ""function_call"", ""line"": 3710, ""name"": ""f.write"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
populate-js-test-data.py,"{""type"": ""function_call"", ""line"": 44, ""name"": ""f.write"", ""args"": [ - Expecting value: line 1 column 67 (char 66)"
test_session.py,"{""type"": ""variable"", ""line"": 247, ""name"": ""json_content"", ""value"":  - Expecting value: line 1 column 68 (char 67)"
test_partition.py,"{""type"": ""variable"", ""line"": 850, ""name"": ""image"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
models.py,"{""type"": ""dict"", ""line"": 592, ""name"": ""LOOP2_RECORD_VERIFICATION_MAP_WLK"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [0, 2, 3, 9, 15, 16, 18, 20, 33, 35, 36, 37, 38, 39, 40, 41, 42], ""values"": [ - Expecting value: line 1 column 224 (char 223)"
test_models.py,"{""type"": ""function_call"", ""line"": 358, ""name"": ""self.assertEqual"", ""args"": [ - Expecting value: line 1 column 77 (char 76)"
test_serial.py,"{""type"": ""variable"", ""line"": 106, ""name"": ""mock_read_data.return_value"", ""value"":  - Expecting value: line 1 column 83 (char 82)"
tests.py,"{""type"": ""assert"", ""line"": 64, ""left"":  - Expecting value: line 1 column 40 (char 39)"
test_items.py,"{""type"": ""function_call"", ""line"": 85, ""name"": ""self.assertIn"", ""args"": [ - Expecting value: line 1 column 73 (char 72)"
test_basic.py,"{""type"": ""function_call"", ""line"": 55, ""name"": ""self.assertIn"", ""args"": [ - Expecting value: line 1 column 73 (char 72)"
test_users.py,"{""type"": ""function_call"", ""line"": 56, ""name"": ""self.assertIn"", ""args"": [ - Expecting value: line 1 column 73 (char 72)"
itsdangerous.py,"{""type"": ""function_def"", ""line"": 201, ""name"": ""base64_encode"", ""args"": [""string""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.strip"", ""returnArgs"": [ - Expecting value: line 1 column 159 (char 158)"
extras.py,"{""type"": ""variable"", ""line"": 809, ""name"": ""v"", ""value"":  - Expecting value: line 1 column 57 (char 56)"
extensions.py,"{""type"": ""function_def"", ""line"": 144, ""name"": ""getquoted"", ""args"": [""self"", ""_null""], ""defaults"": [ - Expecting value: line 1 column 100 (char 99)"
_range.py,"{""type"": ""variable"", ""line"": 260, ""name"": ""lower"", ""value"":  - Expecting value: line 1 column 61 (char 60)"
test_types_basic.py,"{""type"": ""variable"", ""line"": 319, ""name"": ""o1"", ""value"": null, ""valueSrc"": ""psycopg2.Binary"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 122 (char 121)"
test_quote.py,"{""type"": ""variable"", ""line"": 77, ""name"": ""data"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
test_types_extras.py,"{""type"": ""function_call"", ""line"": 101, ""name"": ""self.assertQuotedEqual"", ""args"": [""a.getquoted"",  - Expecting value: line 1 column 98 (char 97)"
test_lobject.py,"{""type"": ""function_call"", ""line"": 102, ""name"": ""self.conn.lobject.write"", ""args"": [ - Expecting value: line 1 column 84 (char 83)"
crypto.py,"{""type"": ""variable"", ""line"": 9, ""name"": ""INTERRUPT"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
wheel.py,"{""type"": ""function_call"", ""line"": 506, ""name"": ""installer_file.write"", ""args"": [ - Expecting value: line 1 column 81 (char 80)"
encoding.py,"{""type"": ""variable"", ""line"": 16, ""name"": ""ENCODING_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 125 (char 124)"
_inputstream.py,"{""type"": ""function_def"", ""line"": 719, ""name"": ""handleComment"", ""args"": [""self""], ""defaults"": [], ""return"": ""self.data.jumpTo"", ""returnArgs"": [ - Expecting value: line 1 column 143 (char 142)"
__init__.py,"{""type"": ""variable"", ""line"": 230, ""name"": ""output"", ""value"": null, ""valueSrc"": ""decode"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 117 (char 116)"
tests.py,"{""type"": ""assert"", ""line"": 51, ""left"": ""encode"", ""comparators"": [ - Expecting value: line 1 column 66 (char 65)"
resources.py,"{""type"": ""variable"", ""line"": 141, ""name"": ""sep"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
scripts.py,"{""type"": ""variable"", ""line"": 40, ""name"": ""FIRST_LINE_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 127 (char 126)"
wheel.py,"{""type"": ""variable"", ""line"": 87, ""name"": ""SHEBANG_RE"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
index.py,"{""type"": ""variable"", ""line"": 34, ""name"": ""boundary"", ""value"":  - Expecting value: line 1 column 63 (char 62)"
tarfile.py,"{""type"": ""variable"", ""line"": 80, ""name"": ""NUL"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
utils.py,"{""type"": ""variable"", ""line"": 124, ""name"": ""splitstr"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
adapters.py,"{""type"": ""function_call"", ""line"": 445, ""name"": ""low_conn.send"", ""args"": [ - Expecting value: line 1 column 74 (char 73)"
connection.py,"{""type"": ""function_call"", ""line"": 195, ""name"": ""self.send"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
filepost.py,"{""type"": ""function_call"", ""line"": 88, ""name"": ""body.write"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
response.py,"{""type"": ""function_def"", ""line"": 208, ""name"": ""_flush_decoder"", ""args"": [""self""], ""defaults"": [], ""return"":  - Expecting value: line 1 column 109 (char 108)"
pyopenssl.py,"{""type"": ""comparison"", ""line"": 148, ""pairs"": [[""ext_name"",  - Expecting value: line 1 column 60 (char 59)"
universaldetector.py,"{""type"": ""variable"", ""line"": 46, ""name"": ""self._highBitDetector"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 135 (char 134)"
charsetprober.py,"{""type"": ""variable"", ""line"": 53, ""name"": ""aBuf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 114 (char 113)"
filewrapper.py,"{""type"": ""comparison"", ""line"": 69, ""pairs"": [[""amt"", 2], [""data"",  - Expecting value: line 1 column 67 (char 66)"
serialize.py,"{""type"": ""function_def"", ""line"": 35, ""name"": ""dumps"", ""args"": [""self"", ""request"", ""response"", ""body""], ""defaults"": [null], ""return"": ""None.join"", ""returnArgs"": [ - Expecting value: line 1 column 162 (char 161)"
__init__.py,"{""type"": ""variable"", ""line"": 40, ""name"": ""_normalize_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 127 (char 126)"
glob.py,"{""type"": ""variable"", ""line"": 148, ""name"": ""magic_check_bytes"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 132 (char 131)"
build_py.py,"{""type"": ""comparison"", ""line"": 177, ""pairs"": [[ - Expecting value: line 1 column 48 (char 47)"
upload_docs.py,"{""type"": ""variable"", ""line"": 130, ""name"": ""boundary"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
utils.py,"{""type"": ""function_def"", ""line"": 21, ""name"": ""base64url_encode"", ""args"": [""input""], ""defaults"": [], ""return"": ""base64.urlsafe_b64encode.replace"", ""returnArgs"": [ - Expecting value: line 1 column 162 (char 161)"
api_jws.py,"{""type"": ""tuple"", ""line"": 144, ""name"": null, ""value"": null, ""valueSrc"": ""signing_input.split"", ""isInput"": false, ""names"": [""header_segment"", ""payload_segment""], ""args"": [ - Expecting value: line 1 column 171 (char 170)"
algorithms.py,"{""type"": ""function_def"", ""line"": 95, ""name"": ""sign"", ""args"": [""self"", ""msg"", ""key""], ""defaults"": [], ""return"":  - Expecting value: line 1 column 112 (char 111)"
_winconsole.py,"{""type"": ""variable"", ""line"": 60, ""name"": ""EOF"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
_compat.py,"{""type"": ""function_call"", ""line"": 121, ""name"": ""self._stream.write"", ""args"": [ - Expecting value: line 1 column 79 (char 78)"
testing.py,"{""type"": ""variable"", ""line"": 64, ""name"": ""input"", ""value"":  - Expecting value: line 1 column 60 (char 59)"
formparser.py,"{""type"": ""function_def"", ""line"": 310, ""name"": ""_find_terminator"", ""args"": [""self"", ""iterator""], ""defaults"": [], ""return"":  - Expecting value: line 1 column 123 (char 122)"
_internal.py,"{""type"": ""dict"", ""line"": 33, ""name"": ""_cookie_quoting_map"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [ - Expecting value: line 1 column 133 (char 132)"
urls.py,"{""type"": ""variable"", ""line"": 33, ""name"": ""_always_safe"", ""value"":  - Expecting value: line 1 column 67 (char 66)"
serving.py,"{""type"": ""function_call"", ""line"": 209, ""name"": ""self.wfile.write"", ""args"": [ - Expecting value: line 1 column 77 (char 76)"
http.py,"{""type"": ""comparison"", ""line"": 502, ""pairs"": [[""auth_type"",  - Expecting value: line 1 column 61 (char 60)"
__init__.py,"{""type"": ""variable"", ""line"": 75, ""name"": ""match"", ""value"": null, ""valueSrc"": ""re.search"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 118 (char 117)"
tbtools.py,"{""type"": ""variable"", ""line"": 28, ""name"": ""_coding_re"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
securecookie.py,"{""type"": ""comparison"", ""line"": 253, ""pairs"": [[ - Expecting value: line 1 column 48 (char 47)"
utils.py,"{""type"": ""variable"", ""line"": 299, ""name"": ""safe"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""values"": [ - Expecting value: line 1 column 125 (char 124)"
acoustid.py,"{""type"": ""variable"", ""line"": 309, ""name"": ""parts"", ""value"": null, ""valueSrc"": ""line.split"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 120 (char 119)"
views.py,"{""type"": ""variable"", ""line"": 44, ""name"": ""post_data"", ""value"":  - Expecting value: line 1 column 64 (char 63)"
serializers.py,"{""type"": ""variable"", ""line"": 167, ""name"": ""val"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
dammit.py,"{""type"": ""variable"", ""line"": 281, ""name"": ""smart_quotes_re"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
testing.py,"{""type"": ""variable"", ""line"": 101, ""name"": ""markup"", ""value"":  - Expecting value: line 1 column 62 (char 61)"
test_soup.py,"{""type"": ""variable"", ""line"": 101, ""name"": ""markup"", ""value"":  - Expecting value: line 1 column 62 (char 61)"
test_tree.py,"{""type"": ""function_call"", ""line"": 672, ""name"": ""self.assertEqual"", ""args"": [ - Expecting value: line 1 column 77 (char 76)"
moveblocks.py,"{""type"": ""variable"", ""line"": 188, ""name"": ""anim"", ""value"": null, ""valueSrc"": ""QPropertyAnimation"", ""isInput"": false, ""args"": [""button4"",  - Expecting value: line 1 column 138 (char 137)"
states_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
appchooser_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
appchooser.py,"{""type"": ""variable"", ""line"": 87, ""name"": ""animation"", ""value"": null, ""valueSrc"": ""QPropertyAnimation"", ""isInput"": false, ""args"": [""obj"",  - Expecting value: line 1 column 138 (char 137)"
animatedtiles_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
animatedtiles.py,"{""type"": ""variable"", ""line"": 235, ""name"": ""anim"", ""value"": null, ""valueSrc"": ""QPropertyAnimation"", ""isInput"": false, ""args"": [""item"",  - Expecting value: line 1 column 135 (char 134)"
stickman.py,"{""type"": ""variable"", ""line"": 514, ""name"": ""pa"", ""value"": null, ""valueSrc"": ""QPropertyAnimation"", ""isInput"": false, ""args"": [""self.m_stickMan.node"",  - Expecting value: line 1 column 149 (char 148)"
stickman_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
easing_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
easing.py,"{""type"": ""function_obj"", ""line"": 140, ""objName"": ""self.m_anim"", ""funcName"": ""Animation"", ""args"": [""self.m_item"",  - Expecting value: line 1 column 114 (char 113)"
lightmaps.py,"{""type"": ""function_call"", ""line"": 222, ""name"": ""request.setRawHeader"", ""args"": [ - Expecting value: line 1 column 81 (char 80)"
animation_rc.py,"{""type"": ""variable"", ""line"": 11, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
customgeometry_rc.py,"{""type"": ""variable"", ""line"": 11, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
stringlistmodel_rc.py,"{""type"": ""variable"", ""line"": 11, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
abstractitemmodel.py,"{""type"": ""dict"", ""line"": 69, ""name"": ""_roles"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [""TypeRole"", ""SizeRole""], ""values"": [ - Expecting value: line 1 column 156 (char 155)"
abstractitemmodel_rc.py,"{""type"": ""variable"", ""line"": 11, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
objectlistmodel_rc.py,"{""type"": ""variable"", ""line"": 11, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
shared_rc.py,"{""type"": ""variable"", ""line"": 11, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
canvas_rc.py,"{""type"": ""variable"", ""line"": 11, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
padnavigator.py,"{""type"": ""variable"", ""line"": 95, ""name"": ""smoothSplashMove"", ""value"": null, ""valueSrc"": ""QPropertyAnimation"", ""isInput"": false, ""args"": [""splash"",  - Expecting value: line 1 column 148 (char 147)"
padnavigator_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
embeddeddialogs_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
diagramscene_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
mice_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
dragdroprobot.py,"{""type"": ""variable"", ""line"": 255, ""name"": ""rot_animation"", ""value"": null, ""valueSrc"": ""QPropertyAnimation"", ""isInput"": false, ""args"": [""item"",  - Expecting value: line 1 column 144 (char 143)"
systray_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
puzzle_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
draggabletext_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
draggableicons_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
fridgemagnets_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
delayedencoding_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
customcompleter_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
i18n_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
formextractor_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
jquery_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
modelviewserver.py,"{""type"": ""dict"", ""line"": 144, ""name"": ""roleNames"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [""Qt.DisplayRole"", ""Qt.BackgroundRole""], ""values"": [ - Expecting value: line 1 column 175 (char 174)"
basicdrawing_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
svgviewer_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
mdi_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
sdi_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
dockwidgets_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
mainwindow_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
stylesheet_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
tooltips_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
combowidgetmapper.py,"{""type"": ""function_call"", ""line"": 80, ""name"": ""self.mapper.addMapping"", ""args"": [null, 2,  - Expecting value: line 1 column 91 (char 90)"
puzzle_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
editabletreemodel_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
pixelator_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
chart.py,"{""type"": ""function_call"", ""line"": 576, ""name"": ""f.write"", ""args"": [ - Expecting value: line 1 column 68 (char 67)"
chart_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
spreadsheet_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
simpletreemodel_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
schema_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
classwizard_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
configdialog_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
demoitemanimation.py,"{""type"": ""function_call"", ""line"": 52, ""name"": ""super.__init__"", ""args"": [""item"",  - Expecting value: line 1 column 82 (char 81)"
textedit_rc.py,"{""type"": ""variable"", ""line"": 12, ""name"": ""qt_resource_data"", ""value"":  - Expecting value: line 1 column 71 (char 70)"
methods.py,"{""type"": ""variable"", ""line"": 53, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
default.py,"{""type"": ""variable"", ""line"": 53, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
grouped.py,"{""type"": ""variable"", ""line"": 54, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
binding.py,"{""type"": ""variable"", ""line"": 55, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
properties.py,"{""type"": ""variable"", ""line"": 52, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
valuesource.py,"{""type"": ""variable"", ""line"": 55, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
signal.py,"{""type"": ""variable"", ""line"": 54, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
coercion.py,"{""type"": ""variable"", ""line"": 52, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
attached.py,"{""type"": ""variable"", ""line"": 54, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
adding.py,"{""type"": ""variable"", ""line"": 51, ""name"": ""QML"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
utils.py,"{""type"": ""variable"", ""line"": 310, ""name"": ""rv"", ""value"": null, ""valueSrc"": ""decoder.decode"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 121 (char 120)"
adapters.py,"{""type"": ""function_call"", ""line"": 337, ""name"": ""low_conn.send"", ""args"": [ - Expecting value: line 1 column 74 (char 73)"
filepost.py,"{""type"": ""function_call"", ""line"": 95, ""name"": ""body.write"", ""args"": [ - Expecting value: line 1 column 70 (char 69)"
universaldetector.py,"{""type"": ""variable"", ""line"": 46, ""name"": ""self._highBitDetector"", ""value"": null, ""valueSrc"": ""re.compile"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 135 (char 134)"
charsetprober.py,"{""type"": ""variable"", ""line"": 53, ""name"": ""aBuf"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 114 (char 113)"
utils.py,"{""type"": ""variable"", ""line"": 17, ""name"": ""v"", ""value"": null, ""valueSrc"": ""re.sub"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 111 (char 110)"
aws4auth.py,"{""type"": ""variable"", ""line"": 355, ""name"": ""content_hash"", ""value"": null, ""valueSrc"": ""hashlib.sha256"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 131 (char 130)"
test_requests_aws4auth.py,"{""type"": ""variable"", ""line"": 242, ""name"": ""key"", ""value"":  - Expecting value: line 1 column 59 (char 58)"
main.py,"{""type"": ""function_call"", ""line"": 750, ""name"": ""request.setRawHeader"", ""args"": [ - Expecting value: line 1 column 81 (char 80)"
png.py,"{""type"": ""function_call"", ""line"": 648, ""name"": ""write_chunk"", ""args"": [""outfile"",  - Expecting value: line 1 column 83 (char 82)"
wsgi_server.py,"{""type"": ""variable"", ""line"": 1, ""name"": ""BODY"", ""value"":  - Expecting value: line 1 column 58 (char 57)"
test_inout.py,"{""type"": ""variable"", ""line"": 161, ""name"": ""self._value"", ""value"":  - Expecting value: line 1 column 67 (char 66)"
file_util_test.py,"{""type"": ""function_call"", ""line"": 52, ""name"": ""self.assertEqual"", ""args"": [ - Expecting value: line 1 column 76 (char 75)"
components_test.py,"{""type"": ""function_call"", ""line"": 304, ""name"": ""self.assertEqual"", ""args"": [ - Expecting value: line 1 column 77 (char 76)"
streamlit_test.py,"{""type"": ""function_call"", ""line"": 189, ""name"": ""st.audio"", ""args"": [ - Expecting value: line 1 column 69 (char 68)"
hashing_test.py,"{""type"": ""variable"", ""line"": 320, ""name"": ""b1"", ""value"": null, ""valueSrc"": ""BytesIO"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 114 (char 113)"
upload_file_request_handler_test.py,"{""type"": ""variable"", ""line"": 60, ""name"": ""file"", ""value"": null, ""valueSrc"": ""UploadedFile"", ""isInput"": false, ""args"": [""image.png"",  - Expecting value: line 1 column 133 (char 132)"
server_test.py,"{""type"": ""variable"", ""line"": 329, ""name"": ""file"", ""value"": null, ""valueSrc"": ""UploadedFile"", ""isInput"": false, ""args"": [""file.txt"",  - Expecting value: line 1 column 133 (char 132)"
cli_test.py,"{""type"": ""variable"", ""line"": 92, ""name"": ""file_content"", ""value"":  - Expecting value: line 1 column 67 (char 66)"
hashing.py,"{""type"": ""variable"", ""line"": 57, ""name"": ""_CYCLE_PLACEHOLDER"", ""value"":  - Expecting value: line 1 column 73 (char 72)"
util.py,"{""type"": ""variable"", ""line"": 49, ""name"": ""file_bytes"", ""value"":  - Expecting value: line 1 column 65 (char 64)"
demos.py,"{""type"": ""variable"", ""line"": 159, ""name"": ""Z"", ""value"":  - Expecting value: line 1 column 57 (char 56)"
test_compress.py,"{""type"": ""dict"", ""line"": 18, ""name"": ""TEST_FILES"", ""value"": null, ""valueSrc"": ""initialization"", ""isInput"": false, ""keys"": [""COMPRESSABLE_FILE"", ""TOO_SMALL_FILE""], ""values"": [""a1000"",  - Expecting value: line 1 column 184 (char 183)"
tests.py,"{""type"": ""variable"", ""line"": 23, ""name"": ""version"", ""value"": null, ""valueSrc"": ""version.split"", ""isInput"": false, ""args"": [ - Expecting value: line 1 column 124 (char 123)"
